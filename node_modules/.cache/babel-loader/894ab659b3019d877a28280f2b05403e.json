{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/startstream.js\";\nimport React, { Component } from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FirebaseDatabaseMutation } from \"@react-firebase/database\";\nimport firebase from \"../config/firebaseconfig\"; //You can ignore this page.\n\nclass StartStream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      roomid: 1\n    };\n\n    this.generate = () => {\n      const roomId = Math.random() * 1000;\n      console.log(this.props.history.push(`/stream/${roomId}`));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    }, \"Your Room ID:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.roomid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Generate a Room\"));\n  }\n\n}\n\nexport default withRouter(StartStream);","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/startstream.js"],"names":["React","Component","ReactTags","Link","withRouter","FirebaseDatabaseMutation","firebase","StartStream","state","roomid","generate","roomId","Math","random","console","log","props","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,wBAAT,QAAyC,0BAAzC;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAEA;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAqFhCO,KArFgC,GAqF1B;AACFC,MAAAA,MAAM,EAAE;AADN,KArF0B;;AAAA,SAwFhCC,QAxFgC,GAwFrB,MAAM;AACb,YAAMC,MAAM,GAAGC,IAAI,CAACC,MAAL,KAAc,IAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,WAAUP,MAAO,EAA1C,CAAZ;AACH,KA3F+B;AAAA;;AA6FhCQ,EAAAA,MAAM,GAAI;AAEN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACU;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,eAEH;AAAQ,MAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFG,CAAP;AAIH;;AAnG+B;;AAuGpC,eAAeN,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport ReactTags from 'react-tag-autocomplete'\nimport { Link, withRouter } from 'react-router-dom';\nimport { FirebaseDatabaseMutation } from \"@react-firebase/database\";\nimport firebase from \"../config/firebaseconfig\";\n\n//You can ignore this page.\n\nclass StartStream extends Component {\n    \n    /*\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [\n                {name: \"biology\"}\n            ],\n            suggestions: [\n                {name: \"physics\"},\n                {name: \"chemistry\"}\n            ],\n            token: \"\",\n            sessionID: \"jglkdbjlkd\",\n            match: false,\n            public: false\n        }\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.storeInFirebase = this.storeInFirebase.bind(this);\n    }\n\n    handleDelete (i) {\n        const tags = this.state.tags.slice(0)\n        tags.splice(i, 1)\n        this.setState({ tags })\n    }\n     \n    handleAddition (tag) {\n        const tags = [].concat(this.state.tags, tag)\n        this.setState({ tags })\n    }\n\n    checkParameters() {\n        if (document.getElementById(\"match\").checked) {\n            this.setState({ match: true});\n        }\n        if (document.getElementById(\"public\").checked) {\n            this.setState({ public: true});\n        }\n    }\n\n    storeInFirebase = () => {\n        return firebase.firestore().collection(\"sessions\").doc(this.state.sessionID).set({\n            name: document.getElementById(\"name\").value,\n            description: document.getElementById(\"description\").value,\n            tags: this.state.tags,\n            host: firebase.auth().currentUser.uid,\n            match: this.state.match,\n            public: this.state.public\n        })\n    }\n\n    \n    handleSubmit = () => {\n        console.log(\"ok\");\n        fetch('/api/sessions', err => console.log(\"error\", err)\n        .then(res => res.json(), err => console.log(\"error\", err))\n        .then(connectionElements => this.setState({token: connectionElements[0], sessionID: connectionElements[1]}), () => console.log(\"Success\", this.state.token, this.state.sessionID))\n        .then(() => this.storeInFirebase())\n        .then(() => this.props.history.push(`/stream/1000`));\n    }\n    \n\n    \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input id=\"name\"></input>\n                <textarea id=\"description\"></textarea>\n                <ReactTags\n                    tags={this.state.tags}\n                    suggestions={this.state.suggestions}\n                    handleDelete={this.handleDelete.bind(this)}\n                    handleAddition={this.handleAddition.bind(this)} />\n                <button> Create a Room </button>\n                <input type=\"radio\" id=\"match\" placeholder=\"Match or not\"></input>\n                <input type=\"radio\" id=\"public\" placeholder=\"Public or not\"></input>\n            </form>\n        );\n    }\n    */\n    \n\n    \n    state={\n        roomid: 1\n    }\n    generate = () => {\n        const roomId = Math.random()*1000;\n        console.log(this.props.history.push(`/stream/${roomId}`))\n    }\n    \n    render () {\n\n        return <div>\n            Your Room ID:<input type=\"text\" value={this.state.roomid}/>\n            <button onClick={this.generate}>Generate a Room</button>\n        </div>\n    }\n\n}\n\nexport default withRouter(StartStream);\n"]},"metadata":{},"sourceType":"module"}