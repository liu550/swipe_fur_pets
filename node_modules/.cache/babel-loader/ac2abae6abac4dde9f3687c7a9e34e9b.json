{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/signup.js\";\nimport React, { Component } from 'react';\nimport './component.css';\nimport firebase from '../config/firebaseconfig';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Form, Button, Alert } from 'react-bootstrap'; //Redux\n\nimport { connect } from 'react-redux';\nimport { signUp } from '../redux/actions';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      profileurl: \"\"\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        firstname: document.getElementById(\"fn\").value,\n        lastname: document.getElementById(\"ln\").value,\n        email: document.getElementById(\"em\").value,\n        password: document.getElementById(\"pw\").value,\n        profileurl: `/profile/${document.getElementById(\"fn\").value}_${document.getElementById(\"ln\").value}_` + Math.random() * 1000000\n      });\n    };\n\n    this.handleFirstNameChange = e => {\n      e.preventDefault();\n      this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    this.handleLastNameChange = e => {\n      e.preventDefault();\n      this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    this.handleEmailChange = e => {\n      e.preventDefault();\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      e.preventDefault();\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      /*\n      this.setState({\n          first_name: document.getElementById(\"fn\").value,\n          last_name: document.getElementById(\"ln\").value,\n          email: document.getElementById(\"em\").value,\n          password: document.getElementById(\"pw\").value,\n          profile_url: `http://localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`\n      })\n      */\n\n      this.props.signUp(this.state, this.props.history);\n    };\n  }\n\n  /*\n  handleSubmit = (e) => {\n  e.preventDefault();\n  firebase.auth().createUserWithEmailAndPassword(document.getElementById(\"em\").value, document.getElementById(\"pw\").value)\n   //We should keep the \"then\" below in order to have a callback function that checks whether the profile url alreay exists in our database.\n  //If it does and the email has not been taken, it probably means the two users have the same name. So we can add a random\n  //number after the current profile url to distinguish it from the existing one. \n   //.then(() => this.setState({profileurl: `https:localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`}))\n  .then(() => firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n      first_name: document.getElementById(\"fn\").value,\n      last_name: document.getElementById(\"ln\").value,\n       //Still need to add validators to check (1) whether the email or the password has been taken and (2) whether the email is valid.\n      email: document.getElementById(\"em\").value,\n      password: document.getElementById(\"pw\").value,\n       //Profile url is basically just the domain name/profile/the cancatenation of the user's first name and last name.\n      //I set the value here no in the \"then\" above to save time.\n      profile_url: `http://localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`\n  })).then(() => this.props.history.push(`/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`));\n  }\n  */\n  render() {\n    const signUpStyle = {\n      listStyleType: 'none',\n      width: \"600px\",\n      //height: \"0.05em\",\n      padding: '100px',\n      marginLeft: \"540px\",\n      marginRight: \"500px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      borderRadius: \"3px\",\n      outline: 'none',\n      border: 'solid',\n      borderWidth: '10px',\n      cursor: 'pointer',\n      background: '#fceed1',\n      fontFamily: 'FiraSans',\n      fontSize: '30px',\n      color: '#000000' //form only:\n\n    };\n    const buttonStyle = {\n      height: \"50px\",\n      width: \"100px\",\n      margin: \"45px\",\n      backgroundColor: '#fd9535',\n      textAlign: 'center',\n      color: \"#fff\",\n      fontSize: \"32px\",\n      shape: \"circle\",\n      fontWeight: \"bold\"\n    };\n    const spanStyle = {\n      display: \"inline-block\"\n    };\n    const emailStyle = {\n      marginLeft: \"40px\",\n      marginRight: \"5px\"\n    };\n    const passwordStyle = {\n      marginLeft: \"10px\"\n    };\n    const {\n      authError\n    } = this.props;\n    return (\n      /*#__PURE__*/\n\n      /*\n          <div>\n              <Form>\n                  <Form.Group>\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control onChange={this.handleFormChange}></Form.Control>\n                  </Form.Group>\n                   <Form.Group>\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control onChange={this.handleFormChange}></Form.Control>\n                  </Form.Group>\n                   <Form.Group>\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control onChange={this.handleFormChange}></Form.Control>\n                  </Form.Group>  \n                   <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={this.handleFormChange}></Form.Control>\n                  </Form.Group>\n                  <div>\n                      hello\n                      {authError}\n                      { authError ? <p>{ authError }</p> : null}\n                  </div>\n                  <Button type=\"submit\">Register</Button>               \n              </Form>\n          </div>\n          */\n      React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        style: {\n          marginBottom: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, \"First name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: \"120px\",\n          height: \"30px\"\n        },\n        id: \"fn\",\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, \"Last name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: \"120px\",\n          height: \"30px\"\n        },\n        id: \"ln\",\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: \"120px\",\n          height: \"30px\",\n          marginLeft: \"45px\"\n        },\n        id: \"em\",\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: \"120px\",\n          height: \"30px\",\n          marginLeft: \"10px\"\n        },\n        id: \"pw\",\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        style: {\n          width: \"120px\"\n        },\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, \"Sign up\"), authError ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth_alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 35\n        }\n      }, authError) : null)\n    );\n  }\n\n}\n/*\n                    <span>Email</span>\n                    <input id=\"em\" onChange={this.handleChange} required></input>\n\n                    <span>Password</span>\n                    <input id=\"pw\" onChange={this.handleChange} required></input>\n*/\n\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signUp\n})(withRouter(SignUp));","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/signup.js"],"names":["React","Component","firebase","Redirect","withRouter","Form","Button","Alert","connect","signUp","SignUp","state","firstname","lastname","email","password","profileurl","handleChange","e","preventDefault","setState","document","getElementById","value","Math","random","handleFirstNameChange","target","handleLastNameChange","handleEmailChange","handlePasswordChange","handleSubmit","props","history","render","signUpStyle","listStyleType","width","padding","marginLeft","marginRight","textAlign","fontWeight","borderRadius","outline","border","borderWidth","cursor","background","fontFamily","fontSize","color","buttonStyle","height","margin","backgroundColor","shape","spanStyle","display","emailStyle","passwordStyle","authError","marginBottom","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAGA,MAAMC,MAAN,SAAqBT,SAArB,CAA8B;AAAA;AAAA;AAAA,SAE1BU,KAF0B,GAElB;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,UAAU,EAAE;AALR,KAFkB;;AAAA,SAU1BC,YAV0B,GAUVC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAES,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAD/B;AAEVV,QAAAA,QAAQ,EAAEQ,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAF9B;AAGVT,QAAAA,KAAK,EAAEO,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAH3B;AAIVR,QAAAA,QAAQ,EAAEM,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAJ9B;AAKVP,QAAAA,UAAU,EAAG,YAAWK,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAAM,IAAGF,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAAM,GAAvF,GAA4FC,IAAI,CAACC,MAAL,KAAc;AAL5G,OAAd;AAOH,KAnByB;;AAAA,SAqB1BC,qBArB0B,GAqBDR,CAAD,IAAO;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAEM,CAAC,CAACS,MAAF,CAASJ;AADV,OAAd;AAGH,KA1ByB;;AAAA,SA4B1BK,oBA5B0B,GA4BFV,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAEK,CAAC,CAACS,MAAF,CAASJ;AADT,OAAd;AAGH,KAjCyB;;AAAA,SAmC1BM,iBAnC0B,GAmCLX,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAEI,CAAC,CAACS,MAAF,CAASJ;AADN,OAAd;AAGH,KAxCyB;;AAAA,SA0C1BO,oBA1C0B,GA0CFZ,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAEG,CAAC,CAACS,MAAF,CAASJ;AADT,OAAd;AAGH,KA/CyB;;AAAA,SAiD1BQ,YAjD0B,GAiDVb,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA;;;;;;;;;;AASA,WAAKa,KAAL,CAAWvB,MAAX,CAAkB,KAAKE,KAAvB,EAA8B,KAAKqB,KAAL,CAAWC,OAAzC;AACH,KA7DyB;AAAA;;AA+D1B;;;;;;;;;;;;;;;;;;;;AAyBDC,EAAAA,MAAM,GAAE;AAGP,UAAMC,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,MADC;AAEhBC,MAAAA,KAAK,EAAE,OAFS;AAGhB;AACAC,MAAAA,OAAO,EAAE,OAJO;AAKhBC,MAAAA,UAAU,EAAE,OALI;AAMhBC,MAAAA,WAAW,EAAE,OANG;AAOhBC,MAAAA,SAAS,EAAE,QAPK;AAQhBC,MAAAA,UAAU,EAAE,MARI;AAShBC,MAAAA,YAAY,EAAE,KATE;AAUhBC,MAAAA,OAAO,EAAE,MAVO;AAWhBC,MAAAA,MAAM,EAAE,OAXQ;AAYhBC,MAAAA,WAAW,EAAE,MAZG;AAahBC,MAAAA,MAAM,EAAE,SAbQ;AAchBC,MAAAA,UAAU,EAAE,SAdI;AAehBC,MAAAA,UAAU,EAAE,UAfI;AAgBhBC,MAAAA,QAAQ,EAAE,MAhBM;AAiBhBC,MAAAA,KAAK,EAAE,SAjBS,CAkBhB;;AAlBgB,KAApB;AAqBA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBhB,MAAAA,KAAK,EAAE,OAFS;AAGhBiB,MAAAA,MAAM,EAAE,MAHQ;AAIhBC,MAAAA,eAAe,EAAE,SAJD;AAKhBd,MAAAA,SAAS,EAAE,QALK;AAMhBU,MAAAA,KAAK,EAAE,MANS;AAOhBD,MAAAA,QAAQ,EAAE,MAPM;AAQhBM,MAAAA,KAAK,EAAE,QARS;AAShBd,MAAAA,UAAU,EAAE;AATI,KAApB;AAYA,UAAMe,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE;AADK,KAAlB;AAIA,UAAMC,UAAU,GAAG;AACfpB,MAAAA,UAAU,EAAE,MADG;AAEfC,MAAAA,WAAW,EAAE;AAFE,KAAnB;AAKA,UAAMoB,aAAa,GAAG;AAClBrB,MAAAA,UAAU,EAAE;AADM,KAAtB;AAKA,UAAM;AAAEsB,MAAAA;AAAF,QAAgB,KAAK7B,KAA3B;AAEA;AAAA;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BI;AAAM,QAAA,QAAQ,EAAE,KAAKD,YAArB;AAAmC,QAAA,KAAK,EAAE;AAAE+B,UAAAA,YAAY,EAAE;AAAhB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAO,QAAA,KAAK,EAAE;AAAEzB,UAAAA,KAAK,EAAE,OAAT;AAAkBgB,UAAAA,MAAM,EAAE;AAA1B,SAAd;AAAkD,QAAA,EAAE,EAAC,IAArD;AAA2D,QAAA,QAAQ,EAAE,KAAKpC,YAA1E;AAAwF,QAAA,QAAQ,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAO,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE,OAAT;AAAkBgB,UAAAA,MAAM,EAAE;AAA1B,SAAd;AAAkD,QAAA,EAAE,EAAC,IAArD;AAA0D,QAAA,QAAQ,EAAE,KAAKpC,YAAzE;AAAuF,QAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAFJ,eAWI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE,OAAT;AAAkBgB,UAAAA,MAAM,EAAE,MAA1B;AAAkCd,UAAAA,UAAU,EAAE;AAA9C,SAAd;AAAsE,QAAA,EAAE,EAAC,IAAzE;AAA8E,QAAA,QAAQ,EAAE,KAAKtB,YAA7F;AAA2G,QAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,eAKI;AAAO,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE,OAAT;AAAkBgB,UAAAA,MAAM,EAAE,MAA1B;AAAkCd,UAAAA,UAAU,EAAE;AAA9C,SAAd;AAAsE,QAAA,EAAE,EAAC,IAAzE;AAA8E,QAAA,QAAQ,EAAE,KAAKtB,YAA7F;AAA2G,QAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAXJ,eAoBI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE;AAAT,SAA/C;AAAmE,QAAA,KAAK,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBJ,EAsBUwB,SAAS,gBAAG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BA,SAA9B,CAAH,GAAqD,IAtBxE;AAhCR;AAyDH;;AArM6B;AAyM9B;;;;;;;;;AAUA,MAAME,eAAe,GAAIpD,KAAD,IAAW;AAC/B,SAAO;AACHqD,IAAAA,IAAI,EAAErD,KAAK,CAACT,QAAN,CAAe8D,IADlB;AAEHH,IAAAA,SAAS,EAAElD,KAAK,CAACqD,IAAN,CAAWH;AAFnB,GAAP;AAIH,CALD;;AAOA,eAAerD,OAAO,CAClBuD,eADkB,EACD;AAAEtD,EAAAA;AAAF,CADC,CAAP,CAEbL,UAAU,CAACM,MAAD,CAFG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './component.css';\nimport firebase from '../config/firebaseconfig';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Form, Button, Alert } from 'react-bootstrap'\n//Redux\nimport { connect } from 'react-redux';\nimport { signUp } from '../redux/actions';\n\n\nclass SignUp extends Component{\n\n    state = {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\",\n        profileurl: \"\",\n    };\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            firstname: document.getElementById(\"fn\").value,\n            lastname: document.getElementById(\"ln\").value,\n            email: document.getElementById(\"em\").value,\n            password: document.getElementById(\"pw\").value,\n            profileurl: `/profile/${document.getElementById(\"fn\").value}_${document.getElementById(\"ln\").value}_` + Math.random()*1000000\n        })\n    }\n\n    handleFirstNameChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            firstname: e.target.value\n        })\n    }\n\n    handleLastNameChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            lastname: e.target.value\n        })\n    }\n\n    handleEmailChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePasswordChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        /*\n        this.setState({\n            first_name: document.getElementById(\"fn\").value,\n            last_name: document.getElementById(\"ln\").value,\n            email: document.getElementById(\"em\").value,\n            password: document.getElementById(\"pw\").value,\n            profile_url: `http://localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`\n        })\n        */\n        this.props.signUp(this.state, this.props.history);\n    }\n\n    /*\n   handleSubmit = (e) => {\n    e.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(document.getElementById(\"em\").value, document.getElementById(\"pw\").value)\n\n    //We should keep the \"then\" below in order to have a callback function that checks whether the profile url alreay exists in our database.\n    //If it does and the email has not been taken, it probably means the two users have the same name. So we can add a random\n    //number after the current profile url to distinguish it from the existing one. \n\n    //.then(() => this.setState({profileurl: `https:localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`}))\n    .then(() => firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n        first_name: document.getElementById(\"fn\").value,\n        last_name: document.getElementById(\"ln\").value,\n\n        //Still need to add validators to check (1) whether the email or the password has been taken and (2) whether the email is valid.\n        email: document.getElementById(\"em\").value,\n        password: document.getElementById(\"pw\").value,\n\n        //Profile url is basically just the domain name/profile/the cancatenation of the user's first name and last name.\n        //I set the value here no in the \"then\" above to save time.\n        profile_url: `http://localhost:3000/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`\n    })).then(() => this.props.history.push(`/profile/${document.getElementById(\"fn\").value}${document.getElementById(\"ln\").value}`));\n}\n*/\n      \n   render(){\n\n    \n    const signUpStyle = {\n        listStyleType: 'none',\n        width: \"600px\",\n        //height: \"0.05em\",\n        padding: '100px',\n        marginLeft: \"540px\",\n        marginRight: \"500px\",\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        borderRadius: \"3px\",\n        outline: 'none',\n        border: 'solid',\n        borderWidth: '10px',\n        cursor: 'pointer',\n        background: '#fceed1',\n        fontFamily: 'FiraSans',\n        fontSize: '30px',\n        color: '#000000'\n        //form only:\n\n    }\n    const buttonStyle = {\n        height: \"50px\",\n        width: \"100px\",\n        margin: \"45px\",\n        backgroundColor: '#fd9535',\n        textAlign: 'center',\n        color: \"#fff\",\n        fontSize: \"32px\",\n        shape: \"circle\",\n        fontWeight: \"bold\",\n    }\n\n    const spanStyle = {\n        display: \"inline-block\"\n    }\n\n    const emailStyle = {\n        marginLeft: \"40px\",\n        marginRight: \"5px\"\n    }\n\n    const passwordStyle = {\n        marginLeft: \"10px\"\n    }\n    \n\n    const { authError } = this.props;\n\n    return(\n        /*\n            <div>\n                <Form>\n                    <Form.Group>\n                      <Form.Label>First name</Form.Label>\n                      <Form.Control onChange={this.handleFormChange}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Last name</Form.Label>\n                      <Form.Control onChange={this.handleFormChange}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Email address</Form.Label>\n                      <Form.Control onChange={this.handleFormChange}></Form.Control>\n                    </Form.Group>  \n\n                    <Form.Group>\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control onChange={this.handleFormChange}></Form.Control>\n                    </Form.Group>\n                    <div>\n                        hello\n                        {authError}\n                        { authError ? <p>{ authError }</p> : null}\n                    </div>\n                    <Button type=\"submit\">Register</Button>               \n                </Form>\n            </div>\n            */\n            <form onSubmit={this.handleSubmit} style={{ marginBottom: \"20px\"}}>\n               \n                <div className=\"form-inline\">\n                    <span>First name:</span>\n                    <input style={{ width: \"120px\", height: \"30px\" }} id=\"fn\"  onChange={this.handleChange} required></input>\n                    \n                    <span>Last name:</span>\n                    <input style={{ width: \"120px\", height: \"30px\" }} id=\"ln\" onChange={this.handleChange} required></input>\n                    \n                </div>\n\n                <div className=\"form-inline\">\n                    <span>Email:</span>\n                    <input style={{ width: \"120px\", height: \"30px\", marginLeft: \"45px\" }} id=\"em\" onChange={this.handleChange} required></input>\n\n                    <span>Password:</span>\n                    <input style={{ width: \"120px\", height: \"30px\", marginLeft: \"10px\" }} id=\"pw\" onChange={this.handleChange} required></input>\n\n                </div>\n\n                <Button variant=\"success\" type=\"submit\" style={{ width: \"120px\" }} color=\"green\">Sign up</Button>\n                  \n                    { authError ? <div className=\"auth_alert\">{ authError }</div> : null}\n            </form>\n    )\n}\n}\n\n\n/*\n                    <span>Email</span>\n                    <input id=\"em\" onChange={this.handleChange} required></input>\n\n                    <span>Password</span>\n                    <input id=\"pw\" onChange={this.handleChange} required></input>\n*/\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nexport default connect(\n    mapStateToProps, { signUp }\n)(withRouter(SignUp));"]},"metadata":{},"sourceType":"module"}