{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/waitingroom.js\";\nimport React, { Component } from 'react';\nimport './component.css';\nimport firebase from '../config/firebaseconfig';\nimport { Container, Navbar } from 'react-bootstrap';\nimport Card from './design/card';\nimport Filter from './design/filter';\nimport '../styles/waitingroom.css';\nimport { thisTypeAnnotation } from '@babel/types';\nimport NavBar from './navbar';\nimport ChatBox from './chatbox.js';\nimport LoggedOutNavbar from './loggedoutnavbar';\nimport '../styles/card.css';\nimport SignUp from './signup';\nimport LogIn from './login';\nimport { Button, Modal } from 'react-bootstrap';\nimport MatchingBox from './matchingbox.js';\nimport MatchingWindow from './matchingwindow.js';\nimport { Helmet } from \"react-helmet\"; //Redux\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { submitTicket, startMatching, groupMessaging } from '../redux/actions';\nimport Selection from '@simonwep/selection-js'; //var selection = require('@simonwep/selection-js');\n\n/*\n    selection = new Selection({\n  class: \"selection-area\",\n  mode: \"touch\",\n  singleClick: \"true\",\n  selectables: [\"schedule\"],\n  boundaries: [\"schedule\"]\n})\n\nselection.on(\"start\", ({inst, selected, oe}) => {\n  for (const el of selected) {\n    el.classList.remove(\"selected\");\n    inst.removeFromSelection(el);\n  }\n  inst.clearSelection();\n})\n.on(\"move\", ({changed: {removed, added}}) => {\n  for (const el of added) {\n    el.classList.add(\"selected\");\n  }\n  for (const el of removed) {\n    el.classList.remove(\"selected\");\n  }\n})\n*/\n\nconst selection = Selection.create({\n  class: \"selection-area\",\n  mode: \"touch\",\n  singleClick: \"true\",\n  selectables: [\".slot\"],\n  boundaries: [\".schedule\"]\n}).on(\"start\", ({\n  inst,\n  selected,\n  oe\n}) => {\n  // Remove class if the user isn't pressing the control key or ⌘ key\n  console.log('start');\n\n  if (!oe.ctrlKey && !oe.metaKey) {\n    // Unselect all elements\n    for (const el of selected) {\n      el.classList.remove(\"selected\");\n      inst.removeFromSelection(el);\n    } // Clear previous selection\n\n\n    inst.clearSelection();\n  }\n}).on(\"move\", ({\n  changed: {\n    removed,\n    added\n  }\n}) => {\n  // Add a custom class to the elements that where selected.\n  for (const el of added) {\n    /*\n    if (el.hour === \"0:00\") {\n      el.classList.add(\"selected\");\n    }\n    */\n    el.classList.add(\"selected\");\n    selected.push(el);\n  } // Remove the class from elements that where removed\n  // since the last selection\n\n\n  for (const el of removed) {\n    el.classList.remove(\"selected\");\n    selected.indexOf(el);\n    selected.splice(el, 1);\n  }\n}).on(\"stop\", ({\n  inst\n}) => {\n  console.log('stop', selection.getSelection()); //const selected = selection.getSelection();\n\n  console.log(selected);\n  var current = new Array();\n  /*\n  var temp = new Array();  \n  temp.push(selected[0]);\n  current.push(temp);\n  console.log(current);\n  */\n\n  if (selected.length > 1) {\n    for (var i = 0; i < selected.length; i++) {\n      console.log(i + \" \" + selected[i]);\n      var checked = false;\n\n      for (var j = 0; j < current.length; j++) {\n        console.log(selected[i].dataset.date + \" vs \" + current[j][0].dataset.date);\n\n        if (selected[i].dataset.date === current[j][0].dataset.date) {\n          current[j].push(selected[i]);\n          checked = true;\n        }\n      }\n\n      if (checked === false) {\n        var temp = new Array();\n        temp.push(selected[i]);\n        current.push(temp);\n        console.log(temp);\n      }\n\n      console.log(current);\n    }\n\n    for (var i = 0; i < current.length; i++) {\n      current[i].sort(function (left, right) {\n        return left.dataset.start - right.dataset.start;\n      });\n    }\n  }\n\n  currentTimeSlots = current;\n  console.log(currentTimeSlots); // Remember selection in case the user wants to add smth in the next one\n\n  inst.keepSelection();\n});\nvar selected = [];\nvar currentTimeSlots = [];\nconst personalities = [\"hard-working\", \"helpful/kind/altruistic\", \"outgoing/social\", \"knowledgeable\", \"ambitious\", \"thoughtful\", \"observant\", \"introvert\", \"humble\", \"imaginative\", \"impartial\", \"intelligent\", \"creative\", \"ethics\", \"social justice\", \"insightful/perceptive\", \"energetic\", \"smart\", \"curious\", \"open-minded\", \"meticulous\", \"logics\", \"agreeable\", \"competent\", \"wealth\", \"social influence/recognition\", \"geek\", \"executive\", \"leader\", \"adventurer\", \"thinker\", \"analyst\", \"planner\", \"artist\", \"designer\"];\nconst filters = [\"entrepreneurship\", \"finance/investing/vc\", \"business analysis/consulting\", \"software engineering\", \"data analysis/science\", \"ui/ux design\", \"artificial intelligence\", \"electrical engineering\", \"mechanical engineering\", \"biomedical engineering\", \"mathematics\", \"physics\", \"chemistry\", \"psychology\", \"economics\", \"history\", \"politics\", \"law\", \"healthcare\", \"arts\"];\nconst taskfilters = ['startup/personal project', 'work/internship', 'study', 'interview preparation', 'exam preparation', 'reading books', 'research', 'brainstorming', 'finance/investing/vc', 'business analysis/consulting', \"software engineering\", \"data analysis/science\", \"ui/ux design\", \"artificial intelligence\", \"electrical engineering\", \"mechanical engineering\", \"biomedical engineering\", \"mathematics\", \"physics\", \"chemistry\", \"psychology\", \"economics\", \"history\", \"politics\", \"law\", \"healthcare\", \"arts\"];\nconst timeSegments = [\"0:00\", \"6:00\", \"12:00\", \"18:00\"];\n\nclass WaitingRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filters: [],\n      tasks: [],\n      show: false,\n      showmatching: false,\n      routeguarding: false,\n      description: \"\",\n      reduxtasks: [],\n      personalities: [],\n      genderpreference: \"\",\n      //showmatchingwindow: false,\n      showgroupmessaging: false,\n      currentprofilelist: [],\n      number: 0,\n      showmatchingwindow: false,\n      interestFilterVisibility: false,\n      taskFilterVisibility: false,\n      personalityFilterVisibility: false,\n      changeMatchingButton: false,\n      matching: {},\n      availableTimes: {},\n      scheduleVisibility: false,\n      todaySchedule: {},\n      selecting: false,\n      startTime: {\n        date: \"\",\n        hour: \"\"\n      },\n      endTime: {\n        date: \"\",\n        hour: \"\"\n      },\n      selectedSlots: []\n    };\n\n    this.buildList = async users => {\n      var profilelist = [];\n      var i = 0;\n\n      while (users && i < users.length) {\n        const userprofile = {\n          id: users[i].id,\n          profile: users[i]\n        };\n        profilelist.push(userprofile);\n        i++;\n      }\n\n      return profilelist;\n    };\n\n    this.clickSignUp = e => {\n      e.preventDefault();\n      this.setState({\n        signup: true\n      });\n    };\n\n    this.clickLogIn = e => {\n      e.preventDefault();\n      this.setState({\n        signup: false\n      });\n    };\n\n    this.handleShow = e => {\n      e.preventDefault();\n      const {\n        auth\n      } = this.props;\n\n      if (!auth.uid) {\n        this.setState({\n          routeguarding: true\n        });\n      } else this.setState({\n        show: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleCloseRedirect = () => {\n      this.setState({\n        routeguarding: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.submitTicket(this.state);\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleChange = e => {\n      e.stopPropagation();\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.updateReduxTasks = e => {\n      e.preventDefault();\n\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.reduxtasks, e.target.id];\n        this.setState({\n          reduxtasks: helper\n        });\n        e.target.className = \"selected-button\";\n      } else {\n        const newfilters = this.state.reduxtasks.filter(tag => tag !== e.target.id);\n        this.setState({\n          reduxtasks: newfilters\n        });\n        e.target.className = \"unselected-button\";\n      }\n    };\n\n    this.onlyFilters = async e => {\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.filters, e.target.id];\n        this.setState({\n          filters: helper\n        });\n        e.target.className = \"selected-button\";\n        return helper;\n      } else {\n        const newfilters = this.state.filters.filter(tag => tag !== e.target.id);\n        this.setState({\n          filters: newfilters\n        });\n        e.target.className = \"unselected-button\";\n        return newfilters;\n      }\n    };\n\n    this.filtersUpdateList = newfilters => {\n      const {\n        users\n      } = this.props;\n      var newprofilelist = [];\n      var i = 0;\n\n      while (i < users.length) {\n        if (this.state.filters.every(t => users && users[i].areas_of_interest && users[i].areas_of_interest.includes(t)) && this.state.tasks.every(t => users[i].tasks_tags && users[i].tasks_tags.includes(t)) && this.state.personalities.every(t => users[i].personalities && users[i].personalities.includes(t))) {\n          newprofilelist.push({\n            id: users[i].id,\n            profile: users[i]\n          });\n        }\n\n        i++;\n      }\n\n      this.setState({\n        currentprofilelist: newprofilelist\n      });\n    };\n\n    this.updateFilters = async e => {\n      e.preventDefault();\n      this.onlyFilters(e).then(newfilters => {\n        this.filtersUpdateList(newfilters);\n      });\n    };\n\n    this.onlyTasks = async e => {\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.tasks, e.target.id];\n        this.setState({\n          tasks: helper\n        });\n        e.target.className = \"selected-button\";\n        return helper;\n      } else {\n        const newfilters = this.state.tasks.filter(tag => tag !== e.target.id);\n        this.setState({\n          tasks: newfilters\n        });\n        e.target.className = \"unselected-button\";\n        return newfilters;\n      }\n    };\n\n    this.tasksUpdateList = newtasks => {\n      const {\n        users\n      } = this.props;\n      var newprofilelist = [];\n      var i = 0;\n\n      while (i < users.length) {\n        if (newtasks.every(t => users[i].tasks_tags && users[i].tasks_tags.includes(t)) && this.state.filters.every(t => users[i].areas_of_interest && users[i].areas_of_interest.includes(t))) {\n          newprofilelist.push({\n            id: users[i].id,\n            profile: users[i]\n          });\n        }\n\n        i++;\n      }\n\n      this.setState({\n        currentprofilelist: newprofilelist\n      });\n    };\n\n    this.updateTasks = async e => {\n      e.preventDefault();\n      return this.onlyTasks(e).then(newtasks => {\n        this.filtersUpdateList(newtasks);\n      });\n    };\n\n    this.onlyPersonalities = async e => {\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.personalities, e.target.id];\n        this.setState({\n          personalities: helper\n        });\n        e.target.className = \"selected-button\";\n        return helper;\n      } else {\n        const newfilters = this.state.personalities.filter(tag => tag !== e.target.id);\n        this.setState({\n          personalities: newfilters\n        });\n        e.target.className = \"unselected-button\";\n        return newfilters;\n      }\n    };\n\n    this.updatePersonalities = async e => {\n      e.preventDefault();\n      return this.onlyPersonalities(e).then(newtasks => {\n        this.filtersUpdateList(newtasks);\n      });\n    };\n\n    this.showMatching = e => {\n      e.preventDefault();\n      const {\n        auth\n      } = this.props;\n\n      if (!auth.uid) {\n        this.setState({\n          routeguarding: true\n        });\n      } else {\n        this.setState({\n          showmatching: true\n        });\n      }\n    };\n\n    this.handleMatching = e => {\n      e.preventDefault();\n\n      if (this.state.genderpreference !== \"\") {\n        this.props.startMatching(this.props.auth.uid, this.props.profile, this.props.profile.gender, this.state.genderpreference);\n        this.setState({\n          showmatching: false,\n          showmatchingwindow: true\n        });\n      }\n    };\n\n    this.closeMatching = () => {\n      this.setState({\n        showmatching: false\n      });\n    };\n\n    this.closeMatchingWindow = () => {\n      this.setState({\n        showmatchingwindow: false\n      });\n    };\n\n    this.showGroupMessaging = e => {\n      e.preventDefault();\n\n      if (!this.props.auth.uid) {\n        this.setState({\n          routeguarding: true\n        });\n      } else this.setState({\n        showgroupmessaging: true\n      });\n    };\n\n    this.closeMessaging = () => {\n      this.setState({\n        showgroupmessaging: false\n      });\n    };\n\n    this.createMessage = time => {\n      let message = {};\n      message = {\n        time: time,\n        from: this.props.auth.uid,\n        content: document.getElementById(\"message\").value\n      };\n      return message;\n    };\n\n    this.handleMessaging = e => {\n      e.preventDefault();\n\n      if (this.state.number !== 0) {\n        const date = new Date();\n        const time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes();\n        const message = this.createMessage(time);\n        this.props.groupMessaging(this.state.currentprofilelist, this.state.number, message, this.props.profile);\n      }\n    };\n\n    this.showInterestFilter = e => {\n      e.preventDefault();\n      this.setState({\n        interestFilterVisibility: true\n      });\n    };\n\n    this.closeInterestFilter = () => {\n      this.setState({\n        interestFilterVisibility: false\n      });\n    };\n\n    this.showTaskFilter = e => {\n      e.preventDefault();\n      this.setState({\n        taskFilterVisibility: true\n      });\n    };\n\n    this.closeTaskFilter = () => {\n      this.setState({\n        taskFilterVisibility: false\n      });\n    };\n\n    this.showPersonalityFilter = e => {\n      e.preventDefault();\n      this.setState({\n        personalityFilterVisibility: true\n      });\n    };\n\n    this.closePersonalityFilter = () => {\n      this.setState({\n        personalityFilterVisibility: false\n      });\n    };\n\n    this.handleTryAgain = e => {\n      e.preventDefault();\n      this.setState({\n        showmatchingwindow: false,\n        showmatching: true\n      });\n    };\n\n    this.changeMatching = () => {\n      document.getElementById(\"matching-button\").className = \"hovered-buttons\";\n      this.setState({\n        changeMatchingButton: true\n      });\n    };\n\n    this.unchangeMatching = () => {\n      document.getElementById(\"matching-button\").className = \"initial-buttons\";\n      this.setState({\n        changeMatchingButton: false\n      });\n    };\n\n    this.changeMessaging = () => {\n      document.getElementById(\"messaging-button\").className = \"hovered-buttons\";\n      this.setState({\n        changeMessagingButton: true\n      });\n    };\n\n    this.unchangeMessaging = () => {\n      document.getElementById(\"messaging-button\").className = \"initial-buttons\";\n      this.setState({\n        changeMessagingButton: false\n      });\n    };\n\n    this.showSchedule = e => {\n      e.preventDefault();\n      this.setState({\n        scheduleVisibility: true\n      });\n    };\n\n    this.closeSchedule = () => {\n      this.setState({\n        scheduleVisibility: false\n      });\n    };\n\n    this.renderSegment = (segment, date) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 14\n        }\n      }, date.getDate());\n    };\n\n    this.renderSlots = slot => {\n      console.log(slot.date.getDate() + slot.hour);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 14\n        }\n      }, slot.date, \" - \", slot.hour);\n    };\n\n    this.startSelecting = e => {\n      e.preventDefault();\n      this.setState({\n        selecting: true,\n        startTime: e.target.element,\n        selectedSlots: [e.target.element]\n      });\n    };\n\n    this.keepSelecting = e => {\n      e.preventDefault();\n\n      if (this.state.selecting === true) {\n        const slots = [...this.state.selectedSlots, e.target.element];\n        this.setState({\n          selectedSlots: slots\n        });\n      }\n    };\n\n    this.finishSelecting = e => {\n      e.preventDefault();\n    };\n\n    this.displaySelectedTimeSlots = date => {\n      var start = date[0].start;\n      var end = date[date.length - 1].end;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 12\n        }\n      }, start, \" - \", end, \", \", date[0].date);\n    };\n  }\n\n  componentDidMount() {\n    /*\n          setTimeout(() => {\n          if (localStorage.getItem(\"matching\") === \"true\") {\n            if (localStorage.getItem(\"pool\") === \"false\" ) {\n              firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n                matching_seekers: firebase.firestore.FieldValue.arrayRemove({id: this.props.auth.uid, gender: localStorage.getItem(\"gender\"), gender_preference: localStorage.getItem(\"genderpreference\")})\n              })\n            }\n            else {\n              firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n              .then((doc) => {\n                const found = doc.data().matching_pool.find(element => element.id === this.props.auth.uid);\n                firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n                  matching_pool: firebase.firestore.FieldValue.arrayRemove(found)\n                })\n              })\n            }\n            localStorage.setItem(\"matching\", false);\n          }\n          }, 1000)\n        */\n    var currentSchedule = new Array();\n    var todaySchedule = new Array();\n    var i = 0;\n    var d = new Date();\n\n    for (i = 0; i < 7; i++) {\n      //console.log(d.getDate());\n      console.log(d.getDate());\n      currentSchedule.push(new Date(d));\n      d.setDate(d.getDate() + 1);\n    }\n\n    for (var i = 0; i < timeSegments.length - 1; i++) {\n      var row = new Array();\n\n      for (var j = 0; j < 7; j++) {\n        row.push({\n          date: currentSchedule[j],\n          start: timeSegments[i],\n          end: timeSegments[i + 1]\n        });\n      }\n\n      todaySchedule.push(row);\n    }\n\n    this.setState({\n      todaySchedule: todaySchedule\n    });\n    setTimeout(() => {\n      if (localStorage.getItem(\"matching\") === \"true\") {\n        if (localStorage.getItem(\"pool\") === \"false\") {\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").collection(\"matching_seekers\").doc(this.props.auth.uid).delete();\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n            count: firebase.firestore.FieldValue.increment(-1)\n          });\n        } else {\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").collection(\"matching_pool\").doc(this.props.auth.uid).delete();\n          firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n            count: firebase.firestore.FieldValue.increment(-1)\n          });\n        }\n\n        localStorage.setItem(\"matching\", false);\n      }\n    }, 1000);\n    const {\n      users,\n      profile\n    } = this.props;\n    this.buildList(users).then(profilelist => {\n      this.setState({\n        currentprofilelist: profilelist //showmatchingwindow: true\n\n      });\n    });\n    this.setState({\n      description: profile.tasks_description,\n      reduxtasks: profile.tasks_tags\n    });\n  }\n  /*\n  deleteMatching = () => {\n    console.log(\"enter this part\");\n    if (localStorage.getItem(\"matching\") === \"true\") {\n      console.log(localStorage.getItem(\"pool\"));\n      if (localStorage.getItem(\"pool\") === \"false\" ) {\n        console.log(this.props.auth.uid);\n        firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n          matching_seekers: firebase.firestore.FieldValue.arrayRemove({id: this.props.auth.uid, gender: localStorage.getItem(\"gender\"), gender_preference: localStorage.getItem(\"genderpreference\")})\n        })\n      }\n      else {\n        firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n        .then((doc) => {\n          const found = doc.data().matching_pool.find(element => element.id === this.props.auth.uid);\n          firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n            matching_pool: firebase.firestore.FieldValue.arrayRemove(found)\n          })\n        })\n      }\n      localStorage.setItem(\"matching\", false);\n    }\n  }\n    setupBeforeUnloadListener() {\n    window.addEventListener(\"beforeunload\", (ev) => {\n      ev.preventDefault();\n      console.log(\"enter this part\");\n      return this.deleteMatching();\n    });\n  }\n  */\n\n\n  componentDidUpdate(prevprops, prevstate) {\n    /*\n    console.log(prevstate.matching);\n    if (prevprops.matching !== this.props.matching) {\n      this.setState({\n        matching: this.props.matching\n      })\n    }\n    if (prevstate.matching.going === true) {\n      if (prevstate.matching.pool === false) {\n        firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n          matching_seekers: firebase.firestore.FieldValue.arrayRemove(prevstate.matching.map)\n        })\n      }\n      else {\n        firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n        .then((doc) => {\n          const pool = doc.data().matching_pool;\n          const found = pool.find(element => element.id === this.props.auth.uid);\n          const index = pool.indexOf(found);\n          if (index > -1) {\n            pool.splice(index, 1);\n          }\n          firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n            matching_pool: pool\n          })\n        })\n      }\n    }\n    */\n    const d = new Date();\n\n    if (d.getDate() != this.state.todaySchedule[0][0].date.getDate()) {\n      const currentSchedule = {};\n      var i = 0;\n\n      for (i = 0; i < 6; i++) {\n        d.setDate(d.getDate() + i);\n        currentSchedule.push(d);\n      }\n\n      this.setState({\n        todaySchedule: currentSchedule\n      });\n    }\n\n    if (prevprops.profile !== this.props.profile) {\n      const {\n        users,\n        profile\n      } = this.props;\n      this.setState({\n        description: profile.tasks_description,\n        reduxtasks: profile.tasks_tags\n      });\n    }\n  }\n\n  componentWillReceiveProps() {\n    const {\n      users,\n      profile\n    } = this.props;\n    var profilelist = [];\n    users && users.map(user => {\n      const userprofile = {\n        id: user.id,\n        profile: user\n      };\n      profilelist.push(userprofile);\n    });\n    this.setState({\n      currentprofilelist: profilelist\n    });\n  }\n  /*\n      shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.isFavourite != this.props.isFavourite;\n      }\n      */\n\n  /*\n  updateFilters = (e) => {\n    e.preventDefault();\n   if (e.target.className === \"unselected-button\") {\n    const helper = this.state.filters;\n    helper.push(e.target.id);\n    this.setState({ filters : helper });\n    e.target.className = \"selected-button\";\n   }\n    else {\n      const newfilters = this.state.filters.filter(tag => tag !== e.target.id);\n      this.setState({ filters : newfilters });\n      e.target.className = \"unselected-button\";\n    }\n  }\n  */\n\n\n  /*\n      renderCards(index, users) {\n        let card = users[index];\n        let cardid = card.id;\n  \n        if(this.state.filters.length === 0 && this.state.tasks.length === 0) {\n          return (\n            <Card info={card} id={cardid}/>\n          );\n        }\n        else if (this.state.filters.length !== 0 && this.state.tasks.length === 0) {\n          if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t))) {\n            return (\n              <Card info={card} id={cardid}/>\n            )\n          }\n        }\n        else if (this.state.filters.length !== 0 && this.state.tasks.length === 0) {\n          if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t))) {\n            return (\n              <Card info={card} id={cardid}/>\n            )\n          }\n        }\n        else if (this.state.filters.length === 0 && this.state.tasks.length !== 0) {\n          if (this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t))) {\n            return (\n              <Card info={card} id={cardid}/>\n            )\n          }\n        }\n        else if (this.state.filters.length !== 0 && this.state.tasks.length !== 0) {\n          if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t)) && this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t))) {\n          return (\n            <Card info={card} id={cardid}/>\n          );\n          }\n        } else {\n          return '';\n        }\n      }\n      */\n  renderCards(index, users) {\n    let card = users[index];\n    let cardid = card.id;\n    console.log(card.image);\n\n    if (cardid !== \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\" && this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t)) && this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t)) && this.state.personalities.every(t => card.personalities && card.personalities.includes(t))) {\n      return /*#__PURE__*/React.createElement(Card, {\n        info: card,\n        id: cardid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    const {\n      auth,\n      users,\n      profile,\n      loading,\n      sent,\n      buddy,\n      chatid,\n      showmatchingwindow\n    } = this.props;\n    var profilelist = [];\n    let founderprofile;\n\n    if (users) {\n      const founder = users.find(element => element.id === \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\");\n      founderprofile = /*#__PURE__*/React.createElement(Card, {\n        info: founder,\n        id: \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 28\n        }\n      });\n    }\n\n    const buttonStyle = {\n      height: \"50px\",\n      width: \"500px\",\n      margin: \"45px\",\n      backgroundColor: '#fd9535',\n      textAlign: 'center',\n      color: \"#fff\",\n      fontSize: \"16px\",\n      shape: \"circle\",\n      fontWeight: \"bold\"\n    };\n    let box;\n\n    if (loading === true) {\n      box = /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 19\n        }\n      });\n    } else {\n      if (this.props.buddy !== \"\") {\n        box = /*#__PURE__*/React.createElement(MatchingWindow, {\n          chat: chatid,\n          buddy: buddy,\n          close: this.closeMatchingWindow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 23\n          }\n        });\n      } else {\n        box = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: \"35%\",\n            top: \"35%\",\n            border: \"1px solid\",\n            backgroundColor: \"white\",\n            width: \"550px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          style: {\n            float: \"right\",\n            backgroundColor: \"white\",\n            color: \"black\",\n            border: \"0\",\n            padding: \"0\"\n          },\n          onClick: this.closeMatchingWindow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 21\n          }\n        }, \"x\"), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            marginTop: \"15px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 21\n          }\n        }, \"Sorry we cannot help you find a study/work buddy currently \\uD83D\\uDE16\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          style: {\n            float: \"right\"\n          },\n          onClick: this.handleTryAgain,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 21\n          }\n        }, \"Try again?\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 11\n      }\n    }, \"Buddies | Salon\"), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Find your study/work buddies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 11\n      }\n    })), auth.uid || auth.isEmpty && auth.isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 14\n      }\n    }), auth.uid ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ChatBox, {\n      roomid: auth.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 14\n      }\n    })) : null, /*#__PURE__*/React.createElement(Container, {\n      className: \"background\",\n      fluid: true,\n      style: {\n        zIndex: \"-1\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        position: \"absolute\",\n        top: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"update-button\",\n      onClick: this.handleShow,\n      style: {\n        fontSize: \"large\",\n        fontFamily: \"Comic Sans MS, cursive, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 13\n      }\n    }, \"Update your tasks here! \\uD83E\\uDD17\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 13\n      }\n    }, this.state.changeMatchingButton ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"matching-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 48\n      }\n    }, \"Randomly find a study/work buddy instantly\") : null, /*#__PURE__*/React.createElement(Button, {\n      id: \"matching-button\",\n      className: \"initial-buttons\",\n      onMouseOver: this.changeMatching,\n      onMouseLeave: this.unchangeMatching,\n      onClick: this.showMatching,\n      style: {\n        fontSize: \"large\",\n        fontFamily: \"Comic Sans MS, cursive, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 13\n      }\n    }, \"\\uD83C\\uDFB2\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showSchedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 13\n      }\n    }, \"Schedule\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.scheduleVisibility,\n      onHide: this.closeSchedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"schedule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 19\n      }\n    }, this.state.todaySchedule && this.state.todaySchedule.map(row => {\n      return row.map(slot => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          class: \"slot\",\n          \"data-date\": slot.date.getDate(),\n          \"data-start\": slot.start,\n          \"data-end\": slot.end,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 34\n          }\n        }, slot.date.getDate(), \": \", slot.start, \"-\", slot.end);\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"task-confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 19\n      }\n    }, currentTimeSlots && currentTimeSlots.map(date => {\n      return this.displaySelectedTimeSlots(date);\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showgroupmessaging,\n      onHide: this.closeMessaging,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleMessaging,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 21\n      }\n    }, \"Select a few tags on the page and send your message to up to 3 random users that have the tags in their profiles\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"message\",\n      placeholder: \"Hi there...\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"number\",\n      value: 1,\n      onChange: this.handleChange,\n      checked: this.state.number === \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"number\",\n      value: 2,\n      onChange: this.handleChange,\n      checked: this.state.number === \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"number\",\n      value: 3,\n      onChange: this.handleChange,\n      checked: this.state.number === \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 21\n      }\n    }, \"Send\")), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 32\n      }\n    }) : null, sent === 1 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 34\n      }\n    }, \"Message sent!\") : null, sent === 2 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 34\n      }\n    }, \"Sorry there are not enough users that satisfy the criteria, but the message has been sent to all the users if there are any! \\uD83D\\uDE0B\") : null)), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showmatching,\n      onHide: this.closeMatching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleMatching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 17\n      }\n    }, \"Match me with:\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 29\n      }\n    }, \"Male only\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"genderpreference\",\n      value: \"Male\",\n      onChange: this.handleChange,\n      checked: this.state.genderpreference === \"Male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 29\n      }\n    }, \"Female only\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"genderpreference\",\n      value: \"Female\",\n      onChange: this.handleChange,\n      checked: this.state.genderpreference === \"Female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 29\n      }\n    }, \"Other only\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"genderpreference\",\n      value: \"Other\",\n      onChange: this.handleChange,\n      checked: this.state.genderpreference === \"Other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 29\n      }\n    }, \"I don't care \\uD83D\\uDE22\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"genderpreference\",\n      value: \"None\",\n      onChange: this.handleChange,\n      checked: this.state.genderpreference === \"None\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 19\n      }\n    }, \"Start matching\")))), this.state.showmatchingwindow ? box : null, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 21\n      }\n    }, \"Describe your tasks today!\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"description\",\n      onChange: this.handleChange,\n      value: this.state.description,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 21\n      }\n    }, \"Select a few tags:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 21\n      }\n    }, taskfilters.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.reduxtasks && this.state.reduxtasks.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updateReduxTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 25\n        }\n      }, filter);\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.routeguarding,\n      onHide: this.handleCloseRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 15\n      }\n    }, \"Sign up to create a profile so that other users can know more about you!\\uD83D\\uDE0A\")), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        position: \"absolute\",\n        top: \"25%\",\n\n        /*marginLeft:\"70px\", marginBottom: \"20px\",*/\n        left: \"4%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        zIndex: \"-1\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontFamily: \"Lucida Console, Monaco, monospace\",\n        fontSize: \"large\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 11\n      }\n    }, \"Filter by: \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      style: {\n        fontFamily: \"Lucida Console, Monaco, monospace\",\n        fontSize: \"large\",\n        marginRight: \"10px\"\n      },\n      onClick: this.showInterestFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 11\n      }\n    }, \"\\uD83D\\uDC9B Interests\"), /*#__PURE__*/React.createElement(Modal, {\n      id: \"interestfilter\",\n      show: this.state.interestFilterVisibility,\n      onHide: this.closeInterestFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        margin: \"5px \"\n      },\n      id: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 13\n      }\n    }, filters.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.filters && this.state.filters.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updateFilters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 19\n        }\n      }, filter);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      style: {\n        fontFamily: \"Lucida Console, Monaco, monospace\",\n        fontSize: \"large\",\n        marginRight: \"10px\"\n      },\n      onClick: this.showPersonalityFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 13\n      }\n    }, \"\\uD83D\\uDC7B Values\"), /*#__PURE__*/React.createElement(Modal, {\n      id: \"interestfilter\",\n      show: this.state.personalityFilterVisibility,\n      onHide: this.closePersonalityFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        margin: \"5px \"\n      },\n      id: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 13\n      }\n    }, personalities.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.personalities && this.state.personalities.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updatePersonalities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 19\n        }\n      }, filter);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      style: {\n        fontFamily: \"Lucida Console, Monaco, monospace\",\n        fontSize: \"large\",\n        marginRight: \"10px\"\n      },\n      onClick: this.showTaskFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1162,\n        columnNumber: 13\n      }\n    }, \"\\uD83C\\uDFF7 Tasks\"), /*#__PURE__*/React.createElement(Modal, {\n      id: \"interestfilter\",\n      show: this.state.taskFilterVisibility,\n      onHide: this.closeTaskFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        margin: \"5px \"\n      },\n      id: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 13\n      }\n    }, taskfilters.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.tasks && this.state.tasks.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updateTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 19\n        }\n      }, filter);\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('waiting cponent', state.firestore);\n  return {\n    users: state.firestore.ordered.users,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    loading: state.auth.loading,\n    sent: state.auth.sent,\n    buddy: state.auth.buddy,\n    chatid: state.auth.chatid,\n    matching: state.auth.matching,\n    showmatchingwindow: state.auth.showmatchingwindow\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  submitTicket,\n  startMatching,\n  groupMessaging\n}), firestoreConnect([{\n  collection: 'users'\n}]))(WaitingRoom);\n/*\n            <div>\n            {this.state.changeMessagingButton ? <span className=\"messaging-button\">Send a message to random people</span> : null}\n            <Button id=\"messaging-button\" className=\"initial-buttons\" onMouseOver={this.changeMessaging} onMouseLeave={this.unchangeMessaging} onClick={this.showGroupMessaging} style={{ fontSize: \"large\", fontFamily: \"Comic Sans MS, cursive, sans-serif\" }}>💌</Button>\n            </div>\n            */\n\n/*\n          <div style={{ position: \"absolute\", top: \"30%\", zIndex: \"-1\" }}>\n            <div id=\"cards\">\n            {founderprofile}\n              { users && users.map((card, index, users) => {\n                return this.renderCards(index, users, profilelist);\n              })}\n            </div>\n            </div>\n*/","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/waitingroom.js"],"names":["React","Component","firebase","Container","Navbar","Card","Filter","thisTypeAnnotation","NavBar","ChatBox","LoggedOutNavbar","SignUp","LogIn","Button","Modal","MatchingBox","MatchingWindow","Helmet","connect","compose","firestoreConnect","submitTicket","startMatching","groupMessaging","Selection","selection","create","class","mode","singleClick","selectables","boundaries","on","inst","selected","oe","console","log","ctrlKey","metaKey","el","classList","remove","removeFromSelection","clearSelection","changed","removed","added","add","push","indexOf","splice","getSelection","current","Array","length","i","checked","j","dataset","date","temp","sort","left","right","start","currentTimeSlots","keepSelection","personalities","filters","taskfilters","timeSegments","WaitingRoom","state","tasks","show","showmatching","routeguarding","description","reduxtasks","genderpreference","showgroupmessaging","currentprofilelist","number","showmatchingwindow","interestFilterVisibility","taskFilterVisibility","personalityFilterVisibility","changeMatchingButton","matching","availableTimes","scheduleVisibility","todaySchedule","selecting","startTime","hour","endTime","selectedSlots","buildList","users","profilelist","userprofile","id","profile","clickSignUp","e","preventDefault","setState","signup","clickLogIn","handleShow","auth","props","uid","handleClose","handleCloseRedirect","handleSubmit","handleChange","stopPropagation","target","value","updateReduxTasks","className","helper","newfilters","filter","tag","onlyFilters","filtersUpdateList","newprofilelist","every","t","areas_of_interest","includes","tasks_tags","updateFilters","then","onlyTasks","tasksUpdateList","newtasks","updateTasks","onlyPersonalities","updatePersonalities","showMatching","handleMatching","gender","closeMatching","closeMatchingWindow","showGroupMessaging","closeMessaging","createMessage","time","message","from","content","document","getElementById","handleMessaging","Date","getFullYear","getMonth","getDate","getHours","getMinutes","showInterestFilter","closeInterestFilter","showTaskFilter","closeTaskFilter","showPersonalityFilter","closePersonalityFilter","handleTryAgain","changeMatching","unchangeMatching","changeMessaging","changeMessagingButton","unchangeMessaging","showSchedule","closeSchedule","renderSegment","segment","renderSlots","slot","startSelecting","element","keepSelecting","slots","finishSelecting","displaySelectedTimeSlots","end","componentDidMount","currentSchedule","d","setDate","row","setTimeout","localStorage","getItem","firestore","collection","doc","delete","update","count","FieldValue","increment","setItem","tasks_description","componentDidUpdate","prevprops","prevstate","componentWillReceiveProps","map","user","renderCards","index","card","cardid","image","render","loading","sent","buddy","chatid","founderprofile","founder","find","buttonStyle","height","width","margin","backgroundColor","textAlign","color","fontSize","shape","fontWeight","box","position","top","border","float","padding","marginTop","isEmpty","isLoaded","zIndex","alignItems","fontFamily","display","marginRight","mapStateToProps","ordered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,2BAAP;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,oBAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAAQC,MAAR,QAAqB,cAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,kBAA5D;AAEA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAMC,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB;AACjCC,EAAAA,KAAK,EAAE,gBAD0B;AAEjCC,EAAAA,IAAI,EAAE,OAF2B;AAGjCC,EAAAA,WAAW,EAAE,MAHoB;AAIjCC,EAAAA,WAAW,EAAE,CAAC,OAAD,CAJoB;AAKjCC,EAAAA,UAAU,EAAE,CAAC,WAAD;AALqB,CAAjB,EAOfC,EAPe,CAOZ,OAPY,EAOH,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAA4B;AACvC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,MAAI,CAACF,EAAE,CAACG,OAAJ,IAAe,CAACH,EAAE,CAACI,OAAvB,EAAgC;AAC9B;AAEA,SAAK,MAAMC,EAAX,IAAiBN,QAAjB,EAA2B;AACzBM,MAAAA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoB,UAApB;AAEAT,MAAAA,IAAI,CAACU,mBAAL,CAAyBH,EAAzB;AACD,KAP6B,CAS9B;;;AAEAP,IAAAA,IAAI,CAACW,cAAL;AACD;AACF,CAvBe,EAwBfZ,EAxBe,CAwBZ,MAxBY,EAwBJ,CAAC;AAAEa,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAX,CAAD,KAAqC;AAC/C;AAEA,OAAK,MAAMP,EAAX,IAAiBO,KAAjB,EAAwB;AACtB;;;;;AAMAP,IAAAA,EAAE,CAACC,SAAH,CAAaO,GAAb,CAAiB,UAAjB;AACAd,IAAAA,QAAQ,CAACe,IAAT,CAAcT,EAAd;AACD,GAZ8C,CAc/C;AAEA;;;AAEA,OAAK,MAAMA,EAAX,IAAiBM,OAAjB,EAA0B;AACxBN,IAAAA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoB,UAApB;AACAR,IAAAA,QAAQ,CAACgB,OAAT,CAAiBV,EAAjB;AACAN,IAAAA,QAAQ,CAACiB,MAAT,CAAgBX,EAAhB,EAAoB,CAApB;AACD;AACF,CA/Ce,EAgDfR,EAhDe,CAgDZ,MAhDY,EAgDJ,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACxBG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBZ,SAAS,CAAC2B,YAAV,EAApB,EADwB,CAExB;;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAImB,OAAO,GAAG,IAAIC,KAAJ,EAAd;AACA;;;;;;;AAQA,MAAIpB,QAAQ,CAACqB,MAAT,GAAkB,CAAtB,EAAyB;AACvB,SAAK,IAAIC,CAAC,GAAI,CAAd,EAAiBA,CAAC,GAAGtB,QAAQ,CAACqB,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzCpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,CAAC,GAAG,GAAJ,GAAUtB,QAAQ,CAACsB,CAAD,CAA9B;AACA,UAAIC,OAAO,GAAG,KAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACE,MAA5B,EAAoCG,CAAC,EAArC,EAAyC;AACvCtB,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACsB,CAAD,CAAR,CAAYG,OAAZ,CAAoBC,IAApB,GAA2B,MAA3B,GAAoCP,OAAO,CAACK,CAAD,CAAP,CAAW,CAAX,EAAcC,OAAd,CAAsBC,IAAtE;;AACA,YAAI1B,QAAQ,CAACsB,CAAD,CAAR,CAAYG,OAAZ,CAAoBC,IAApB,KAA6BP,OAAO,CAACK,CAAD,CAAP,CAAW,CAAX,EAAcC,OAAd,CAAsBC,IAAvD,EAA6D;AAC3DP,UAAAA,OAAO,CAACK,CAAD,CAAP,CAAWT,IAAX,CAAgBf,QAAQ,CAACsB,CAAD,CAAxB;AACAC,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,UAAIA,OAAO,KAAK,KAAhB,EAAuB;AACrB,YAAII,IAAI,GAAG,IAAIP,KAAJ,EAAX;AACAO,QAAAA,IAAI,CAACZ,IAAL,CAAUf,QAAQ,CAACsB,CAAD,CAAlB;AACAH,QAAAA,OAAO,CAACJ,IAAR,CAAaY,IAAb;AACAzB,QAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAZ;AACD;;AACDzB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAZ;AACD;;AAID,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACE,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvCH,MAAAA,OAAO,CAACG,CAAD,CAAP,CAAWM,IAAX,CAAgB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACpC,eAAOD,IAAI,CAACJ,OAAL,CAAaM,KAAb,GAAqBD,KAAK,CAACL,OAAN,CAAcM,KAA1C;AACD,OAFD;AAGD;AACF;;AAEDC,EAAAA,gBAAgB,GAAGb,OAAnB;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAY6B,gBAAZ,EA3CwB,CA8CxB;;AAEAjC,EAAAA,IAAI,CAACkC,aAAL;AACD,CAjGe,CAAlB;AAmGA,IAAIjC,QAAQ,GAAG,EAAf;AAIA,IAAIgC,gBAAgB,GAAG,EAAvB;AAKA,MAAME,aAAa,GAAG,CAClB,cADkB,EAElB,yBAFkB,EAGlB,iBAHkB,EAIlB,eAJkB,EAKlB,WALkB,EAMlB,YANkB,EAOlB,WAPkB,EAQlB,WARkB,EASlB,QATkB,EAUlB,aAVkB,EAWlB,WAXkB,EAYlB,aAZkB,EAalB,UAbkB,EAclB,QAdkB,EAelB,gBAfkB,EAgBlB,uBAhBkB,EAiBlB,WAjBkB,EAkBlB,OAlBkB,EAmBlB,SAnBkB,EAoBlB,aApBkB,EAqBlB,YArBkB,EAsBlB,QAtBkB,EAuBlB,WAvBkB,EAwBlB,WAxBkB,EAyBlB,QAzBkB,EA0BlB,8BA1BkB,EA2BlB,MA3BkB,EA4BlB,WA5BkB,EA6BlB,QA7BkB,EA8BlB,YA9BkB,EA+BlB,SA/BkB,EAgClB,SAhCkB,EAiClB,SAjCkB,EAkClB,QAlCkB,EAmClB,UAnCkB,CAAtB;AAsCA,MAAMC,OAAO,GAAG,CACZ,kBADY,EAEZ,sBAFY,EAGZ,8BAHY,EAIZ,sBAJY,EAKZ,uBALY,EAMZ,cANY,EAOZ,yBAPY,EAQZ,wBARY,EASZ,wBATY,EAUZ,wBAVY,EAWZ,aAXY,EAYZ,SAZY,EAaZ,WAbY,EAcZ,YAdY,EAeZ,WAfY,EAgBZ,SAhBY,EAiBZ,UAjBY,EAkBZ,KAlBY,EAmBZ,YAnBY,EAoBZ,MApBY,CAAhB;AAuBA,MAAMC,WAAW,GAAG,CAClB,0BADkB,EAElB,iBAFkB,EAGlB,OAHkB,EAIlB,uBAJkB,EAKlB,kBALkB,EAMlB,eANkB,EAOlB,UAPkB,EAQlB,eARkB,EASlB,sBATkB,EAUlB,8BAVkB,EAWlB,sBAXkB,EAYhB,uBAZgB,EAahB,cAbgB,EAchB,yBAdgB,EAehB,wBAfgB,EAgBhB,wBAhBgB,EAiBhB,wBAjBgB,EAkBhB,aAlBgB,EAmBhB,SAnBgB,EAoBhB,WApBgB,EAqBhB,YArBgB,EAsBhB,WAtBgB,EAuBhB,SAvBgB,EAwBhB,UAxBgB,EAyBhB,KAzBgB,EA0BhB,YA1BgB,EA2BhB,MA3BgB,CAApB;AA8BA,MAAMC,YAAY,GAAG,CACnB,MADmB,EAEnB,MAFmB,EAGnB,OAHmB,EAInB,OAJmB,CAArB;;AASE,MAAMC,WAAN,SAA0BvE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCwE,KAFkC,GAE1B;AACNJ,MAAAA,OAAO,EAAE,EADH;AAENK,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,YAAY,EAAE,KAJR;AAKNC,MAAAA,aAAa,EAAE,KALT;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNX,MAAAA,aAAa,EAAE,EART;AASNY,MAAAA,gBAAgB,EAAE,EATZ;AAUN;AACAC,MAAAA,kBAAkB,EAAE,KAXd;AAYNC,MAAAA,kBAAkB,EAAE,EAZd;AAaNC,MAAAA,MAAM,EAAE,CAbF;AAcNC,MAAAA,kBAAkB,EAAE,KAdd;AAeNC,MAAAA,wBAAwB,EAAE,KAfpB;AAgBNC,MAAAA,oBAAoB,EAAE,KAhBhB;AAiBNC,MAAAA,2BAA2B,EAAE,KAjBvB;AAkBNC,MAAAA,oBAAoB,EAAE,KAlBhB;AAmBNC,MAAAA,QAAQ,EAAE,EAnBJ;AAoBNC,MAAAA,cAAc,EAAE,EApBV;AAqBNC,MAAAA,kBAAkB,EAAE,KArBd;AAsBNC,MAAAA,aAAa,EAAE,EAtBT;AAuBNC,MAAAA,SAAS,EAAE,KAvBL;AAwBNC,MAAAA,SAAS,EAAE;AAAClC,QAAAA,IAAI,EAAE,EAAP;AAAWmC,QAAAA,IAAI,EAAE;AAAjB,OAxBL;AAyBNC,MAAAA,OAAO,EAAE;AAACpC,QAAAA,IAAI,EAAE,EAAP;AAAWmC,QAAAA,IAAI,EAAE;AAAjB,OAzBH;AA0BNE,MAAAA,aAAa,EAAE;AA1BT,KAF0B;;AAAA,SA+BlCC,SA/BkC,GA+BtB,MAAOC,KAAP,IAAiB;AAC3B,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAI5C,CAAC,GAAG,CAAR;;AACA,aAAO2C,KAAK,IAAI3C,CAAC,GAAG2C,KAAK,CAAC5C,MAA1B,EAAkC;AAChC,cAAM8C,WAAW,GAAG;AAAEC,UAAAA,EAAE,EAAEH,KAAK,CAAC3C,CAAD,CAAL,CAAS8C,EAAf;AAAmBC,UAAAA,OAAO,EAAEJ,KAAK,CAAC3C,CAAD;AAAjC,SAApB;AACA4C,QAAAA,WAAW,CAACnD,IAAZ,CAAiBoD,WAAjB;AACA7C,QAAAA,CAAC;AACF;;AACD,aAAO4C,WAAP;AACD,KAxCiC;;AAAA,SA4OlCI,WA5OkC,GA4OnBC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KA/OiC;;AAAA,SAiPlCC,UAjPkC,GAiPpBJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAG;AAAX,OAAd;AACD,KApPiC;;AAAA,SAkTlCE,UAlTkC,GAkTpBL,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAW,KAAKC,KAAtB;;AACA,UAAI,CAACD,IAAI,CAACE,GAAV,EAAe;AACb,aAAKN,QAAL,CAAc;AAAE9B,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD,OAFD,MAEO,KAAK8B,QAAL,CAAc;AAAEhC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACR,KAxTiC;;AAAA,SA0TlCuC,WA1TkC,GA0TpB,MAAM;AAClB,WAAKP,QAAL,CAAc;AAAEhC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KA5TiC;;AAAA,SA8TlCwC,mBA9TkC,GA8TZ,MAAM;AAC1B,WAAKR,QAAL,CAAc;AAAE9B,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,KAhUiC;;AAAA,SAkUlCuC,YAlUkC,GAkUlBX,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKM,KAAL,CAAW3F,YAAX,CAAwB,KAAKoD,KAA7B;AACA,WAAKkC,QAAL,CAAc;AACZhC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAxUiC;;AAAA,SA0UlC0C,YA1UkC,GA0UlBZ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACa,eAAF;AACA,WAAKX,QAAL,CAAc;AACZ,SAACF,CAAC,CAACc,MAAF,CAASjB,EAAV,GAAeG,CAAC,CAACc,MAAF,CAASC;AADZ,OAAd;AAGD,KA/UiC;;AAAA,SAiVlCC,gBAjVkC,GAiVdhB,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;;AAED,UAAID,CAAC,CAACc,MAAF,CAASG,SAAT,KAAuB,mBAA3B,EAAgD;AAC/C,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKlD,KAAL,CAAWM,UAAf,EAA2B0B,CAAC,CAACc,MAAF,CAASjB,EAApC,CAAf;AACA,aAAKK,QAAL,CAAc;AAAE5B,UAAAA,UAAU,EAAG4C;AAAf,SAAd;AACAlB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,iBAArB;AACA,OAJD,MAKM;AACH,cAAME,UAAU,GAAG,KAAKnD,KAAL,CAAWM,UAAX,CAAsB8C,MAAtB,CAA6BC,GAAG,IAAIA,GAAG,KAAKrB,CAAC,CAACc,MAAF,CAASjB,EAArD,CAAnB;AACA,aAAKK,QAAL,CAAc;AAAE5B,UAAAA,UAAU,EAAG6C;AAAf,SAAd;AACAnB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,mBAArB;AACD;AACF,KA9ViC;;AAAA,SAiWlCK,WAjWkC,GAiWpB,MAAOtB,CAAP,IAAa;AACzB,UAAIA,CAAC,CAACc,MAAF,CAASG,SAAT,KAAuB,mBAA3B,EAAgD;AAC/C,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKlD,KAAL,CAAWJ,OAAf,EAAwBoC,CAAC,CAACc,MAAF,CAASjB,EAAjC,CAAf;AACC,aAAKK,QAAL,CAAc;AAAEtC,UAAAA,OAAO,EAAGsD;AAAZ,SAAd;AACAlB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,iBAArB;AACA,eAAOC,MAAP;AACA,OALF,MAMO;AACH,cAAMC,UAAU,GAAG,KAAKnD,KAAL,CAAWJ,OAAX,CAAmBwD,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,KAAKrB,CAAC,CAACc,MAAF,CAASjB,EAAlD,CAAnB;AACA,aAAKK,QAAL,CAAc;AAAEtC,UAAAA,OAAO,EAAGuD;AAAZ,SAAd;AACAnB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,mBAArB;AACA,eAAOE,UAAP;AACD;AACJ,KA9WiC;;AAAA,SAiXnCI,iBAjXmC,GAiXdJ,UAAD,IAAgB;AACnC,YAAM;AAAEzB,QAAAA;AAAF,UAAY,KAAKa,KAAvB;AACA,UAAIiB,cAAc,GAAG,EAArB;AACA,UAAIzE,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG2C,KAAK,CAAC5C,MAAjB,EAAyB;AACvB,YAAI,KAAKkB,KAAL,CAAWJ,OAAX,CAAmB6D,KAAnB,CAAyBC,CAAC,IAAIhC,KAAK,IAAIA,KAAK,CAAC3C,CAAD,CAAL,CAAS4E,iBAAlB,IAAuCjC,KAAK,CAAC3C,CAAD,CAAL,CAAS4E,iBAAT,CAA2BC,QAA3B,CAAoCF,CAApC,CAArE,KAAgH,KAAK1D,KAAL,CAAWC,KAAX,CAAiBwD,KAAjB,CAAuBC,CAAC,IAAIhC,KAAK,CAAC3C,CAAD,CAAL,CAAS8E,UAAT,IAAuBnC,KAAK,CAAC3C,CAAD,CAAL,CAAS8E,UAAT,CAAoBD,QAApB,CAA6BF,CAA7B,CAAnD,CAAhH,IAAuM,KAAK1D,KAAL,CAAWL,aAAX,CAAyB8D,KAAzB,CAA+BC,CAAC,IAAIhC,KAAK,CAAC3C,CAAD,CAAL,CAASY,aAAT,IAA0B+B,KAAK,CAAC3C,CAAD,CAAL,CAASY,aAAT,CAAuBiE,QAAvB,CAAgCF,CAAhC,CAA9D,CAA3M,EAA8S;AAC5SF,UAAAA,cAAc,CAAChF,IAAf,CAAoB;AAACqD,YAAAA,EAAE,EAAEH,KAAK,CAAC3C,CAAD,CAAL,CAAS8C,EAAd;AAAkBC,YAAAA,OAAO,EAAEJ,KAAK,CAAC3C,CAAD;AAAhC,WAApB;AACD;;AACDA,QAAAA,CAAC;AACF;;AACD,WAAKmD,QAAL,CAAc;AAACzB,QAAAA,kBAAkB,EAAE+C;AAArB,OAAd;AACD,KA5XmC;;AAAA,SA8XlCM,aA9XkC,GA8XlB,MAAO9B,CAAP,IAAa;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKqB,WAAL,CAAiBtB,CAAjB,EACC+B,IADD,CACOZ,UAAD,IAAgB;AACpB,aAAKI,iBAAL,CAAuBJ,UAAvB;AACD,OAHD;AAID,KApYiC;;AAAA,SAsYlCa,SAtYkC,GAsYtB,MAAOhC,CAAP,IAAa;AACvB,UAAIA,CAAC,CAACc,MAAF,CAASG,SAAT,KAAuB,mBAA3B,EAAgD;AAC9C,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKlD,KAAL,CAAWC,KAAf,EAAsB+B,CAAC,CAACc,MAAF,CAASjB,EAA/B,CAAf;AACA,aAAKK,QAAL,CAAc;AAAEjC,UAAAA,KAAK,EAAGiD;AAAV,SAAd;AACAlB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,iBAArB;AACA,eAAOC,MAAP;AACA,OALF,MAMO;AACH,cAAMC,UAAU,GAAG,KAAKnD,KAAL,CAAWC,KAAX,CAAiBmD,MAAjB,CAAwBC,GAAG,IAAIA,GAAG,KAAKrB,CAAC,CAACc,MAAF,CAASjB,EAAhD,CAAnB;AACA,aAAKK,QAAL,CAAc;AAAEjC,UAAAA,KAAK,EAAGkD;AAAV,SAAd;AACAnB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,mBAArB;AACA,eAAOE,UAAP;AACD;AACJ,KAnZiC;;AAAA,SAsZlCc,eAtZkC,GAsZfC,QAAD,IAAc;AAC9B,YAAM;AAAExC,QAAAA;AAAF,UAAY,KAAKa,KAAvB;AACA,UAAIiB,cAAc,GAAG,EAArB;AACA,UAAIzE,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG2C,KAAK,CAAC5C,MAAjB,EAAyB;AACvB,YAAIoF,QAAQ,CAACT,KAAT,CAAeC,CAAC,IAAIhC,KAAK,CAAC3C,CAAD,CAAL,CAAS8E,UAAT,IAAuBnC,KAAK,CAAC3C,CAAD,CAAL,CAAS8E,UAAT,CAAoBD,QAApB,CAA6BF,CAA7B,CAA3C,KAA+E,KAAK1D,KAAL,CAAWJ,OAAX,CAAmB6D,KAAnB,CAAyBC,CAAC,IAAIhC,KAAK,CAAC3C,CAAD,CAAL,CAAS4E,iBAAT,IAA8BjC,KAAK,CAAC3C,CAAD,CAAL,CAAS4E,iBAAT,CAA2BC,QAA3B,CAAoCF,CAApC,CAA5D,CAAnF,EAAwL;AACtLF,UAAAA,cAAc,CAAChF,IAAf,CAAoB;AAACqD,YAAAA,EAAE,EAAEH,KAAK,CAAC3C,CAAD,CAAL,CAAS8C,EAAd;AAAkBC,YAAAA,OAAO,EAAEJ,KAAK,CAAC3C,CAAD;AAAhC,WAApB;AACD;;AACDA,QAAAA,CAAC;AACF;;AACD,WAAKmD,QAAL,CAAc;AAACzB,QAAAA,kBAAkB,EAAE+C;AAArB,OAAd;AACD,KAjaiC;;AAAA,SAoalCW,WApakC,GAoapB,MAAOnC,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAK+B,SAAL,CAAehC,CAAf,EACN+B,IADM,CACAG,QAAD,IAAc;AAClB,aAAKX,iBAAL,CAAuBW,QAAvB;AACD,OAHM,CAAP;AAID,KA1aiC;;AAAA,SA6alCE,iBA7akC,GA6ad,MAAOpC,CAAP,IAAa;AAC/B,UAAIA,CAAC,CAACc,MAAF,CAASG,SAAT,KAAuB,mBAA3B,EAAgD;AAC9C,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKlD,KAAL,CAAWL,aAAf,EAA8BqC,CAAC,CAACc,MAAF,CAASjB,EAAvC,CAAf;AACA,aAAKK,QAAL,CAAc;AAAEvC,UAAAA,aAAa,EAAGuD;AAAlB,SAAd;AACAlB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,iBAArB;AACA,eAAOC,MAAP;AACA,OALF,MAMO;AACH,cAAMC,UAAU,GAAG,KAAKnD,KAAL,CAAWL,aAAX,CAAyByD,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,KAAKrB,CAAC,CAACc,MAAF,CAASjB,EAAxD,CAAnB;AACA,aAAKK,QAAL,CAAc;AAAEvC,UAAAA,aAAa,EAAGwD;AAAlB,SAAd;AACAnB,QAAAA,CAAC,CAACc,MAAF,CAASG,SAAT,GAAqB,mBAArB;AACA,eAAOE,UAAP;AACD;AACJ,KA1biC;;AAAA,SA6blCkB,mBA7bkC,GA6bZ,MAAOrC,CAAP,IAAa;AACjCA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAKmC,iBAAL,CAAuBpC,CAAvB,EACN+B,IADM,CACAG,QAAD,IAAc;AAClB,aAAKX,iBAAL,CAAuBW,QAAvB;AACD,OAHM,CAAP;AAID,KAnciC;;AAAA,SAwclCI,YAxckC,GAwclBtC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAW,KAAKC,KAAtB;;AACA,UAAI,CAACD,IAAI,CAACE,GAAV,EAAe;AACb,aAAKN,QAAL,CAAc;AAAE9B,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD,OAFD,MAEO;AACL,aAAK8B,QAAL,CAAc;AACd/B,UAAAA,YAAY,EAAE;AADA,SAAd;AAGH;AACA,KAldiC;;AAAA,SAodlCoE,cApdkC,GAodhBvC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKjC,KAAL,CAAWO,gBAAX,KAAgC,EAApC,EAAwC;AACxC,aAAKgC,KAAL,CAAW1F,aAAX,CAAyB,KAAK0F,KAAL,CAAWD,IAAX,CAAgBE,GAAzC,EAA8C,KAAKD,KAAL,CAAWT,OAAzD,EAAkE,KAAKS,KAAL,CAAWT,OAAX,CAAmB0C,MAArF,EAA6F,KAAKxE,KAAL,CAAWO,gBAAxG;AACA,aAAK2B,QAAL,CAAc;AACZ/B,UAAAA,YAAY,EAAE,KADF;AAEZQ,UAAAA,kBAAkB,EAAE;AAFR,SAAd;AAID;AACA,KA7diC;;AAAA,SA+dlC8D,aA/dkC,GA+dlB,MAAM;AACpB,WAAKvC,QAAL,CAAc;AACZ/B,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KAneiC;;AAAA,SAqelCuE,mBArekC,GAqeZ,MAAM;AAC1B,WAAKxC,QAAL,CAAc;AACZvB,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAGD,KAzeiC;;AAAA,SA4elCgE,kBA5ekC,GA4eZ3C,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,CAAC,KAAKM,KAAL,CAAWD,IAAX,CAAgBE,GAArB,EAA0B;AACxB,aAAKN,QAAL,CAAc;AAAE9B,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD,OAFD,MAEO,KAAK8B,QAAL,CAAc;AACnB1B,QAAAA,kBAAkB,EAAE;AADD,OAAd;AAGR,KAnfiC;;AAAA,SAqflCoE,cArfkC,GAqfjB,MAAM;AACrB,WAAK1C,QAAL,CAAc;AACZ1B,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAGD,KAzfiC;;AAAA,SA4flCqE,aA5fkC,GA4fjBC,IAAD,IAAU;AACxB,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG;AAAED,QAAAA,IAAI,EAAEA,IAAR;AAAcE,QAAAA,IAAI,EAAG,KAAKzC,KAAL,CAAWD,IAAX,CAAgBE,GAArC;AAA0CyC,QAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCpC;AAAtF,OAAV;AACA,aAAOgC,OAAP;AACD,KAhgBiC;;AAAA,SAmgBlCK,eAngBkC,GAmgBfpD,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKjC,KAAL,CAAWU,MAAX,KAAsB,CAA1B,EAA8B;AAC9B,cAAMvB,IAAI,GAAG,IAAIkG,IAAJ,EAAb;AACA,cAAMP,IAAI,GAAG3F,IAAI,CAACmG,WAAL,KAAqB,GAArB,IAA4BnG,IAAI,CAACoG,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDpG,IAAI,CAACqG,OAAL,EAAzD,GAA0E,GAA1E,GAAgFrG,IAAI,CAACsG,QAAL,EAAhF,GAAkG,GAAlG,GAAwGtG,IAAI,CAACuG,UAAL,EAArH;AACA,cAAMX,OAAO,GAAG,KAAKF,aAAL,CAAmBC,IAAnB,CAAhB;AACA,aAAKvC,KAAL,CAAWzF,cAAX,CAA0B,KAAKkD,KAAL,CAAWS,kBAArC,EAAyD,KAAKT,KAAL,CAAWU,MAApE,EAA4EqE,OAA5E,EAAqF,KAAKxC,KAAL,CAAWT,OAAhG;AACC;AACF,KA3gBiC;;AAAA,SA6gBlC6D,kBA7gBkC,GA6gBZ3D,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZtB,QAAAA,wBAAwB,EAAE;AADd,OAAd;AAGD,KAlhBiC;;AAAA,SAohBlCgF,mBAphBkC,GAohBZ,MAAM;AAC1B,WAAK1D,QAAL,CAAc;AACZtB,QAAAA,wBAAwB,EAAE;AADd,OAAd;AAGD,KAxhBiC;;AAAA,SA0hBlCiF,cA1hBkC,GA0hBhB7D,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZrB,QAAAA,oBAAoB,EAAE;AADV,OAAd;AAGD,KA/hBiC;;AAAA,SAiiBlCiF,eAjiBkC,GAiiBhB,MAAM;AACtB,WAAK5D,QAAL,CAAc;AACZrB,QAAAA,oBAAoB,EAAE;AADV,OAAd;AAGD,KAriBiC;;AAAA,SAuiBlCkF,qBAviBkC,GAuiBT/D,CAAD,IAAO;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZpB,QAAAA,2BAA2B,EAAE;AADjB,OAAd;AAGD,KA5iBiC;;AAAA,SA8iBlCkF,sBA9iBkC,GA8iBT,MAAM;AAC7B,WAAK9D,QAAL,CAAc;AACZpB,QAAAA,2BAA2B,EAAE;AADjB,OAAd;AAGD,KAljBiC;;AAAA,SAojBlCmF,cApjBkC,GAojBhBjE,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZvB,QAAAA,kBAAkB,EAAE,KADR;AAEZR,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KA1jBiC;;AAAA,SA4jBlC+F,cA5jBkC,GA4jBjB,MAAM;AACrBhB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2ClC,SAA3C,GAAuD,iBAAvD;AACA,WAAKf,QAAL,CAAc;AACZnB,QAAAA,oBAAoB,EAAE;AADV,OAAd;AAGD,KAjkBiC;;AAAA,SAmkBlCoF,gBAnkBkC,GAmkBf,MAAM;AACvBjB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2ClC,SAA3C,GAAuD,iBAAvD;AACA,WAAKf,QAAL,CAAc;AACZnB,QAAAA,oBAAoB,EAAE;AADV,OAAd;AAGD,KAxkBiC;;AAAA,SA0kBlCqF,eA1kBkC,GA0kBhB,MAAM;AACtBlB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4ClC,SAA5C,GAAwD,iBAAxD;AACA,WAAKf,QAAL,CAAc;AACZmE,QAAAA,qBAAqB,EAAE;AADX,OAAd;AAGD,KA/kBiC;;AAAA,SAilBlCC,iBAjlBkC,GAilBd,MAAM;AACxBpB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4ClC,SAA5C,GAAwD,iBAAxD;AACA,WAAKf,QAAL,CAAc;AACZmE,QAAAA,qBAAqB,EAAE;AADX,OAAd;AAGD,KAtlBiC;;AAAA,SAwlBlCE,YAxlBkC,GAwlBlBvE,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACD,KA3lBiC;;AAAA,SA6lBlCsF,aA7lBkC,GA6lBlB,MAAM;AAEpB,WAAKtE,QAAL,CAAc;AAAChB,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACD,KAhmBiC;;AAAA,SAkmBlCuF,aAlmBkC,GAkmBlB,CAACC,OAAD,EAAUvH,IAAV,KAAmB;AACjC,0BAAO;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBA,IAAI,CAACqG,OAAL,EAAvB,CAAP;AACD,KApmBiC;;AAAA,SAsmBlCmB,WAtmBkC,GAsmBnBC,IAAD,IAAU;AACtBjJ,MAAAA,OAAO,CAACC,GAAR,CAAYgJ,IAAI,CAACzH,IAAL,CAAUqG,OAAV,KAAsBoB,IAAI,CAACtF,IAAvC;AACA,0BAAO;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBsF,IAAI,CAACzH,IAA5B,SAAqCyH,IAAI,CAACtF,IAA1C,CAAP;AACD,KAzmBiC;;AAAA,SA2mBlCuF,cA3mBkC,GA2mBhB7E,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZd,QAAAA,SAAS,EAAE,IADC;AAEZC,QAAAA,SAAS,EAAEW,CAAC,CAACc,MAAF,CAASgE,OAFR;AAGZtF,QAAAA,aAAa,EAAE,CAACQ,CAAC,CAACc,MAAF,CAASgE,OAAV;AAHH,OAAd;AAKD,KAlnBiC;;AAAA,SAonBlCC,aApnBkC,GAonBjB/E,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKjC,KAAL,CAAWoB,SAAX,KAAyB,IAA7B,EAAmC;AAEnC,cAAM4F,KAAK,GAAG,CAAC,GAAG,KAAKhH,KAAL,CAAWwB,aAAf,EAA8BQ,CAAC,CAACc,MAAF,CAASgE,OAAvC,CAAd;AACA,aAAK5E,QAAL,CAAc;AACZV,UAAAA,aAAa,EAAEwF;AADH,SAAd;AAGD;AACA,KA7nBiC;;AAAA,SA+nBlCC,eA/nBkC,GA+nBfjF,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF;AAED,KAloBiC;;AAAA,SAqoBlCiF,wBAroBkC,GAqoBN/H,IAAD,IAAU;AACnC,UAAIK,KAAK,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAApB;AACA,UAAI2H,GAAG,GAAGhI,IAAI,CAACA,IAAI,CAACL,MAAL,GAAc,CAAf,CAAJ,CAAsBqI,GAAhC;AACF,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO3H,KAAP,SAAiB2H,GAAjB,QAAwBhI,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAhC,CAAP;AACC,KAzoBiC;AAAA;;AA0ClCiI,EAAAA,iBAAiB,GAAG;AACxB;;;;;;;;;;;;;;;;;;;;;AAqBI,QAAIC,eAAe,GAAG,IAAIxI,KAAJ,EAAtB;AACA,QAAIsC,aAAa,GAAG,IAAItC,KAAJ,EAApB;AACA,QAAIE,CAAC,GAAG,CAAR;AACA,QAAIuI,CAAC,GAAG,IAAIjC,IAAJ,EAAR;;AACA,SAAKtG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY0J,CAAC,CAAC9B,OAAF,EAAZ;AACA6B,MAAAA,eAAe,CAAC7I,IAAhB,CAAqB,IAAI6G,IAAJ,CAASiC,CAAT,CAArB;AACAA,MAAAA,CAAC,CAACC,OAAF,CAAUD,CAAC,CAAC9B,OAAF,KAAc,CAAxB;AACD;;AAED,SAAK,IAAIzG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,YAAY,CAAChB,MAAb,GAAsB,CAA1C,EAA6CC,CAAC,EAA9C,EAAkD;AAChD,UAAIyI,GAAG,GAAG,IAAI3I,KAAJ,EAAV;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BuI,QAAAA,GAAG,CAAChJ,IAAJ,CAAS;AAACW,UAAAA,IAAI,EAAEkI,eAAe,CAACpI,CAAD,CAAtB;AAA2BO,UAAAA,KAAK,EAAEM,YAAY,CAACf,CAAD,CAA9C;AAAmDoI,UAAAA,GAAG,EAAErH,YAAY,CAACf,CAAC,GAAG,CAAL;AAApE,SAAT;AACD;;AACDoC,MAAAA,aAAa,CAAC3C,IAAd,CAAmBgJ,GAAnB;AACD;;AACD,SAAKtF,QAAL,CAAc;AAAEf,MAAAA,aAAa,EAAEA;AAAjB,KAAd;AAGDsG,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,MAAzC,EAAiD;AAC/C,YAAID,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,OAArC,EAA+C;AAC7ClM,UAAAA,QAAQ,CAACmM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgD,SAAhD,EAA2DD,UAA3D,CAAsE,kBAAtE,EAA0FC,GAA1F,CAA8F,KAAKvF,KAAL,CAAWD,IAAX,CAAgBE,GAA9G,EAAmHuF,MAAnH;AACAtM,UAAAA,QAAQ,CAACmM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgD,SAAhD,EAA2DE,MAA3D,CAAkE;AAChEC,YAAAA,KAAK,EAAExM,QAAQ,CAACmM,SAAT,CAAmBM,UAAnB,CAA8BC,SAA9B,CAAwC,CAAC,CAAzC;AADyD,WAAlE;AAGD,SALD,MAMK;AACH1M,UAAAA,QAAQ,CAACmM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgD,SAAhD,EAA2DD,UAA3D,CAAsE,eAAtE,EAAuFC,GAAvF,CAA2F,KAAKvF,KAAL,CAAWD,IAAX,CAAgBE,GAA3G,EAAgHuF,MAAhH;AACAtM,UAAAA,QAAQ,CAACmM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgD,MAAhD,EAAwDE,MAAxD,CAA+D;AAC7DC,YAAAA,KAAK,EAAExM,QAAQ,CAACmM,SAAT,CAAmBM,UAAnB,CAA8BC,SAA9B,CAAwC,CAAC,CAAzC;AADsD,WAA/D;AAGD;;AACDT,QAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiC,KAAjC;AACD;AACA,KAhBQ,EAgBN,IAhBM,CAAV;AAkBG,UAAM;AAAE1G,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAAqB,KAAKS,KAAhC;AACA,SAAKd,SAAL,CAAeC,KAAf,EACCqC,IADD,CACOpC,WAAD,IAAiB;AACrB,WAAKO,QAAL,CAAc;AACZzB,QAAAA,kBAAkB,EAAEkB,WADR,CAEZ;;AAFY,OAAd;AAID,KAND;AAOA,SAAKO,QAAL,CAAc;AACZ7B,MAAAA,WAAW,EAAEyB,OAAO,CAACuG,iBADT;AAEZ/H,MAAAA,UAAU,EAAEwB,OAAO,CAAC+B;AAFR,KAAd;AAID;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCAyE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BD,UAAMlB,CAAC,GAAG,IAAIjC,IAAJ,EAAV;;AACA,QAAIiC,CAAC,CAAC9B,OAAF,MAAe,KAAKxF,KAAL,CAAWmB,aAAX,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BhC,IAA/B,CAAoCqG,OAApC,EAAnB,EAAkE;AACjE,YAAM6B,eAAe,GAAG,EAAxB;AACA,UAAItI,CAAC,GAAG,CAAR;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBuI,QAAAA,CAAC,CAACC,OAAF,CAAUD,CAAC,CAAC9B,OAAF,KAAczG,CAAxB;AACAsI,QAAAA,eAAe,CAAC7I,IAAhB,CAAqB8I,CAArB;AACD;;AACD,WAAKpF,QAAL,CAAc;AAAEf,QAAAA,aAAa,EAAEkG;AAAjB,OAAd;AACA;;AAGA,QAAIkB,SAAS,CAACzG,OAAV,KAAsB,KAAKS,KAAL,CAAWT,OAArC,EAA8C;AAC5C,YAAM;AAAEJ,QAAAA,KAAF;AAASI,QAAAA;AAAT,UAAqB,KAAKS,KAAhC;AACA,WAAKL,QAAL,CAAc;AACZ7B,QAAAA,WAAW,EAAEyB,OAAO,CAACuG,iBADT;AAEZ/H,QAAAA,UAAU,EAAEwB,OAAO,CAAC+B;AAFR,OAAd;AAID;AACF;;AAED4E,EAAAA,yBAAyB,GAAG;AAC1B,UAAM;AAAE/G,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAAqB,KAAKS,KAAhC;AACA,QAAIZ,WAAW,GAAG,EAAlB;AACAD,IAAAA,KAAK,IAAIA,KAAK,CAACgH,GAAN,CAAWC,IAAD,IAAU;AAC3B,YAAM/G,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAE8G,IAAI,CAAC9G,EAAX;AAAeC,QAAAA,OAAO,EAAE6G;AAAxB,OAApB;AACAhH,MAAAA,WAAW,CAACnD,IAAZ,CAAiBoD,WAAjB;AACD,KAHQ,CAAT;AAIA,SAAKM,QAAL,CAAc;AACZzB,MAAAA,kBAAkB,EAAEkB;AADR,KAAd;AAGD;AACL;;;;;;AAMI;;;;;;;;;;;;;;;;;;AA2BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CGiH,EAAAA,WAAW,CAACC,KAAD,EAAQnH,KAAR,EAAe;AACzB,QAAIoH,IAAI,GAAGpH,KAAK,CAACmH,KAAD,CAAhB;AACA,QAAIE,MAAM,GAAGD,IAAI,CAACjH,EAAlB;AACAlE,IAAAA,OAAO,CAACC,GAAR,CAAYkL,IAAI,CAACE,KAAjB;;AAEA,QAAID,MAAM,KAAK,8BAAX,IAA6C,KAAK/I,KAAL,CAAWJ,OAAX,CAAmB6D,KAAnB,CAAyBC,CAAC,IAAIoF,IAAI,CAACnF,iBAAL,IAA0BmF,IAAI,CAACnF,iBAAL,CAAuBC,QAAvB,CAAgCF,CAAhC,CAAxD,CAA7C,IAA4I,KAAK1D,KAAL,CAAWC,KAAX,CAAiBwD,KAAjB,CAAuBC,CAAC,IAAIoF,IAAI,CAACjF,UAAL,IAAmBiF,IAAI,CAACjF,UAAL,CAAgBD,QAAhB,CAAyBF,CAAzB,CAA/C,CAA5I,IAA2N,KAAK1D,KAAL,CAAWL,aAAX,CAAyB8D,KAAzB,CAA+BC,CAAC,IAAIoF,IAAI,CAACnJ,aAAL,IAAsBmJ,IAAI,CAACnJ,aAAL,CAAmBiE,QAAnB,CAA4BF,CAA5B,CAA1D,CAA/N,EAA0T;AACxT,0BACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEoF,IAAZ;AAAkB,QAAA,EAAE,EAAEC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAKM;AACJ,aAAO,EAAP;AACD;AACF;;AA6VGE,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAE3G,MAAAA,IAAF;AAAQZ,MAAAA,KAAR;AAAeI,MAAAA,OAAf;AAAwBoH,MAAAA,OAAxB;AAAiCC,MAAAA,IAAjC;AAAuCC,MAAAA,KAAvC;AAA8CC,MAAAA,MAA9C;AAAsD1I,MAAAA;AAAtD,QAA6E,KAAK4B,KAAxF;AACA,QAAIZ,WAAW,GAAG,EAAlB;AAEA,QAAI2H,cAAJ;;AACA,QAAI5H,KAAJ,EAAW;AACT,YAAM6H,OAAO,GAAG7H,KAAK,CAAC8H,IAAN,CAAW1C,OAAO,IAAIA,OAAO,CAACjF,EAAR,KAAe,8BAArC,CAAhB;AACAyH,MAAAA,cAAc,gBAAG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAGC,OAAb;AAAuB,QAAA,EAAE,EAAC,8BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AACD;;AAGD,UAAME,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,KAAK,EAAE,OAFS;AAGhBC,MAAAA,MAAM,EAAE,MAHQ;AAIhBC,MAAAA,eAAe,EAAE,SAJD;AAKhBC,MAAAA,SAAS,EAAE,QALK;AAMhBC,MAAAA,KAAK,EAAE,MANS;AAOhBC,MAAAA,QAAQ,EAAE,MAPM;AAQhBC,MAAAA,KAAK,EAAE,QARS;AAShBC,MAAAA,UAAU,EAAE;AATI,KAApB;AAYA,QAAIC,GAAJ;;AACA,QAAIjB,OAAO,KAAK,IAAhB,EAAsB;AAClBiB,MAAAA,GAAG,gBAAG;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AACH,KAFD,MAGK;AACD,UAAI,KAAK5H,KAAL,CAAW6G,KAAX,KAAqB,EAAzB,EAA6B;AAEzBe,QAAAA,GAAG,gBAAG,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAEd,MAAtB;AAA8B,UAAA,KAAK,EAAED,KAArC;AAA4C,UAAA,KAAK,EAAE,KAAK1E,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAEH,OAJD,MAKK;AACDyF,QAAAA,GAAG,gBACD;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,UAAZ;AAAwB9K,YAAAA,IAAI,EAAE,KAA9B;AAAqC+K,YAAAA,GAAG,EAAE,KAA1C;AAAiDC,YAAAA,MAAM,EAAE,WAAzD;AAAsET,YAAAA,eAAe,EAAE,OAAvF;AAAgGF,YAAAA,KAAK,EAAE;AAAvG,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAQ,UAAA,KAAK,EAAE;AAACY,YAAAA,KAAK,EAAE,OAAR;AAAiBV,YAAAA,eAAe,EAAE,OAAlC;AAA2CE,YAAAA,KAAK,EAAE,OAAlD;AAA2DO,YAAAA,MAAM,EAAE,GAAnE;AAAwEE,YAAAA,OAAO,EAAE;AAAjF,WAAf;AAAuG,UAAA,OAAO,EAAE,KAAK9F,mBAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,UAAA,KAAK,EAAE;AAAC+F,YAAAA,SAAS,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAFF,eAGE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAE;AAACF,YAAAA,KAAK,EAAE;AAAR,WAA/C;AAAiE,UAAA,OAAO,EAAE,KAAKtE,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF;AAMH;AACJ;;AAKD,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAC,8BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFE,EAOC3D,IAAI,CAACE,GAAL,IAAaF,IAAI,CAACoI,OAAL,IAAgBpI,IAAI,CAACqI,QAAlC,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAOGrI,IAAI,CAACE,GAAL,gBACF;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,IAAI,CAACE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADE,GAIA,IAXH,eAeE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAkC,MAAA,KAAK,MAAvC;AAAwC,MAAA,KAAK,EAAE;AAAEoI,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,UAAU,EAAC;AAA3B,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAET,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,GAAG,EAAE;AAA7B,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,KAAKhI,UAAhD;AAA4D,MAAA,KAAK,EAAE;AAAE2H,QAAAA,QAAQ,EAAE,OAAZ;AAAqBc,QAAAA,UAAU,EAAE;AAAjC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK9K,KAAL,CAAWe,oBAAX,gBAAkC;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAlC,GAAwH,IADzH,eAEA,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,SAAS,EAAC,iBAAvC;AAAyD,MAAA,WAAW,EAAE,KAAKmF,cAA3E;AAA2F,MAAA,YAAY,EAAE,KAAKC,gBAA9G;AAAgI,MAAA,OAAO,EAAE,KAAK7B,YAA9I;AAA4J,MAAA,KAAK,EAAE;AAAE0F,QAAAA,QAAQ,EAAE,OAAZ;AAAqBc,QAAAA,UAAU,EAAE;AAAjC,OAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,CALA,eAWA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKvE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXA,CAHA,eAmBA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKvG,KAAL,CAAWkB,kBAAxB;AAA4C,MAAA,MAAM,EAAE,KAAKsF,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKxG,KAAL,CAAWmB,aAAX,IAA4B,KAAKnB,KAAL,CAAWmB,aAAX,CAAyBuH,GAAzB,CAA8BlB,GAAD,IAAS;AACjE,aACEA,GAAG,CAACkB,GAAJ,CAAS9B,IAAD,IAAU;AAChB,4BAAO;AAAK,UAAA,KAAK,EAAC,MAAX;AAAkB,uBAAWA,IAAI,CAACzH,IAAL,CAAUqG,OAAV,EAA7B;AAAkD,wBAAYoB,IAAI,CAACpH,KAAnE;AAA0E,sBAAUoH,IAAI,CAACO,GAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+FP,IAAI,CAACzH,IAAL,CAAUqG,OAAV,EAA/F,QAAsHoB,IAAI,CAACpH,KAA3H,OAAmIoH,IAAI,CAACO,GAAxI,CAAP;AACD,OAFD,CADF;AAKD,KAN4B,CAF/B,CADF,eAcE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1H,gBAAgB,IAAIA,gBAAgB,CAACiJ,GAAjB,CAAsBvJ,IAAD,IAAU;AAClD,aAAO,KAAK+H,wBAAL,CAA8B/H,IAA9B,CAAP;AACD,KAFoB,CADvB,CAdF,CAFJ,CAnBA,eA6CA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKa,KAAL,CAAWQ,kBAAxB;AAA4C,MAAA,MAAM,EAAE,KAAKoE,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKQ,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HADF,eAEE;AAAU,MAAA,EAAE,EAAC,SAAb;AAAuB,MAAA,WAAW,EAAC,aAAnC;AAAiD,MAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFN,eAEsB;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAgC,MAAA,KAAK,EAAE,CAAvC;AAA0C,MAAA,QAAQ,EAAE,KAAKxC,YAAzD;AAAuE,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWU,MAAX,KAAsB,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtB,eAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJN,eAIsB;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAgC,MAAA,KAAK,EAAE,CAAvC;AAA0C,MAAA,QAAQ,EAAE,KAAKkC,YAAzD;AAAuE,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWU,MAAX,KAAsB,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtB,eAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANN,eAMsB;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAgC,MAAA,KAAK,EAAE,CAAvC;AAA0C,MAAA,QAAQ,EAAE,KAAKkC,YAAzD;AAAuE,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWU,MAAX,KAAsB,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANtB,CALJ,eAgBE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF,EAmBIwI,OAAO,gBAAI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GAAiC,IAnB5C,EAoBIC,IAAI,KAAK,CAAT,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAb,GAA0C,IApB9C,EAqBIA,IAAI,KAAK,CAAT,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mJAAb,GAA4J,IArBhK,CAFJ,CA7CA,eA2EA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKnJ,KAAL,CAAWG,YAAxB;AAAsC,MAAA,MAAM,EAAE,KAAKsE,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKF,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,eAC2B;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,kBAAvB;AAA0C,MAAA,KAAK,EAAC,MAAhD;AAAuD,MAAA,QAAQ,EAAE,KAAK3B,YAAtE;AAAoF,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWO,gBAAX,KAAgC,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B,CAHT,eAOS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,eAC6B;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,kBAAvB;AAA0C,MAAA,KAAK,EAAC,QAAhD;AAAyD,MAAA,QAAQ,EAAE,KAAKqC,YAAxE;AAAsF,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWO,gBAAX,KAAgC,QAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B,CAPT,eAWY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eACyB;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,kBAAvB;AAA0C,MAAA,KAAK,EAAC,OAAhD;AAAwD,MAAA,QAAQ,EAAE,KAAKqC,YAAvE;AAAqF,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWO,gBAAX,KAAgC,OAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CAXZ,eAeS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADH,eACiC;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,kBAAvB;AAA0C,MAAA,KAAK,EAAC,MAAhD;AAAuD,MAAA,QAAQ,EAAE,KAAKqC,YAAtE;AAAoF,MAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWO,gBAAX,KAAgC,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjC,CAfT,eAoBE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,CADF,CAFF,CA3EA,EAwGE,KAAKP,KAAL,CAAWW,kBAAX,GAAgCwJ,GAAhC,GAAsC,IAxGxC,eAiHE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKnK,KAAL,CAAWE,IAAxB;AAA8B,MAAA,MAAM,EAAE,KAAKuC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAU,MAAA,EAAE,EAAC,aAAb;AAA2B,MAAA,QAAQ,EAAE,KAAKC,YAA1C;AAAwD,MAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWK,WAA1E;AAAuF,MAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,eAME;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCR,WAAW,CAAC6I,GAAZ,CAAgBtF,MAAM,IAAI;AACzB,0BACE;AAAK,QAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWM,UAAX,IAAyB,KAAKN,KAAL,CAAWM,UAAX,CAAsBsD,QAAtB,CAA+BR,MAA/B,CAAzB,GAAkE,iBAAlE,GAAsF,mBAAtG;AAA4H,QAAA,EAAE,EAAEA,MAAhI;AAAwI,QAAA,OAAO,EAAE,KAAKJ,gBAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,MADH,CADF;AAKD,KANA,CADD,CANF,eAgBE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CADF,CAFF,CAjHF,eA0IE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKpD,KAAL,CAAWI,aAAxB;AAAuC,MAAA,MAAM,EAAE,KAAKsC,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAFA,CA1IF,eAiJF,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAE0H,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,GAAG,EAAE,KAA7B;;AAAoC;AAA4C/K,QAAAA,IAAI,EAAE,IAAtF;AAA4FyL,QAAAA,OAAO,EAAE,MAArG;AAA6GF,QAAAA,UAAU,EAAE,QAAzH;AAAoID,QAAAA,MAAM,EAAE;AAA5I,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE,mCAAd;AAAmDd,QAAAA,QAAQ,EAAE;AAA7D,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,eAIA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAE;AAAEc,QAAAA,UAAU,EAAE,mCAAd;AAAmDd,QAAAA,QAAQ,EAAE,OAA7D;AAAsEgB,QAAAA,WAAW,EAAE;AAAnF,OAAjC;AAA8H,MAAA,OAAO,EAAE,KAAKrF,kBAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJA,eAKE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,IAAI,EAAE,KAAK3F,KAAL,CAAWY,wBAA5C;AAAsE,MAAA,MAAM,EAAE,KAAKgF,mBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAEgE,QAAAA,MAAM,EAAE;AAAV,OAApC;AAAsD,MAAA,EAAE,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhK,OAAO,CAAC8I,GAAR,CAAYtF,MAAM,IAAI;AACrB,0BACE;AAAK,QAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWJ,OAAX,IAAsB,KAAKI,KAAL,CAAWJ,OAAX,CAAmBgE,QAAnB,CAA4BR,MAA5B,CAAtB,GAA4D,iBAA5D,GAAgF,mBAAhG;AAAqH,QAAA,EAAE,EAAEA,MAAzH;AAAiI,QAAA,OAAO,EAAE,KAAKU,aAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,MADH,CADF;AAKD,KANA,CADH,CADA,CALF,eAiBE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAE;AAAE0H,QAAAA,UAAU,EAAE,mCAAd;AAAmDd,QAAAA,QAAQ,EAAE,OAA7D;AAAsEgB,QAAAA,WAAW,EAAE;AAAnF,OAAjC;AAA8H,MAAA,OAAO,EAAE,KAAKjF,qBAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAjBF,eAkBE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,IAAI,EAAE,KAAK/F,KAAL,CAAWc,2BAA5C;AAAyE,MAAA,MAAM,EAAE,KAAKkF,sBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAE4D,QAAAA,MAAM,EAAE;AAAV,OAApC;AAAsD,MAAA,EAAE,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjK,aAAa,CAAC+I,GAAd,CAAkBtF,MAAM,IAAI;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWL,aAAX,IAA4B,KAAKK,KAAL,CAAWL,aAAX,CAAyBiE,QAAzB,CAAkCR,MAAlC,CAA5B,GAAwE,iBAAxE,GAA4F,mBAA5G;AAAiI,QAAA,EAAE,EAAEA,MAArI;AAA6I,QAAA,OAAO,EAAE,KAAKiB,mBAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjB,MADH,CADF;AAKD,KANA,CADH,CADA,CAlBF,eA8BE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAE;AAAE0H,QAAAA,UAAU,EAAE,mCAAd;AAAmDd,QAAAA,QAAQ,EAAE,OAA7D;AAAsEgB,QAAAA,WAAW,EAAE;AAAnF,OAAjC;AAA8H,MAAA,OAAO,EAAE,KAAKnF,cAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA9BF,eA+BE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,IAAI,EAAE,KAAK7F,KAAL,CAAWa,oBAA5C;AAAkE,MAAA,MAAM,EAAE,KAAKiF,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAE8D,QAAAA,MAAM,EAAE;AAAV,OAApC;AAAsD,MAAA,EAAE,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/J,WAAW,CAAC6I,GAAZ,CAAgBtF,MAAM,IAAI;AACzB,0BACE;AAAK,QAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiB2D,QAAjB,CAA0BR,MAA1B,CAApB,GAAwD,iBAAxD,GAA4E,mBAA5F;AAAiH,QAAA,EAAE,EAAEA,MAArH;AAA6H,QAAA,OAAO,EAAE,KAAKe,WAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,MADH,CADF;AAKD,KANA,CADH,CADA,CA/BF,CAjJE,CAfF,CADC,gBA0ND;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjOA,CAFF;AAsOD;;AAh6B+B;;AAm6BtC,MAAM6H,eAAe,GAAIjL,KAAD,IAAW;AACjCrC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BoC,KAAK,CAAC4H,SAArC;AACA,SAAO;AACLlG,IAAAA,KAAK,EAAE1B,KAAK,CAAC4H,SAAN,CAAgBsD,OAAhB,CAAwBxJ,KAD1B;AAELY,IAAAA,IAAI,EAAEtC,KAAK,CAACvE,QAAN,CAAe6G,IAFhB;AAGLR,IAAAA,OAAO,EAAE9B,KAAK,CAACvE,QAAN,CAAeqG,OAHnB;AAILoH,IAAAA,OAAO,EAAElJ,KAAK,CAACsC,IAAN,CAAW4G,OAJf;AAKLC,IAAAA,IAAI,EAAEnJ,KAAK,CAACsC,IAAN,CAAW6G,IALZ;AAMLC,IAAAA,KAAK,EAAEpJ,KAAK,CAACsC,IAAN,CAAW8G,KANb;AAOLC,IAAAA,MAAM,EAAErJ,KAAK,CAACsC,IAAN,CAAW+G,MAPd;AAQLrI,IAAAA,QAAQ,EAAEhB,KAAK,CAACsC,IAAN,CAAWtB,QARhB;AASLL,IAAAA,kBAAkB,EAAEX,KAAK,CAACsC,IAAN,CAAW3B;AAT1B,GAAP;AAWD,CAbD;;AAeA,eAAejE,OAAO,CACtBD,OAAO,CAACwO,eAAD,EAAkB;AAACrO,EAAAA,YAAD;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAlB,CADe,EAEtBH,gBAAgB,CAAC,CACjB;AAAEkL,EAAAA,UAAU,EAAE;AAAd,CADiB,CAAD,CAFM,CAAP,CAKb9H,WALa,CAAf;AAOA;;;;;;;AAQA","sourcesContent":["import React, { Component } from 'react';\nimport './component.css';\nimport firebase from '../config/firebaseconfig';\nimport { Container, Navbar } from 'react-bootstrap';\nimport Card from './design/card';\nimport Filter from './design/filter';\nimport '../styles/waitingroom.css';\nimport { thisTypeAnnotation } from '@babel/types';\nimport NavBar from './navbar';\nimport ChatBox from './chatbox.js';\nimport LoggedOutNavbar from './loggedoutnavbar';\n\nimport '../styles/card.css';\n\nimport SignUp from './signup';\nimport LogIn from './login';\nimport { Button, Modal } from 'react-bootstrap';\nimport MatchingBox from './matchingbox.js';\nimport MatchingWindow from './matchingwindow.js';\nimport {Helmet} from \"react-helmet\";\n\n//Redux\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { submitTicket, startMatching, groupMessaging } from '../redux/actions';\n\nimport Selection from '@simonwep/selection-js';\n\n//var selection = require('@simonwep/selection-js');\n/*\n    selection = new Selection({\n  class: \"selection-area\",\n  mode: \"touch\",\n  singleClick: \"true\",\n  selectables: [\"schedule\"],\n  boundaries: [\"schedule\"]\n})\n\nselection.on(\"start\", ({inst, selected, oe}) => {\n  for (const el of selected) {\n    el.classList.remove(\"selected\");\n    inst.removeFromSelection(el);\n  }\n  inst.clearSelection();\n})\n.on(\"move\", ({changed: {removed, added}}) => {\n  for (const el of added) {\n    el.classList.add(\"selected\");\n  }\n  for (const el of removed) {\n    el.classList.remove(\"selected\");\n  }\n})\n*/\nconst selection = Selection.create({\n  class: \"selection-area\",\n  mode: \"touch\",\n  singleClick: \"true\",\n  selectables: [\".slot\"],\n  boundaries: [\".schedule\"]\n})\n  .on(\"start\", ({ inst, selected, oe }) => {\n    // Remove class if the user isn't pressing the control key or ⌘ key\n    console.log('start');\n    if (!oe.ctrlKey && !oe.metaKey) {\n      // Unselect all elements\n\n      for (const el of selected) {\n        el.classList.remove(\"selected\");\n\n        inst.removeFromSelection(el);\n      }\n\n      // Clear previous selection\n\n      inst.clearSelection();\n    }\n  })\n  .on(\"move\", ({ changed: { removed, added } }) => {\n    // Add a custom class to the elements that where selected.\n\n    for (const el of added) {\n      /*\n      if (el.hour === \"0:00\") {\n        el.classList.add(\"selected\");\n      }\n      */\n      \n      el.classList.add(\"selected\");\n      selected.push(el);\n    }\n\n    // Remove the class from elements that where removed\n\n    // since the last selection\n\n    for (const el of removed) {\n      el.classList.remove(\"selected\");\n      selected.indexOf(el);\n      selected.splice(el, 1);\n    }\n  })\n  .on(\"stop\", ({ inst }) => {\n    console.log('stop', selection.getSelection());\n    //const selected = selection.getSelection();\n    console.log(selected);\n    var current = new Array();\n    /*\n    var temp = new Array();  \n    temp.push(selected[0]);\n    current.push(temp);\n    console.log(current);\n    */\n    \n\n    if (selected.length > 1) {\n      for (var i  = 0; i < selected.length; i++) {\n        console.log(i + \" \" + selected[i]);\n        var checked = false;\n        for (var j = 0; j < current.length; j++) {\n          console.log(selected[i].dataset.date + \" vs \" + current[j][0].dataset.date)\n          if (selected[i].dataset.date === current[j][0].dataset.date) {\n            current[j].push(selected[i]);\n            checked = true;\n          }\n        }\n        if (checked === false) {\n          var temp = new Array();\n          temp.push(selected[i]);\n          current.push(temp);\n          console.log(temp);\n        }\n        console.log(current);\n      }\n\n      \n  \n      for (var i = 0; i < current.length; i++) {\n        current[i].sort(function(left, right) {\n          return left.dataset.start - right.dataset.start;\n        });\n      }\n    }\n\n    currentTimeSlots = current;\n    console.log(currentTimeSlots);\n\n    \n    // Remember selection in case the user wants to add smth in the next one\n\n    inst.keepSelection();\n  })\n\nvar selected = [\n\n]\n\nvar currentTimeSlots = [\n\n]\n\n\nconst personalities = [\n    \"hard-working\",\n    \"helpful/kind/altruistic\",\n    \"outgoing/social\",\n    \"knowledgeable\",\n    \"ambitious\",\n    \"thoughtful\",\n    \"observant\",\n    \"introvert\",\n    \"humble\",\n    \"imaginative\",\n    \"impartial\",\n    \"intelligent\",\n    \"creative\",\n    \"ethics\",\n    \"social justice\",\n    \"insightful/perceptive\",\n    \"energetic\",\n    \"smart\",\n    \"curious\",\n    \"open-minded\",\n    \"meticulous\",\n    \"logics\",\n    \"agreeable\",\n    \"competent\",\n    \"wealth\",\n    \"social influence/recognition\",\n    \"geek\",\n    \"executive\",\n    \"leader\",\n    \"adventurer\",\n    \"thinker\",\n    \"analyst\",\n    \"planner\",\n    \"artist\",\n    \"designer\"\n]\n\nconst filters = [\n    \"entrepreneurship\",\n    \"finance/investing/vc\",\n    \"business analysis/consulting\",\n    \"software engineering\",\n    \"data analysis/science\",\n    \"ui/ux design\",\n    \"artificial intelligence\",\n    \"electrical engineering\",\n    \"mechanical engineering\",\n    \"biomedical engineering\",\n    \"mathematics\",\n    \"physics\",\n    \"chemistry\",\n    \"psychology\",\n    \"economics\",\n    \"history\",\n    \"politics\",\n    \"law\",\n    \"healthcare\",\n    \"arts\"\n];\n\nconst taskfilters = [\n  'startup/personal project',\n  'work/internship',\n  'study',\n  'interview preparation',\n  'exam preparation',\n  'reading books',\n  'research',\n  'brainstorming',\n  'finance/investing/vc',\n  'business analysis/consulting',\n  \"software engineering\",\n    \"data analysis/science\",\n    \"ui/ux design\",\n    \"artificial intelligence\",\n    \"electrical engineering\",\n    \"mechanical engineering\",\n    \"biomedical engineering\",\n    \"mathematics\",\n    \"physics\",\n    \"chemistry\",\n    \"psychology\",\n    \"economics\",\n    \"history\",\n    \"politics\",\n    \"law\",\n    \"healthcare\",\n    \"arts\"\n];\n\nconst timeSegments = [\n  \"0:00\",\n  \"6:00\",\n  \"12:00\",\n  \"18:00\"\n];\n\n\n  \n  class WaitingRoom extends Component {\n  \n    state = {\n      filters: [],\n      tasks: [],\n      show: false,\n      showmatching: false,\n      routeguarding: false,\n      description: \"\",\n      reduxtasks: [],\n      personalities: [],\n      genderpreference: \"\",\n      //showmatchingwindow: false,\n      showgroupmessaging: false,\n      currentprofilelist: [],\n      number: 0,\n      showmatchingwindow: false,\n      interestFilterVisibility: false,\n      taskFilterVisibility: false,\n      personalityFilterVisibility: false,\n      changeMatchingButton: false,\n      matching: {},\n      availableTimes: {},\n      scheduleVisibility: false,\n      todaySchedule: {},\n      selecting: false,\n      startTime: {date: \"\", hour: \"\"},\n      endTime: {date: \"\", hour: \"\"},\n      selectedSlots: []\n    }\n\n    buildList = async (users) => {\n      var profilelist = [];\n      var i = 0;\n      while (users && i < users.length) {\n        const userprofile = { id: users[i].id, profile: users[i]};\n        profilelist.push(userprofile);\n        i++;\n      }\n      return profilelist;\n    }\n\n    componentDidMount() {\n/*\n      setTimeout(() => {\n      if (localStorage.getItem(\"matching\") === \"true\") {\n        if (localStorage.getItem(\"pool\") === \"false\" ) {\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n            matching_seekers: firebase.firestore.FieldValue.arrayRemove({id: this.props.auth.uid, gender: localStorage.getItem(\"gender\"), gender_preference: localStorage.getItem(\"genderpreference\")})\n          })\n        }\n        else {\n          firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n          .then((doc) => {\n            const found = doc.data().matching_pool.find(element => element.id === this.props.auth.uid);\n            firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n              matching_pool: firebase.firestore.FieldValue.arrayRemove(found)\n            })\n          })\n        }\n        localStorage.setItem(\"matching\", false);\n      }\n      }, 1000)\n    */\n    var currentSchedule = new Array();\n    var todaySchedule = new Array();\n    var i = 0;\n    var d = new Date();\n    for (i = 0; i < 7; i++) {\n      //console.log(d.getDate());\n      console.log(d.getDate());\n      currentSchedule.push(new Date(d));\n      d.setDate(d.getDate() + 1);\n    }\n\n    for (var i = 0; i < timeSegments.length - 1; i++) {\n      var row = new Array();\n      for (var j = 0; j < 7; j++) {\n        row.push({date: currentSchedule[j], start: timeSegments[i], end: timeSegments[i + 1]});\n      }\n      todaySchedule.push(row);\n    }\n    this.setState({ todaySchedule: todaySchedule });\n\n\n   setTimeout(() => {\n    if (localStorage.getItem(\"matching\") === \"true\") {\n      if (localStorage.getItem(\"pool\") === \"false\" ) {\n        firebase.firestore().collection(\"matching\").doc(\"seekers\").collection(\"matching_seekers\").doc(this.props.auth.uid).delete();\n        firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n          count: firebase.firestore.FieldValue.increment(-1)\n        })\n      }\n      else {\n        firebase.firestore().collection(\"matching\").doc(\"seekers\").collection(\"matching_pool\").doc(this.props.auth.uid).delete();\n        firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n          count: firebase.firestore.FieldValue.increment(-1)\n        })\n      }\n      localStorage.setItem(\"matching\", false);\n    }\n    }, 1000)\n  \n      const { users, profile } = this.props;\n      this.buildList(users)\n      .then((profilelist) => {\n        this.setState({\n          currentprofilelist: profilelist,\n          //showmatchingwindow: true\n        })\n      });\n      this.setState({\n        description: profile.tasks_description,\n        reduxtasks: profile.tasks_tags,\n      })\n    }\n\n    /*\n    deleteMatching = () => {\n      console.log(\"enter this part\");\n      if (localStorage.getItem(\"matching\") === \"true\") {\n        console.log(localStorage.getItem(\"pool\"));\n        if (localStorage.getItem(\"pool\") === \"false\" ) {\n          console.log(this.props.auth.uid);\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n            matching_seekers: firebase.firestore.FieldValue.arrayRemove({id: this.props.auth.uid, gender: localStorage.getItem(\"gender\"), gender_preference: localStorage.getItem(\"genderpreference\")})\n          })\n        }\n        else {\n          firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n          .then((doc) => {\n            const found = doc.data().matching_pool.find(element => element.id === this.props.auth.uid);\n            firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n              matching_pool: firebase.firestore.FieldValue.arrayRemove(found)\n            })\n          })\n        }\n        localStorage.setItem(\"matching\", false);\n      }\n    }\n\n\n    setupBeforeUnloadListener() {\n      window.addEventListener(\"beforeunload\", (ev) => {\n        ev.preventDefault();\n        console.log(\"enter this part\");\n        return this.deleteMatching();\n      });\n    }\n    */\n\n    componentDidUpdate(prevprops, prevstate) {\n      /*\n      console.log(prevstate.matching);\n      if (prevprops.matching !== this.props.matching) {\n        this.setState({\n          matching: this.props.matching\n        })\n      }\n      if (prevstate.matching.going === true) {\n        if (prevstate.matching.pool === false) {\n          firebase.firestore().collection(\"matching\").doc(\"seekers\").update({\n            matching_seekers: firebase.firestore.FieldValue.arrayRemove(prevstate.matching.map)\n          })\n        }\n        else {\n          firebase.firestore().collection(\"matching\").doc(\"pool\").get()\n          .then((doc) => {\n            const pool = doc.data().matching_pool;\n            const found = pool.find(element => element.id === this.props.auth.uid);\n            const index = pool.indexOf(found);\n            if (index > -1) {\n              pool.splice(index, 1);\n            }\n            firebase.firestore().collection(\"matching\").doc(\"pool\").update({\n              matching_pool: pool\n            })\n          })\n        }\n      }\n      */\n     const d = new Date();\n     if (d.getDate() != this.state.todaySchedule[0][0].date.getDate()) {\n      const currentSchedule = {};\n      var i = 0;\n      for (i = 0; i < 6; i++) {\n        d.setDate(d.getDate() + i);\n        currentSchedule.push(d);\n      }\n      this.setState({ todaySchedule: currentSchedule });\n     }\n\n\n      if (prevprops.profile !== this.props.profile) {\n        const { users, profile } = this.props;\n        this.setState({\n          description: profile.tasks_description,\n          reduxtasks: profile.tasks_tags,\n        })\n      }\n    }\n\n    componentWillReceiveProps() {\n      const { users, profile } = this.props;\n      var profilelist = [];\n      users && users.map((user) => {\n        const userprofile = { id: user.id, profile: user};\n        profilelist.push(userprofile);\n      })\n      this.setState({\n        currentprofilelist: profilelist,\n      });\n    }\n/*\n    shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.isFavourite != this.props.isFavourite;\n    }\n    */\n    \n    /*\n    updateFilters = (e) => {\n      e.preventDefault();\n     if (e.target.className === \"unselected-button\") {\n      const helper = this.state.filters;\n      helper.push(e.target.id);\n      this.setState({ filters : helper });\n      e.target.className = \"selected-button\";\n     }\n      else {\n        const newfilters = this.state.filters.filter(tag => tag !== e.target.id);\n        this.setState({ filters : newfilters });\n        e.target.className = \"unselected-button\";\n      }\n    }\n    */\n\n    clickSignUp = (e) => {\n      e.preventDefault();\n      this.setState({ signup: true });\n    }\n\n    clickLogIn = (e) => {\n      e.preventDefault();\n      this.setState({ signup : false });\n    }\n \n/*\n    renderCards(index, users) {\n      let card = users[index];\n      let cardid = card.id;\n\n      if(this.state.filters.length === 0 && this.state.tasks.length === 0) {\n        return (\n          <Card info={card} id={cardid}/>\n        );\n      }\n      else if (this.state.filters.length !== 0 && this.state.tasks.length === 0) {\n        if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t))) {\n          return (\n            <Card info={card} id={cardid}/>\n          )\n        }\n      }\n      else if (this.state.filters.length !== 0 && this.state.tasks.length === 0) {\n        if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t))) {\n          return (\n            <Card info={card} id={cardid}/>\n          )\n        }\n      }\n      else if (this.state.filters.length === 0 && this.state.tasks.length !== 0) {\n        if (this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t))) {\n          return (\n            <Card info={card} id={cardid}/>\n          )\n        }\n      }\n      else if (this.state.filters.length !== 0 && this.state.tasks.length !== 0) {\n        if (this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t)) && this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t))) {\n        return (\n          <Card info={card} id={cardid}/>\n        );\n        }\n      } else {\n        return '';\n      }\n    }\n    */\n\n   renderCards(index, users) {\n    let card = users[index];\n    let cardid = card.id;\n    console.log(card.image);\n\n    if (cardid !== \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\" && this.state.filters.every(t => card.areas_of_interest && card.areas_of_interest.includes(t)) && this.state.tasks.every(t => card.tasks_tags && card.tasks_tags.includes(t)) && this.state.personalities.every(t => card.personalities && card.personalities.includes(t))) {\n      return (\n        <Card info={card} id={cardid}/>\n      );\n    }\n     else {\n      return '';\n    }\n  }\n    \n  \n\n    handleShow = (e) => {\n      e.preventDefault();\n      const { auth } = this.props;\n      if (!auth.uid) {\n        this.setState({ routeguarding: true });\n      } else this.setState({ show: true });\n    }\n  \n    handleClose = () => {\n      this.setState({ show: false });\n    }\n\n    handleCloseRedirect = () => {\n      this.setState({ routeguarding: false });\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.submitTicket(this.state);\n      this.setState({\n        show: false\n      })\n    } \n\n    handleChange = (e) => {\n      e.stopPropagation();\n      this.setState({\n        [e.target.id]: e.target.value\n      })\n    }\n\n    updateReduxTasks = (e) => {\n      e.preventDefault();\n    \n     if (e.target.className === \"unselected-button\") {\n      const helper = [...this.state.reduxtasks, e.target.id];\n      this.setState({ reduxtasks : helper });\n      e.target.className = \"selected-button\";\n     }\n      else {\n        const newfilters = this.state.reduxtasks.filter(tag => tag !== e.target.id);\n        this.setState({ reduxtasks : newfilters });\n        e.target.className = \"unselected-button\";\n      }\n    }\n\n\n    onlyFilters = async (e) => {\n      if (e.target.className === \"unselected-button\") {\n       const helper = [...this.state.filters, e.target.id];\n        this.setState({ filters : helper });\n        e.target.className = \"selected-button\";\n        return helper;\n       }\n        else {\n          const newfilters = this.state.filters.filter(tag => tag !== e.target.id);\n          this.setState({ filters : newfilters });\n          e.target.className = \"unselected-button\";\n          return newfilters;\n        }\n    }\n\n\n   filtersUpdateList = (newfilters) => {\n    const { users } = this.props;\n    var newprofilelist = [];\n    var i = 0;\n    while (i < users.length) {\n      if (this.state.filters.every(t => users && users[i].areas_of_interest && users[i].areas_of_interest.includes(t)) && this.state.tasks.every(t => users[i].tasks_tags && users[i].tasks_tags.includes(t)) && this.state.personalities.every(t => users[i].personalities && users[i].personalities.includes(t))) {\n        newprofilelist.push({id: users[i].id, profile: users[i]});\n      }\n      i++;\n    }\n    this.setState({currentprofilelist: newprofilelist});\n  }\n\n    updateFilters = async (e) => {\n      e.preventDefault();\n      this.onlyFilters(e)\n      .then((newfilters) => {\n        this.filtersUpdateList(newfilters);\n      })\n    }\n\n    onlyTasks = async (e) => {\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.tasks, e.target.id];\n        this.setState({ tasks : helper });\n        e.target.className = \"selected-button\";\n        return helper;\n       }\n        else {\n          const newfilters = this.state.tasks.filter(tag => tag !== e.target.id);\n          this.setState({ tasks : newfilters });\n          e.target.className = \"unselected-button\";\n          return newfilters;\n        }\n    }\n\n\n    tasksUpdateList = (newtasks) => {\n      const { users } = this.props;\n      var newprofilelist = [];\n      var i = 0;\n      while (i < users.length) {\n        if (newtasks.every(t => users[i].tasks_tags && users[i].tasks_tags.includes(t)) && this.state.filters.every(t => users[i].areas_of_interest && users[i].areas_of_interest.includes(t))) {\n          newprofilelist.push({id: users[i].id, profile: users[i]});\n        }\n        i++;\n      }\n      this.setState({currentprofilelist: newprofilelist});\n    }\n\n\n    updateTasks = async (e) => {\n      e.preventDefault();\n      return this.onlyTasks(e)\n      .then((newtasks) => {\n        this.filtersUpdateList(newtasks);\n      })\n    }\n\n\n    onlyPersonalities = async (e) => {\n      if (e.target.className === \"unselected-button\") {\n        const helper = [...this.state.personalities, e.target.id];\n        this.setState({ personalities : helper });\n        e.target.className = \"selected-button\";\n        return helper;\n       }\n        else {\n          const newfilters = this.state.personalities.filter(tag => tag !== e.target.id);\n          this.setState({ personalities : newfilters });\n          e.target.className = \"unselected-button\";\n          return newfilters;\n        }\n    }\n\n\n    updatePersonalities = async (e) => {\n      e.preventDefault();\n      return this.onlyPersonalities(e)\n      .then((newtasks) => {\n        this.filtersUpdateList(newtasks);\n      })\n    }\n\n\n\n\n    showMatching = (e) => {\n      e.preventDefault();\n      const { auth } = this.props;\n      if (!auth.uid) {\n        this.setState({ routeguarding: true})\n      } else {\n        this.setState({\n        showmatching: true\n      })  \n    }\n    }\n\n    handleMatching = (e) => {\n      e.preventDefault();\n      if (this.state.genderpreference !== \"\") {\n      this.props.startMatching(this.props.auth.uid, this.props.profile, this.props.profile.gender, this.state.genderpreference);\n      this.setState({\n        showmatching: false,\n        showmatchingwindow: true\n      })\n    }\n    }\n\n    closeMatching = () => {\n      this.setState({\n        showmatching: false\n      })\n    }\n\n    closeMatchingWindow = () => {\n      this.setState({\n        showmatchingwindow: false\n      })\n    }\n\n\n    showGroupMessaging = (e) => {\n      e.preventDefault();\n      if (!this.props.auth.uid) {\n        this.setState({ routeguarding: true })\n      } else this.setState({\n        showgroupmessaging: true\n      })\n    }\n\n    closeMessaging = () => {\n      this.setState({\n        showgroupmessaging: false\n      })\n    }\n  \n  \n    createMessage = (time) => {\n      let message = {};\n      message = { time: time, from : this.props.auth.uid, content: document.getElementById(\"message\").value };\n      return message;\n    }\n  \n\n    handleMessaging = (e) => {\n      e.preventDefault();\n      if (this.state.number !== 0 ) {\n      const date = new Date();\n      const time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes();\n      const message = this.createMessage(time);\n      this.props.groupMessaging(this.state.currentprofilelist, this.state.number, message, this.props.profile);\n      }\n    }\n\n    showInterestFilter = (e) => {\n      e.preventDefault();\n      this.setState({\n        interestFilterVisibility: true\n      })\n    }\n\n    closeInterestFilter = () => {\n      this.setState({\n        interestFilterVisibility: false\n      })\n    }\n\n    showTaskFilter = (e) => {\n      e.preventDefault();\n      this.setState({\n        taskFilterVisibility: true\n      })\n    }\n\n    closeTaskFilter = () => {\n      this.setState({\n        taskFilterVisibility: false\n      })\n    }\n\n    showPersonalityFilter = (e) => {\n      e.preventDefault();\n      this.setState({\n        personalityFilterVisibility: true\n      })\n    }\n\n    closePersonalityFilter = () => {\n      this.setState({\n        personalityFilterVisibility: false\n      })\n    }\n\n    handleTryAgain = (e) => {\n      e.preventDefault();\n      this.setState({\n        showmatchingwindow: false,\n        showmatching: true\n      })\n    }\n\n    changeMatching = () => {\n      document.getElementById(\"matching-button\").className = \"hovered-buttons\";\n      this.setState({\n        changeMatchingButton: true,\n      })\n    }\n\n    unchangeMatching = () => {\n      document.getElementById(\"matching-button\").className = \"initial-buttons\";\n      this.setState({\n        changeMatchingButton: false\n      })\n    }\n\n    changeMessaging = () => {\n      document.getElementById(\"messaging-button\").className = \"hovered-buttons\";\n      this.setState({\n        changeMessagingButton: true,\n      })\n    }\n\n    unchangeMessaging = () => {\n      document.getElementById(\"messaging-button\").className = \"initial-buttons\";\n      this.setState({\n        changeMessagingButton: false\n      })\n    }\n\n    showSchedule = (e) => {\n      e.preventDefault();\n      this.setState({scheduleVisibility: true});\n    }\n \n    closeSchedule = () => {\n      \n      this.setState({scheduleVisibility: false})\n    }\n\n    renderSegment = (segment, date) => {\n      return <div className=\"slot\">{date.getDate()}</div>\n    }\n\n    renderSlots = (slot) => {\n      console.log(slot.date.getDate() + slot.hour);\n      return <div className=\"slot\">{slot.date} - {slot.hour}</div>;\n    }\n    \n    startSelecting = (e) => {\n      e.preventDefault();\n      this.setState({\n        selecting: true,\n        startTime: e.target.element,\n        selectedSlots: [e.target.element]\n      })\n    }\n\n    keepSelecting = (e) => {\n      e.preventDefault();\n      if (this.state.selecting === true) {\n      \n      const slots = [...this.state.selectedSlots, e.target.element];\n      this.setState({\n        selectedSlots: slots\n      })\n    }\n    }\n\n    finishSelecting = (e) => {\n      e.preventDefault();\n      \n    }\n\n\n    displaySelectedTimeSlots = (date) => {\n      var start = date[0].start;\n      var end = date[date.length - 1].end;\n    return <span>{start} - {end}, {date[0].date}</span>\n    }\n\n      render() {\n\n        const { auth, users, profile, loading, sent, buddy, chatid, showmatchingwindow } = this.props;\n        var profilelist = [];\n\n        let founderprofile;\n        if (users) {\n          const founder = users.find(element => element.id === \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\");\n          founderprofile = <Card info={ founder } id=\"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\"></Card>;\n        }\n\n  \n        const buttonStyle = {\n            height: \"50px\",\n            width: \"500px\",\n            margin: \"45px\",\n            backgroundColor: '#fd9535',\n            textAlign: 'center',\n            color: \"#fff\",\n            fontSize: \"16px\",\n            shape: \"circle\",\n            fontWeight: \"bold\",\n        }\n\n        let box;\n        if (loading === true) {\n            box = <div class=\"loader\"></div>\n        }\n        else {\n            if (this.props.buddy !== \"\") {\n                \n                box = <MatchingWindow chat={chatid} buddy={buddy} close={this.closeMatchingWindow}/>\n                \n            }\n            else {\n                box = \n                  <div style={{ position: \"absolute\", left: \"35%\", top: \"35%\", border: \"1px solid\", backgroundColor: \"white\", width: \"550px\"}}>\n                    <button style={{float: \"right\", backgroundColor: \"white\", color: \"black\", border: \"0\", padding: \"0\" }} onClick={this.closeMatchingWindow}>x</button>\n                    <span style={{marginTop: \"15px\"}}>Sorry we cannot help you find a study/work buddy currently 😖</span>\n                    <Button variant=\"success\" type=\"submit\" style={{float: \"right\"}} onClick={this.handleTryAgain}>Try again?</Button>\n                  </div>\n            }\n        }\n\n\n\n\n        return (\n\n          <div>  \n\n        <Helmet>\n          <title>Buddies | Salon</title>\n          <meta name=\"description\" content=\"Find your study/work buddies\"></meta>\n        </Helmet>\n\n          {auth.uid || (auth.isEmpty && auth.isLoaded) ? \n          <div>\n\n\n            {<NavBar />}\n      \n\n            \n            {auth.uid ?\n           <div className=\"chatbox-header\">\n             <ChatBox roomid={auth.uid} />\n           </div>\n           : null}\n           \n\n  \n            <Container className=\"background\" fluid style={{ zIndex: \"-1\", alignItems:\"center\"}}>\n\n\n            <div className=\"form-inline\" style={{ position: \"absolute\", top: \"15%\"}}>\n            <Button className=\"update-button\" onClick={this.handleShow} style={{ fontSize: \"large\", fontFamily: \"Comic Sans MS, cursive, sans-serif\" }}>Update your tasks here! 🤗</Button>\n           \n\n            \n            <div >\n            {this.state.changeMatchingButton ? <span className=\"matching-button\">Randomly find a study/work buddy instantly</span> : null}\n            <Button id=\"matching-button\" className=\"initial-buttons\" onMouseOver={this.changeMatching} onMouseLeave={this.unchangeMatching} onClick={this.showMatching} style={{ fontSize: \"large\", fontFamily: \"Comic Sans MS, cursive, sans-serif\" }}>\n            🎲</Button>\n            </div>\n\n            <Button onClick={this.showSchedule}>Schedule</Button>\n           \n            </div>\n\n\n            <Modal show={this.state.scheduleVisibility} onHide={this.closeSchedule}>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                  <div className=\"schedule\">\n                 \n                    {this.state.todaySchedule && this.state.todaySchedule.map((row) => {\n                      return (\n                        row.map((slot) => {\n                          return <div class=\"slot\" data-date={slot.date.getDate()} data-start={slot.start} data-end={slot.end}>{slot.date.getDate()}: {slot.start}-{slot.end}</div>;\n                        })\n                      )\n                    })}\n\n\n                  </div>\n\n                  <div id=\"task-confirmation\">\n                    {currentTimeSlots && currentTimeSlots.map((date) => {\n                      return this.displaySelectedTimeSlots(date);\n                    })}\n                  </div>\n                </Modal.Body>\n              </Modal>\n\n\n\n            <Modal show={this.state.showgroupmessaging} onHide={this.closeMessaging}>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                  <form onSubmit={this.handleMessaging}>\n                    <span>Select a few tags on the page and send your message to up to 3 random users that have the tags in their profiles</span>\n                    <textarea id=\"message\" placeholder=\"Hi there...\" required></textarea>\n\n\n                      <div>\n                    \n                            <label>1</label><input type=\"radio\" id=\"number\" value={1} onChange={this.handleChange} checked={this.state.number === \"1\"} />   \n                      \n                            <label>2</label><input type=\"radio\" id=\"number\" value={2} onChange={this.handleChange} checked={this.state.number === \"2\"} />\n                    \n                            <label>3</label><input type=\"radio\" id=\"number\" value={3} onChange={this.handleChange} checked={this.state.number === \"3\"} />\n                        \n                      </div>\n                        \n\n                    <Button variant=\"success\" type=\"submit\">Send</Button>\n                  </form>\n                  { loading ?  <div class=\"loader\"></div> : null}\n                  { sent === 1 ? <span>Message sent!</span> : null }\n                  { sent === 2 ? <span>Sorry there are not enough users that satisfy the criteria, but the message has been sent to all the users if there are any! 😋</span> : null }\n                </Modal.Body>\n              </Modal>\n\n\n\n\n            <Modal show={this.state.showmatching} onHide={this.closeMatching}>\n              <Modal.Header closeButton></Modal.Header>\n              <Modal.Body>\n                <form onSubmit={this.handleMatching}>\n                  Match me with:\n                 \n                         <div>\n                            <label>Male only</label><input type=\"radio\" id=\"genderpreference\" value=\"Male\" onChange={this.handleChange} checked={this.state.genderpreference === \"Male\"}></input>   \n                            </div>\n                       \n                         <div>\n                            <label>Female only</label><input type=\"radio\" id=\"genderpreference\" value=\"Female\" onChange={this.handleChange} checked={this.state.genderpreference === \"Female\"} ></input>\n                            </div> \n\n                            <div>\n                            <label>Other only</label><input type=\"radio\" id=\"genderpreference\" value=\"Other\" onChange={this.handleChange} checked={this.state.genderpreference === \"Other\"} ></input>\n                            </div>\n\n                         <div>\n                            <label>I don't care 😢</label><input type=\"radio\" id=\"genderpreference\" value=\"None\" onChange={this.handleChange} checked={this.state.genderpreference === \"None\"} ></input>\n                            </div>\n                \n\n                  <Button variant=\"success\" type=\"submit\">Start matching</Button>\n                </form>\n              </Modal.Body>\n            </Modal>\n\n\n            { this.state.showmatchingwindow ? box : null }\n\n \n            \n\n\n            \n\n              \n              <Modal show={this.state.show} onHide={this.handleClose}>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                  <form onSubmit={this.handleSubmit}>\n                    <span>Describe your tasks today!</span>\n                    <textarea id=\"description\" onChange={this.handleChange} value={this.state.description} required></textarea>\n\n                    <span>Select a few tags:</span>\n\n                    <div className=\"form-inline\">\n                    {taskfilters.map(filter => {\n                      return (\n                        <div className={this.state.reduxtasks && this.state.reduxtasks.includes(filter) ? \"selected-button\" : \"unselected-button\" } id={filter} onClick={this.updateReduxTasks}>\n                          {filter}\n                        </div>\n                      )\n                    })}\n                    </div>\n\n                    <Button type=\"submit\" variant=\"success\">Submit</Button>\n                  </form>\n                </Modal.Body>\n              </Modal>\n\n              \n              <Modal show={this.state.routeguarding} onHide={this.handleCloseRedirect}>\n              <Modal.Header closeButton></Modal.Header>\n              <Modal.Body>\n              Sign up to create a profile so that other users can know more about you!😊\n              </Modal.Body>\n              </Modal>\n\n          <Container fluid style={{ position: \"absolute\", top: \"25%\", /*marginLeft:\"70px\", marginBottom: \"20px\",*/left: \"4%\", display: \"flex\", alignItems: \"center\",  zIndex: \"-1\"}}>\n\n          <span style={{ fontFamily: \"Lucida Console, Monaco, monospace\", fontSize: \"large\"}}>Filter by: </span>\n          \n          <Button variant=\"success\" style={{ fontFamily: \"Lucida Console, Monaco, monospace\", fontSize: \"large\", marginRight: \"10px\" }} onClick={this.showInterestFilter}>💛 Interests</Button>\n            <Modal id=\"interestfilter\" show={this.state.interestFilterVisibility} onHide={this.closeInterestFilter}>\n            <div className=\"form-inline\" style={{ margin: \"5px \"}}id=\"filters\">\n              {filters.map(filter => {\n                return (\n                  <div className={this.state.filters && this.state.filters.includes(filter) ? \"selected-button\" : \"unselected-button\"} id={filter} onClick={this.updateFilters}>\n                    {filter}\n                    </div>\n                );\n              })}\n            </div>\n            </Modal>\n\n            <Button variant=\"success\" style={{ fontFamily: \"Lucida Console, Monaco, monospace\", fontSize: \"large\", marginRight: \"10px\" }} onClick={this.showPersonalityFilter}>👻 Values</Button>\n            <Modal id=\"interestfilter\" show={this.state.personalityFilterVisibility} onHide={this.closePersonalityFilter}>\n            <div className=\"form-inline\" style={{ margin: \"5px \"}}id=\"filters\">\n              {personalities.map(filter => {\n                return (\n                  <div className={this.state.personalities && this.state.personalities.includes(filter) ? \"selected-button\" : \"unselected-button\"} id={filter} onClick={this.updatePersonalities}>\n                    {filter}\n                    </div>\n                );\n              })}\n            </div>\n            </Modal>\n\n            <Button variant=\"success\" style={{ fontFamily: \"Lucida Console, Monaco, monospace\", fontSize: \"large\", marginRight: \"10px\" }} onClick={this.showTaskFilter}>🏷 Tasks</Button>\n            <Modal id=\"interestfilter\" show={this.state.taskFilterVisibility} onHide={this.closeTaskFilter}>\n            <div className=\"form-inline\" style={{ margin: \"5px \"}}id=\"filters\">\n              {taskfilters.map(filter => {\n                return (\n                  <div className={this.state.tasks && this.state.tasks.includes(filter) ? \"selected-button\" : \"unselected-button\"} id={filter} onClick={this.updateTasks}>\n                    {filter}\n                    </div>\n                );\n              })}\n            </div>\n            </Modal>\n            \n\n            \n            </Container>\n          \n  \n\n\n \n\n          </Container>\n      \n       \n      \n        </div>\n        : <div className=\"loader\"></div>}\n        </div>\n        );\n      }\n    }\n\nconst mapStateToProps = (state) => {\n  console.log('waiting cponent', state.firestore)\n  return {\n    users: state.firestore.ordered.users,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    loading: state.auth.loading,\n    sent: state.auth.sent,\n    buddy: state.auth.buddy,\n    chatid: state.auth.chatid,\n    matching: state.auth.matching,\n    showmatchingwindow: state.auth.showmatchingwindow\n  }\n}\n    \nexport default compose(\nconnect(mapStateToProps, {submitTicket, startMatching, groupMessaging}),\nfirestoreConnect([\n{ collection: 'users' }\n])\n)(WaitingRoom);\n\n/*\n            <div>\n            {this.state.changeMessagingButton ? <span className=\"messaging-button\">Send a message to random people</span> : null}\n            <Button id=\"messaging-button\" className=\"initial-buttons\" onMouseOver={this.changeMessaging} onMouseLeave={this.unchangeMessaging} onClick={this.showGroupMessaging} style={{ fontSize: \"large\", fontFamily: \"Comic Sans MS, cursive, sans-serif\" }}>💌</Button>\n            </div>\n            */\n\n\n/*\n          <div style={{ position: \"absolute\", top: \"30%\", zIndex: \"-1\" }}>\n            <div id=\"cards\">\n            {founderprofile}\n              { users && users.map((card, index, users) => {\n                return this.renderCards(index, users, profilelist);\n              })}\n            </div>\n            </div>\n*/"]},"metadata":{},"sourceType":"module"}