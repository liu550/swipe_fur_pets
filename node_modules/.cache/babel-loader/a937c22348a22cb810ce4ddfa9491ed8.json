{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/chatwindow.js\";\nimport React, { Component } from 'react';\nimport \"./component.css\";\nimport { connect } from 'react-redux';\nimport firebase from '../config/firebaseconfig';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { startConversation } from '../redux/actions';\nimport { Rnd } from \"react-rnd\";\n\nclass ChatWindow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSend = async e => {\n      e.preventDefault();\n\n      if (document.getElementById(\"message\").value !== \"\") {\n        const date = new Date();\n        const time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes();\n        const message = this.createMessage(time);\n        const {\n          profile\n        } = this.props;\n        firebase.firestore().collection(\"users\").doc(this.props.chat.id).get().then(doc => {\n          this.props.startConversation(this.props.chat.id, doc.data(), profile, message);\n        }).then(() => document.getElementById(\"message\").value = \"\");\n      }\n    };\n\n    this.createMessage = time => {\n      let message = {};\n      message = {\n        time: time,\n        from: this.props.auth.uid,\n        content: document.getElementById(\"message\").value\n      };\n      return message;\n    };\n\n    this.state = {\n      messages: [],\n      width: 300,\n      height: 500,\n      x: -350,\n      y: 0\n    };\n  }\n\n  componentDidMount() {\n    this.newData.scrollTop = this.newData.scrollHeight;\n    firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get().then(doc => {\n      this.setState({\n        messages: doc.data().messages\n      });\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    this.newData.scrollTop = this.newData.scrollHeight;\n\n    if (prevprops.chat !== this.props.chat) {\n      firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get().then(doc => {\n        this.setState({\n          messages: doc.data().messages\n        });\n      });\n    }\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"called\");\n    this.newData.scrollTop = this.newData.scrollHeight;\n    firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get().then(doc => {\n      this.setState({\n        messages: doc.data().messages\n      });\n    });\n  }\n\n  render() {\n    const chats = this.state.messages;\n    const {\n      auth,\n      profile\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Rnd, {\n      className: \"chats-window\",\n      size: {\n        width: this.state.width,\n        height: this.state.height\n      },\n      enableUserSelectHack: \"false\",\n      position: {\n        x: this.state.x,\n        y: this.state.y,\n        z: 1\n      },\n      onDragStop: (e, d) => {\n        this.setState({\n          x: d.x,\n          y: d.y\n        });\n      },\n      onResizeStop: (e, direction, ref, delta, position) => {\n        this.setState({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chats-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vertical-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.chat.friend_image,\n      style: {\n        height: \"30px\",\n        width: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, this.props.chat.friend)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"chatwindow-button\",\n      onClick: () => this.props.handleClose(),\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chats\",\n      className: \"chats\",\n      ref: ref => this.newData = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, chats && chats.map(chat => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: chat.from === auth.uid ? \"me-section\" : \"buddy-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: chat.from === auth.uid ? {\n          display: \"flex\",\n          float: \"right\",\n          clear: \"both\"\n        } : {\n          display: \"flex\",\n          float: \"left\",\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: chat.from === auth.uid ? profile.image : this.props.chat.friend_image,\n        style: {\n          height: \"20px\",\n          width: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }), chat.time), /*#__PURE__*/React.createElement(\"div\", {\n        className: chat.from === auth.uid ? \"right-bubble\" : \"left-bubble\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, chat.content));\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"chats-textarea\",\n      id: \"message\",\n      placeholder: \"Type your message...\",\n      onMouseDown: e => e.stopPropagation(),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chats-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"chatwindow-button\",\n      onClick: this.handleSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Send\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    chats: state.firestore.ordered.chats,\n    profile: state.firebase.profile,\n    auth: state.firebase.auth,\n    chatid: state.auth.chatid\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  startConversation\n}), firestoreConnect([{\n  collection: 'chats'\n}]))(ChatWindow);","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/chatwindow.js"],"names":["React","Component","connect","firebase","compose","firestoreConnect","startConversation","Rnd","ChatWindow","constructor","props","handleSend","e","preventDefault","document","getElementById","value","date","Date","time","getFullYear","getMonth","getDate","getHours","getMinutes","message","createMessage","profile","firestore","collection","doc","chat","id","get","then","data","from","auth","uid","content","state","messages","width","height","x","y","componentDidMount","newData","scrollTop","scrollHeight","chat_id","setState","componentDidUpdate","prevprops","componentWillReceiveProps","console","log","render","chats","z","d","direction","ref","delta","position","style","friend_image","friend","handleClose","float","map","display","clear","image","stopPropagation","mapStateToProps","ordered","chatid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./component.css\";\nimport { connect } from 'react-redux';\nimport firebase from '../config/firebaseconfig';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { startConversation } from '../redux/actions';\nimport { Rnd } from \"react-rnd\";\n\n\nclass ChatWindow extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            messages: [],\n            width: 300,\n            height: 500,\n            x: -350,\n            y: 0\n        }\n    }\n\n    componentDidMount() {\n        this.newData.scrollTop = this.newData.scrollHeight;\n        firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get()\n        .then((doc) => {\n            this.setState({\n                messages: doc.data().messages\n            })\n        })\n    }\n\n    componentDidUpdate(prevprops) {\n        this.newData.scrollTop = this.newData.scrollHeight;\n        if (prevprops.chat !== this.props.chat) {\n            firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get()\n            .then((doc) => {\n                this.setState({\n                    messages: doc.data().messages\n                })\n            })\n        }\n    }\n\n    \n    componentWillReceiveProps() {\n        console.log(\"called\");\n        this.newData.scrollTop = this.newData.scrollHeight;\n        firebase.firestore().collection(\"chats\").doc(this.props.chat.chat_id).get()\n        .then((doc) => {\n            this.setState({\n                messages: doc.data().messages\n            })\n        })\n    }\n    \n    \n\n    \n    \n    handleSend = async (e) => {\n        e.preventDefault();\n        if (document.getElementById(\"message\").value !== \"\") {\n        const date = new Date();\n        const time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes();\n        const message = this.createMessage(time);\n        const { profile } = this.props;\n        firebase.firestore().collection(\"users\").doc(this.props.chat.id).get()\n        .then((doc) => {\n            this.props.startConversation(this.props.chat.id, doc.data(), profile, message);\n        })\n        .then(() => document.getElementById(\"message\").value = \"\");\n    }\n      }\n    \n      createMessage = (time) => {\n        let message = {};\n        message = { time: time, from : this.props.auth.uid, content: document.getElementById(\"message\").value };\n        return message;\n      }\n\n\n    render() {\n\n        const chats = this.state.messages;\n        const { auth, profile } = this.props;\n\n        return (\n            \n\n<Rnd\nclassName=\"chats-window\"\nsize={{ width: this.state.width, height: this.state.height }}\nenableUserSelectHack=\"false\"\nposition={{ x: this.state.x, y: this.state.y, z: 1 }}\nonDragStop={(e, d) => {\n  this.setState({ x: d.x, y: d.y });\n}}\nonResizeStop={(e, direction, ref, delta, position) => {\n  this.setState({\n    width: ref.style.width,\n    height: ref.style.height,\n    ...position\n  });\n}}\n>\n\n                <div className=\"chats-header\">\n                        <div className=\"vertical-center\">\n                            <img src={this.props.chat.friend_image} style={{ height: \"30px\", width: \"30px\" }}></img>\n                            <span>{this.props.chat.friend}</span>\n                        </div>\n                    <button className=\"chatwindow-button\" onClick={() => this.props.handleClose()} style={{ float: \"right\" }}>x</button>\n                </div>\n\n                <div id=\"chats\" className=\"chats\" ref={(ref) => this.newData = ref}>\n                    {chats && chats.map((chat) => {\n                        return (\n                            <div className={ chat.from === auth.uid ? \"me-section\" : \"buddy-section\" }>\n                            <div style={ chat.from === auth.uid ? { display: \"flex\", float: \"right\", clear: \"both\" } : { display: \"flex\", float : \"left\", clear: \"both\" }}>\n                                <img src={ chat.from === auth.uid ? profile.image : this.props.chat.friend_image} style={{ height: \"20px\", width: \"20px\" }}></img>\n                                {chat.time}\n                            </div>\n                            \n                            <div className={ chat.from === auth.uid ? \"right-bubble\" : \"left-bubble\" }>\n                            {chat.content}\n                            </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                \n             \n                <textarea className=\"chats-textarea\" id=\"message\" placeholder=\"Type your message...\" onMouseDown={e => e.stopPropagation()} required />\n\n                <div className=\"chats-bottom\">\n                    <button type=\"submit\" className=\"chatwindow-button\" onClick={this.handleSend}>Send</button>\n                </div>\n\n            </Rnd>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        chats: state.firestore.ordered.chats,\n        profile: state.firebase.profile,\n        auth: state.firebase.auth,\n        chatid: state.auth.chatid\n    }\n}\n\n\nexport default compose(\nconnect(mapStateToProps, {startConversation}),\nfirestoreConnect([\n    { collection: 'chats' }\n    ])\n)(ChatWindow);"]},"metadata":{},"sourceType":"module"}