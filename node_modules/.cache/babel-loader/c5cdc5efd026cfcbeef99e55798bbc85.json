{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/settings.js\";\nimport React, { Component, useState } from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport EditableLabel from 'react-inline-editing';\nimport { withRouter } from 'react-router-dom';\nimport './component.css';\nimport firebase from '../config/firebaseconfig'; //Redux\n\nimport { connect } from 'react-redux';\nimport { ToggleButton, ToggleButtonGroup, Button, ButtonGroup } from 'react-bootstrap';\nimport { editProfile, uploadImage } from '../redux/actions.js';\nconst personalities = [\"hard-working\", \"helpful/kind/altruistic\", \"outgoing/social\", \"knowledgeable\", \"ambitious\", \"thoughtful\", \"observant\", \"introvert\", \"humble\", \"imaginative\", \"impartial\", \"intelligent\", \"creative\", \"ethics\", \"social justice\", \"insightful/perceptive\", \"energetic\", \"smart\", \"curious\", \"open-minded\", \"meticulous\", \"logics\", \"agreeable\", \"competent\", \"wealth\", \"social influence/recognition\", \"geek\", \"executive\", \"leader\", \"adventurer\", \"thinker\", \"analyst\", \"planner\", \"artist\", \"designer\"];\nconst interests = [\"entrepreneurship\", \"finance/investing/vc\", \"business analysis/consulting\", \"software engineering\", \"data analysis/science\", \"ui/ux design\", \"artificial intelligence\", \"electrical engineering\", \"mechanical engineering\", \"biomedical engineering\", \"mathematics\", \"physics\", \"chemistry\", \"psychology\", \"economics\", \"history\", \"politics\", \"law\", \"healthcare\", \"arts\"];\n\nclass Settings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      gender: \"\",\n      institution: \"\",\n      role: \"\",\n      selfdescription: [],\n      areasofinterest: \"\",\n      email: \"\",\n      profileimage: \"\",\n      personalities: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        auth\n      } = this.props;\n      this.props.editProfile(this.state, auth.uid, this.props.history);\n      this.props.handleClose();\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleTags = e => {\n      e.preventDefault();\n\n      if (e.target.className === \"unselected-button\") {\n        const helper = this.state.areasofinterest;\n        helper.push(e.target.value);\n        this.setState({\n          areasofinterest: helper\n        });\n        e.target.className = \"selected-button\";\n      } else {\n        const newareasofinterest = this.state.areasofinterest.filter(tag => tag !== e.target.value);\n        this.setState({\n          areasofinterest: newareasofinterest\n        });\n        e.target.className = \"unselected-button\";\n      }\n    };\n\n    this.handlePersonalities = e => {\n      e.preventDefault();\n\n      if (e.target.className === \"unselected-button\") {\n        const helper = this.state.personalities;\n\n        if (helper.length < 7) {\n          helper.push(e.target.value);\n          this.setState({\n            personalities: helper\n          });\n          e.target.className = \"selected-button\";\n        }\n      } else {\n        const newpersonalities = this.state.personalities.filter(tag => tag !== e.target.value);\n        this.setState({\n          personalities: newpersonalities\n        });\n        e.target.className = \"unselected-button\";\n      }\n    };\n\n    this.renderPersonalities = personality => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: this.state.personalities && this.state.personalities.includes(personality) ? \"selected-button\" : \"unselected-button\",\n        value: personality,\n        onClick: this.handlePersonalities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, personality);\n    };\n\n    this.renderInterests = interest => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: this.state.areasofinterest && this.state.areasofinterest.includes(interest) ? \"selected-button\" : \"unselected-button\",\n        value: interest,\n        onClick: this.handleTags,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, interest);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      profile,\n      auth\n    } = this.props;\n    const id = auth.uid;\n    const image = firebase.storage().ref(`images/` + id);\n    image.getDownloadURL().then(url => this.setState({\n      profileimage: url\n    }));\n    this.setState({\n      firstname: profile.first_name,\n      lastname: profile.last_name,\n      gender: profile.gender,\n      institution: profile.institution,\n      role: profile.role,\n      selfdescription: profile.self_description,\n      areasofinterest: profile.areas_of_interest,\n      email: profile.email,\n      personalities: profile.personalities\n    });\n  }\n\n  componentWillReceiveProps(nextprops) {\n    const {\n      profile,\n      auth\n    } = nextprops;\n    const id = auth.uid;\n    const image = firebase.storage().ref(`images/` + id);\n    image.getDownloadURL().then(url => this.setState({\n      profileimage: url\n    }));\n    this.setState({\n      firstname: profile.first_name,\n      lastname: profile.last_name,\n      gender: profile.gender,\n      institution: profile.institution,\n      role: profile.role,\n      selfdescription: profile.self_description,\n      areasofinterest: profile.areas_of_interest,\n      email: profile.email,\n      personalities: profile.personalities\n    });\n  }\n\n  render() {\n    const {\n      profile\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"First Name \\uD83D\\uDC98\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"firstname\",\n      value: this.state.firstname,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 31\n      }\n    }), \"Last Name \\uD83D\\uDC9D\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"lastname\",\n      value: this.state.lastname,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, \"Gender \\uD83D\\uDE3D\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"gender\",\n      value: \"Male\",\n      onChange: this.handleChange,\n      checked: this.state.gender === \"Male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, \"Female\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"gender\",\n      value: \"Female\",\n      onChange: this.handleChange,\n      checked: this.state.gender === \"Female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, \"Other\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"gender\",\n      value: \"Other\",\n      onChange: this.handleChange,\n      checked: this.state.gender === \"Other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }), \"Institution \\uD83C\\uDFE2\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"institution\",\n      value: this.state.institution,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 31\n      }\n    }), \"Title \\uD83C\\uDF97\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"role\",\n      value: this.state.role,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 31\n      }\n    }), \"Describe yourself! \\uD83D\\uDCA9\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"selfdescription\",\n      value: this.state.selfdescription,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, \"Select up to 7 values/characteristics that resonate with you the most! \\uD83D\\uDC7B\")), personalities && personalities.map(personality => {\n      return this.renderPersonalities(personality);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }, \"Select your interests! \\uD83D\\uDC9B\")), interests && interests.map(interest => {\n      return this.renderInterests(interest);\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 31\n      }\n    }), \"Email \\uD83D\\uDC8C\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"success\",\n      onClick: this.handleSubmit,\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, \"Save\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapActionsToProps = {\n  editProfile,\n  uploadImage\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(Settings));\n/*\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Entrepreneurship\") ? \"selected-button\" : \"unselected-button\"} value=\"Entrepreneurship\" onClick={this.handleTags}>Entrepreneurship</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Finance/Investing/VC\") ? \"selected-button\" : \"unselected-button\"} value=\"Finance/Investing/VC\" onClick={this.handleTags}>Finance/Investing/VC</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Business Analysis/Consulting\") ? \"selected-button\" : \"unselected-button\"} value=\"Business Analysis/Consulting\" onClick={this.handleTags}>Business Analysis/Consulting</button>\n                            \n\n                            \n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Software Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Software Engineering\" onClick={this.handleTags}>Software Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"UI/UX Design\") ? \"selected-button\" : \"unselected-button\"} value=\"UI/UX Design\" onClick={this.handleTags}>UI/UX Design</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Data Analytics/Science\") ? \"selected-button\" : \"unselected-button\"} value=\"Data Analytics/Science\" onClick={this.handleTags}>Data Analytics/Science</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Artificial Intelligence\") ? \"selected-button\" : \"unselected-button\"} value=\"Artificial Intelligence\" onClick={this.handleTags}>Artificial Intelligence</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Electrical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Electrical Engineering\" onClick={this.handleTags}>Electrical Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Mechanical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Mechanical Engineering\" onClick={this.handleTags}>Mechanical Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Biomedical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Biomedical Engineering\" onClick={this.handleTags}>Biomedical Engineering</button>\n                            \n\n                            \n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Mathematics\") ? \"selected-button\" : \"unselected-button\"} value=\"Mathematics\" onClick={this.handleTags}>Mathematics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Physics\") ? \"selected-button\" : \"unselected-button\"} value=\"Physics\" onClick={this.handleTags}>Physics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Chemistry\") ? \"selected-button\" : \"unselected-button\"} value=\"Chemistry\" onClick={this.handleTags}>Chemistry</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Biology\") ? \"selected-button\" : \"unselected-button\"} value=\"Biology\" onClick={this.handleTags}>Biology</button>\n                            \n\n                            <div>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Psychology\") ? \"selected-button\" : \"unselected-button\"} value=\"Psychology\" onClick={this.handleTags}>Psycology</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Economics\") ? \"selected-button\" : \"unselected-button\"} value=\"Economics\" onClick={this.handleTags}>Economics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"History\") ? \"selected-button\" : \"unselected-button\"} value=\"History\" onClick={this.handleTags}>History</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Politics\") ? \"selected-button\" : \"unselected-button\"} value=\"Politics\" onClick={this.handleTags}>Politics</button>\n                            </div>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Law\") ? \"selected-button\" : \"unselected-button\"} value=\"Law\" onClick={this.handleTags}>Law</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Healthcare\") ? \"selected-button\" : \"unselected-button\"} value=\"Healthcare\" onClick={this.handleTags}>Healthcare</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Arts\") ? \"selected-button\" : \"unselected-button\"} value=\"Arts\" onClick={this.handleTags}>Arts</button>\n*/","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/settings.js"],"names":["React","Component","useState","ReactTags","EditableLabel","withRouter","firebase","connect","ToggleButton","ToggleButtonGroup","Button","ButtonGroup","editProfile","uploadImage","personalities","interests","Settings","state","firstname","lastname","gender","institution","role","selfdescription","areasofinterest","email","profileimage","handleSubmit","e","preventDefault","auth","props","uid","history","handleClose","handleChange","setState","target","id","value","handleTags","className","helper","push","newareasofinterest","filter","tag","handlePersonalities","length","newpersonalities","renderPersonalities","personality","includes","renderInterests","interest","componentDidMount","profile","image","storage","ref","getDownloadURL","then","url","first_name","last_name","self_description","areas_of_interest","componentWillReceiveProps","nextprops","render","marginTop","map","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport EditableLabel from 'react-inline-editing';\nimport { withRouter } from 'react-router-dom';\nimport './component.css';\nimport firebase from '../config/firebaseconfig';\n\n//Redux\nimport { connect } from 'react-redux'\nimport { ToggleButton, ToggleButtonGroup, Button, ButtonGroup } from 'react-bootstrap';\nimport { editProfile, uploadImage } from '../redux/actions.js';\n\n\n\nconst personalities = [\n    \"hard-working\",\n    \"helpful/kind/altruistic\",\n    \"outgoing/social\",\n    \"knowledgeable\",\n    \"ambitious\",\n    \"thoughtful\",\n    \"observant\",\n    \"introvert\",\n    \"humble\",\n    \"imaginative\",\n    \"impartial\",\n    \"intelligent\",\n    \"creative\",\n    \"ethics\",\n    \"social justice\",\n    \"insightful/perceptive\",\n    \"energetic\",\n    \"smart\",\n    \"curious\",\n    \"open-minded\",\n    \"meticulous\",\n    \"logics\",\n    \"agreeable\",\n    \"competent\",\n    \"wealth\",\n    \"social influence/recognition\",\n    \"geek\",\n    \"executive\",\n    \"leader\",\n    \"adventurer\",\n    \"thinker\",\n    \"analyst\",\n    \"planner\",\n    \"artist\",\n    \"designer\"\n]\n\nconst interests = [\n    \"entrepreneurship\",\n    \"finance/investing/vc\",\n    \"business analysis/consulting\",\n    \"software engineering\",\n    \"data analysis/science\",\n    \"ui/ux design\",\n    \"artificial intelligence\",\n    \"electrical engineering\",\n    \"mechanical engineering\",\n    \"biomedical engineering\",\n    \"mathematics\",\n    \"physics\",\n    \"chemistry\",\n    \"psychology\",\n    \"economics\",\n    \"history\",\n    \"politics\",\n    \"law\",\n    \"healthcare\",\n    \"arts\"\n]\n\nclass Settings extends Component {  \n\n\n        state = {\n            firstname: \"\",\n            lastname: \"\",\n            gender: \"\",\n            institution: \"\",\n            role: \"\",\n            selfdescription: [],\n            areasofinterest: \"\",\n            email: \"\",\n            profileimage: \"\",\n            personalities: [],\n        };     \n\n\n     \n\n        componentDidMount() {\n\n           const { profile, auth } = this.props;\n           const id = auth.uid;\n           const image = firebase.storage().ref(`images/`+id);\n           image.getDownloadURL().then((url) => this.setState({ profileimage: url }));\n           this.setState({\n                firstname: profile.first_name,\n                lastname: profile.last_name,\n                gender: profile.gender,\n                institution: profile.institution,\n                role: profile.role,\n                selfdescription: profile.self_description,\n                areasofinterest: profile.areas_of_interest,\n                email: profile.email,\n                personalities: profile.personalities,\n           }\n           )\n        }\n\n        componentWillReceiveProps(nextprops) {\n            const { profile, auth } = nextprops;\n            const id = auth.uid;\n            const image = firebase.storage().ref(`images/`+id);\n            image.getDownloadURL().then((url) => this.setState({ profileimage: url }));\n            this.setState({\n                 firstname: profile.first_name,\n                 lastname: profile.last_name,\n                 gender: profile.gender,\n                 institution: profile.institution,\n                 role: profile.role,\n                 selfdescription: profile.self_description,\n                 areasofinterest: profile.areas_of_interest,\n                 email: profile.email,\n                 personalities: profile.personalities\n            }\n            )\n\n        }\n        \n    \n        handleSubmit = (e) => {\n            e.preventDefault();\n            const { auth } = this.props;\n            this.props.editProfile(this.state, auth.uid, this.props.history);\n            this.props.handleClose();\n        }\n    \n\n        handleChange = (e) => {\n            this.setState({\n                [e.target.id]: e.target.value\n            })\n        }\n\n        handleTags = (e) => {\n            e.preventDefault();\n            if (e.target.className === \"unselected-button\") {\n                const helper = this.state.areasofinterest;\n                helper.push(e.target.value);\n                this.setState({ areasofinterest: helper });\n                e.target.className = \"selected-button\";\n            } else\n            {\n                const newareasofinterest = this.state.areasofinterest.filter(tag => tag !== e.target.value);\n                this.setState({ areasofinterest: newareasofinterest });\n                e.target.className = \"unselected-button\";\n            }\n        }\n\n        handlePersonalities = (e) => {\n            e.preventDefault();\n            if (e.target.className === \"unselected-button\") {\n                const helper = this.state.personalities;\n                if (helper.length < 7) {\n                    helper.push(e.target.value);\n                    this.setState({ personalities: helper });\n                    e.target.className = \"selected-button\";\n                }\n            } else\n            {\n                const newpersonalities = this.state.personalities.filter(tag => tag !== e.target.value);\n                this.setState({ personalities : newpersonalities });\n                e.target.className = \"unselected-button\";\n            }\n        }\n\n        renderPersonalities = (personality) => {\n            return (\n                <button className={this.state.personalities && this.state.personalities.includes(personality) ? \"selected-button\" : \"unselected-button\"} value={personality} onClick={this.handlePersonalities}>{personality}</button>\n            );\n        }\n\n        renderInterests = (interest) => {\n            return (\n                <button className={this.state.areasofinterest && this.state.areasofinterest.includes(interest) ? \"selected-button\" : \"unselected-button\"} value={interest} onClick={this.handleTags}>{interest}</button>\n            );\n        }\n\n\n          \n       render(){\n    \n\n\n        const { profile } = this.props;\n    \n        return(\n\n            <form>\n\n                        <span>First Name 💘</span>\n                        <input id=\"firstname\" value={this.state.firstname} onChange={this.handleChange}></input>\n\n                        <span><br/>Last Name 💝</span>\n                        <input id=\"lastname\" value={this.state.lastname} onChange={this.handleChange}></input>\n                        \n\n                        <div style={{ marginTop: \"15px\" }}>\n                            <span>Gender 😽</span>\n                        </div>\n\n                        <div className=\"form-inline\">\n                     \n                            <label>Male</label><input type=\"radio\" id=\"gender\" value=\"Male\" onChange={this.handleChange} checked={this.state.gender === \"Male\"} />\n             \n\n                    \n                            <label>Female</label><input type=\"radio\" id=\"gender\" value=\"Female\" onChange={this.handleChange} checked={this.state.gender === \"Female\"} />\n                          \n                     \n\n\n                            <label>Other</label><input type=\"radio\" id=\"gender\" value=\"Other\" onChange={this.handleChange} checked={this.state.gender === \"Other\"} />\n                        \n                        </div>\n                            \n                            \n                            \n                \n\n                        <span><br/>Institution 🏢</span>\n                        <input id=\"institution\" value={this.state.institution} onChange={this.handleChange}></input>\n\n                        <span><br/>Title 🎗</span>\n                        <input id=\"role\" value={this.state.role} onChange={this.handleChange}></input>\n\n                        <span><br/>Describe yourself! 💩</span>\n                        <textarea id=\"selfdescription\" value={this.state.selfdescription} onChange={this.handleChange}></textarea>\n\n                        <div style={{ marginTop: \"15px\" }}>\n                            <span>Select up to 7 values/characteristics that resonate with you the most! 👻</span>\n                        </div>\n\n                    \n                        { personalities && personalities.map((personality) =>{\n                            return this.renderPersonalities(personality);\n                        } )}\n\n                        <div style={{ marginTop: \"15px\" }}>\n                            <span>Select your interests! 💛</span>\n                        </div>\n\n                        { interests && interests.map((interest) =>{\n                            return this.renderInterests(interest);\n                        } )}\n                        \n                    \n                     \n                        <span><br/>Email 💌</span>\n                        <input id=\"email\" value={this.state.email} onChange={this.handleChange}></input>\n                        \n                        <br/>\n                        <Button type=\"submit\" variant=\"success\" onClick={this.handleSubmit} style={{ marginTop: \"10px\" }}>Save</Button>\n            </form>\n\n        )\n    }\n}\n    \n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.firebase.profile,\n        auth: state.firebase.auth,\n    }\n}\n\nconst mapActionsToProps = { editProfile, uploadImage };\n\nexport default connect(mapStateToProps, mapActionsToProps )(withRouter(Settings));\n\n\n\n/*\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Entrepreneurship\") ? \"selected-button\" : \"unselected-button\"} value=\"Entrepreneurship\" onClick={this.handleTags}>Entrepreneurship</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Finance/Investing/VC\") ? \"selected-button\" : \"unselected-button\"} value=\"Finance/Investing/VC\" onClick={this.handleTags}>Finance/Investing/VC</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Business Analysis/Consulting\") ? \"selected-button\" : \"unselected-button\"} value=\"Business Analysis/Consulting\" onClick={this.handleTags}>Business Analysis/Consulting</button>\n                            \n\n                            \n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Software Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Software Engineering\" onClick={this.handleTags}>Software Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"UI/UX Design\") ? \"selected-button\" : \"unselected-button\"} value=\"UI/UX Design\" onClick={this.handleTags}>UI/UX Design</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Data Analytics/Science\") ? \"selected-button\" : \"unselected-button\"} value=\"Data Analytics/Science\" onClick={this.handleTags}>Data Analytics/Science</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Artificial Intelligence\") ? \"selected-button\" : \"unselected-button\"} value=\"Artificial Intelligence\" onClick={this.handleTags}>Artificial Intelligence</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Electrical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Electrical Engineering\" onClick={this.handleTags}>Electrical Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Mechanical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Mechanical Engineering\" onClick={this.handleTags}>Mechanical Engineering</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Biomedical Engineering\") ? \"selected-button\" : \"unselected-button\"} value=\"Biomedical Engineering\" onClick={this.handleTags}>Biomedical Engineering</button>\n                            \n\n                            \n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Mathematics\") ? \"selected-button\" : \"unselected-button\"} value=\"Mathematics\" onClick={this.handleTags}>Mathematics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Physics\") ? \"selected-button\" : \"unselected-button\"} value=\"Physics\" onClick={this.handleTags}>Physics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Chemistry\") ? \"selected-button\" : \"unselected-button\"} value=\"Chemistry\" onClick={this.handleTags}>Chemistry</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Biology\") ? \"selected-button\" : \"unselected-button\"} value=\"Biology\" onClick={this.handleTags}>Biology</button>\n                            \n\n                            <div>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Psychology\") ? \"selected-button\" : \"unselected-button\"} value=\"Psychology\" onClick={this.handleTags}>Psycology</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Economics\") ? \"selected-button\" : \"unselected-button\"} value=\"Economics\" onClick={this.handleTags}>Economics</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"History\") ? \"selected-button\" : \"unselected-button\"} value=\"History\" onClick={this.handleTags}>History</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Politics\") ? \"selected-button\" : \"unselected-button\"} value=\"Politics\" onClick={this.handleTags}>Politics</button>\n                            </div>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Law\") ? \"selected-button\" : \"unselected-button\"} value=\"Law\" onClick={this.handleTags}>Law</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Healthcare\") ? \"selected-button\" : \"unselected-button\"} value=\"Healthcare\" onClick={this.handleTags}>Healthcare</button>\n                            <button className={this.state.areasofinterest && this.state.areasofinterest.includes(\"Arts\") ? \"selected-button\" : \"unselected-button\"} value=\"Arts\" onClick={this.handleTags}>Arts</button>\n*/"]},"metadata":{},"sourceType":"module"}