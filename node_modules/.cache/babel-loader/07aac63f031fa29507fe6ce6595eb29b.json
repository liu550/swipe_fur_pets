{"ast":null,"code":"import _classCallCheck from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import ReactTags from'react-tag-autocomplete';import{Link,withRouter}from'react-router-dom';import{FirebaseDatabaseMutation}from\"@react-firebase/database\";import firebase from\"../config/firebaseconfig\";//You can ignore this page.\nvar StartStream=/*#__PURE__*/function(_Component){_inherits(StartStream,_Component);var _super=_createSuper(StartStream);function StartStream(){var _this;_classCallCheck(this,StartStream);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={roomid:1};_this.generate=function(){var roomId=Math.random()*1000;console.log(_this.props.history.push(\"/stream/\".concat(roomId)));};return _this;}_createClass(StartStream,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,\"Your Room ID:\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:this.state.roomid}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.generate},\"Generate a Room\"));}}]);return StartStream;}(Component);export default withRouter(StartStream);","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/startstream.js"],"names":["React","Component","ReactTags","Link","withRouter","FirebaseDatabaseMutation","firebase","StartStream","state","roomid","generate","roomId","Math","random","console","log","props","history","push"],"mappings":"wlBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,OAASC,wBAAT,KAAyC,0BAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CAEA;GAEMC,CAAAA,W,+UAqFFC,K,CAAM,CACFC,MAAM,CAAE,CADN,C,OAGNC,Q,CAAW,UAAM,CACb,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,MAAL,GAAc,IAA7B,CACAC,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,mBAAmCP,MAAnC,EAAZ,EACH,C,8EAES,CAEN,mBAAO,4DACU,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAE,KAAKH,KAAL,CAAWC,MAArC,EADV,cAEH,8BAAQ,OAAO,CAAE,KAAKC,QAAtB,oBAFG,CAAP,CAIH,C,yBAnGqBT,S,EAuG1B,cAAeG,CAAAA,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport ReactTags from 'react-tag-autocomplete'\nimport { Link, withRouter } from 'react-router-dom';\nimport { FirebaseDatabaseMutation } from \"@react-firebase/database\";\nimport firebase from \"../config/firebaseconfig\";\n\n//You can ignore this page.\n\nclass StartStream extends Component {\n    \n    /*\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [\n                {name: \"biology\"}\n            ],\n            suggestions: [\n                {name: \"physics\"},\n                {name: \"chemistry\"}\n            ],\n            token: \"\",\n            sessionID: \"jglkdbjlkd\",\n            match: false,\n            public: false\n        }\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.storeInFirebase = this.storeInFirebase.bind(this);\n    }\n\n    handleDelete (i) {\n        const tags = this.state.tags.slice(0)\n        tags.splice(i, 1)\n        this.setState({ tags })\n    }\n     \n    handleAddition (tag) {\n        const tags = [].concat(this.state.tags, tag)\n        this.setState({ tags })\n    }\n\n    checkParameters() {\n        if (document.getElementById(\"match\").checked) {\n            this.setState({ match: true});\n        }\n        if (document.getElementById(\"public\").checked) {\n            this.setState({ public: true});\n        }\n    }\n\n    storeInFirebase = () => {\n        return firebase.firestore().collection(\"sessions\").doc(this.state.sessionID).set({\n            name: document.getElementById(\"name\").value,\n            description: document.getElementById(\"description\").value,\n            tags: this.state.tags,\n            host: firebase.auth().currentUser.uid,\n            match: this.state.match,\n            public: this.state.public\n        })\n    }\n\n    \n    handleSubmit = () => {\n        console.log(\"ok\");\n        fetch('/api/sessions', err => console.log(\"error\", err)\n        .then(res => res.json(), err => console.log(\"error\", err))\n        .then(connectionElements => this.setState({token: connectionElements[0], sessionID: connectionElements[1]}), () => console.log(\"Success\", this.state.token, this.state.sessionID))\n        .then(() => this.storeInFirebase())\n        .then(() => this.props.history.push(`/stream/1000`));\n    }\n    \n\n    \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input id=\"name\"></input>\n                <textarea id=\"description\"></textarea>\n                <ReactTags\n                    tags={this.state.tags}\n                    suggestions={this.state.suggestions}\n                    handleDelete={this.handleDelete.bind(this)}\n                    handleAddition={this.handleAddition.bind(this)} />\n                <button> Create a Room </button>\n                <input type=\"radio\" id=\"match\" placeholder=\"Match or not\"></input>\n                <input type=\"radio\" id=\"public\" placeholder=\"Public or not\"></input>\n            </form>\n        );\n    }\n    */\n    \n\n    \n    state={\n        roomid: 1\n    }\n    generate = () => {\n        const roomId = Math.random()*1000;\n        console.log(this.props.history.push(`/stream/${roomId}`))\n    }\n    \n    render () {\n\n        return <div>\n            Your Room ID:<input type=\"text\" value={this.state.roomid}/>\n            <button onClick={this.generate}>Generate a Room</button>\n        </div>\n    }\n\n}\n\nexport default withRouter(StartStream);\n"]},"metadata":{},"sourceType":"module"}