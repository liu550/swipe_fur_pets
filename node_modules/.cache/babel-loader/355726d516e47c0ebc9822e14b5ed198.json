{"ast":null,"code":"var _jsxFileName = \"/Users/liu550/Desktop/salon_project/src/components/streamingplaza.js\";\nimport React, { useState, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/home.css';\nimport '../styles/streamingplaza.css';\nimport '../styles/waitingroom.css';\nimport { Alert, Button, Card, CardDeck, Image, ListGroup, Modal, Form, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './navbar';\nimport StreamingCard from './design/streamingcard';\nimport ChatBox from './chatbox.js';\nimport firebase from '../config/firebaseconfig';\nimport { Helmet } from \"react-helmet\"; //Redux\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { startStreaming } from '../redux/actions'; //[TO BE COMPLETED].\n\n/*\n<Form.Group controlId=\"link\">\n<Form.Control inputRef={(ref) => this.link = ref}></Form.Control>\n</Form.Group>\n\n<Form.Group controlId=\"description\">\n  <Form.Control inputRef={(ref) => this.description= ref}></Form.Control>\n</Form.Group>\n*/\n//For the minimum viable product, this page will look very similar to the waiting room page except that (1) users post their meeting links\n//on this page and (2) we may need to use Zoom's API to get the number of participants in a meeting and display the number on the page.\n\nconst taskfilters = ['startup/personal project', 'work/internship', 'study', 'interview preparation', 'exam preparation', 'reading books', 'research', 'brainstorming', 'finance/investing/vc', 'business analysis/consulting', \"software engineering\", \"data analysis/science\", \"ui/ux design\", \"artificial intelligence\", \"electrical engineering\", \"mechanical engineering\", \"biomedical engineering\", \"mathematics\", \"physics\", \"chemistry\", \"psychology\", \"economics\", \"history\", \"politics\", \"law\", \"healthcare\", \"arts\"];\n\nclass StreamingPlaza extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      link: \"\",\n      description: \"\",\n      show: false,\n      routeguarding: false,\n      tasks: [],\n      reduxtasks: [],\n      filterVisibility: false\n    };\n\n    this.randomClick = e => {\n      e.preventDefault();\n      this.roomclicks.current[0].handleClick();\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      await this.props.startStreaming(this.state);\n      this.handleClose();\n    };\n\n    this.handleShow = e => {\n      e.preventDefault();\n      const {\n        auth\n      } = this.props;\n\n      if (!auth.uid) {\n        this.setState({\n          routeguarding: true\n        });\n      } else this.setState({\n        show: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleCloseRedirect = () => {\n      this.setState({\n        routeguarding: false\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.setRef = ref => {\n      this.roomclicks.push(ref);\n    };\n\n    this.renderRoom = room => {\n      if (room.open === true) {\n        if (room.id !== \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\" && this.state.tasks.every(t => room.tasks_tags && room.tasks_tags.includes(t))) {\n          return /*#__PURE__*/React.createElement(StreamingCard, {\n            info: room,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 16\n            }\n          });\n        }\n      }\n    };\n\n    this.updateReduxTasks = e => {\n      e.preventDefault();\n\n      if (e.target.className === \"unselected-button\") {\n        const helper = this.state.reduxtasks;\n        helper.push(e.target.id);\n        this.setState({\n          reduxtasks: helper\n        });\n        e.target.className = \"selected-button\";\n      } else {\n        const newfilters = this.state.reduxtasks.filter(tag => tag !== e.target.id);\n        this.setState({\n          reduxtasks: newfilters\n        });\n        e.target.className = \"unselected-button\";\n      }\n    };\n\n    this.updateTasks = e => {\n      e.preventDefault();\n\n      if (e.target.className === \"unselected-button\") {\n        const helper = this.state.tasks;\n        helper.push(e.target.id);\n        this.setState({\n          tasks: helper\n        });\n        e.target.className = \"selected-button\";\n      } else {\n        const newfilters = this.state.tasks.filter(tag => tag !== e.target.id);\n        this.setState({\n          tasks: newfilters\n        });\n        e.target.className = \"unselected-button\";\n      }\n    };\n\n    this.showFilter = e => {\n      e.preventDefault();\n      this.setState({\n        filterVisibility: true\n      });\n    };\n\n    this.closeFilter = () => {\n      this.setState({\n        filterVisibility: false\n      });\n    };\n  }\n\n  //roomclicks = React.createRef([]);\n  componentDidMount() {\n    const {\n      auth\n    } = this.props;\n    /*\n    setTimeout(() => {\n      console.log(this.child);\n      console.log(this.child.current);\n      this.child.current.handleShow();\n    }, 4000);\n    */\n\n    if (auth.uid) {\n      firebase.firestore().collection(\"rooms\").doc(auth.uid).get().then(doc => {\n        if (doc.exists) {\n          this.setState({\n            link: doc.data().meeting_link,\n            description: doc.data().room_description\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      auth,\n      rooms,\n      profile\n    } = this.props;\n    let founderprofile;\n\n    if (rooms) {\n      const founder = rooms.find(element => element.id === \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\");\n\n      if (founder.open === true) {\n        founderprofile = /*#__PURE__*/React.createElement(StreamingCard, {\n          info: founder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 26\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, \"Join/Start a Live Stream and Start Working | Salon\")), auth.uid || auth.isEmpty && auth.isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 10\n      }\n    }), sessionStorage.noFirstVisit === 1 ? /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: \"600px\",\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"20%\"\n      },\n      variant: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 46\n      }\n    }, \"LOL Bear with the simplicity of the website! We will make it more like an actual live streaming site if people find it to be useful.\\uD83D\\uDE23\") : null, auth.uid ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ChatBox, {\n      roomid: auth.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 14\n      }\n    })) : null, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"update-button\",\n      onClick: this.handleShow,\n      style: {\n        position: \"absolute\",\n        top: \"15%\",\n        fontSize: \"large\",\n        fontFamily: \"Comic Sans MS, cursive, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, \"Start/update streaming\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.showFilter,\n      style: {\n        marginLeft: \"70px\",\n        position: \"absolute\",\n        top: \"25%\",\n        fontFamily: \"Lucida Console, Monaco, monospace\",\n        fontSize: \"large\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, \"Filter by tags\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.filterVisibility,\n      onHide: this.closeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        margin: \"5px \"\n      },\n      id: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, taskfilters.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.tasks && this.state.tasks.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updateTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }, filter);\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"large\",\n        fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, \"Meeting link:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"link\",\n      value: this.state.link,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"large\",\n        fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, \"Enter a description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"large\",\n        fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, \"Select a few tags:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, taskfilters.map(filter => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.reduxtasks && this.state.reduxtasks.includes(filter) ? \"selected-button\" : \"unselected-button\",\n        id: filter,\n        onClick: this.updateReduxTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }\n      }, filter);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.routeguarding,\n      onHide: this.handleCloseRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, \"Sign up to create a profile before streaming so that other users can know more about you!\\uD83D\\uDE0A\")), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        position: \"absolute\",\n        top: \"30%\",\n        zIndex: \"-1\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      ref: this.roomclicks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, founderprofile, rooms && rooms.map(room => {\n      return this.renderRoom(room);\n    }))))) : /*#__PURE__*/React.createElement(\"div\", {\n      class: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/*\n{ rooms && rooms.map (room => {\n  return (\n    <StreamingCard info={room}></StreamingCard>\n  );\n  })  \n}\n*/\n\n/*\nstate = {\n       areasofinterest: [\"Math\", \"Physics\", \"Science\",\"Algebra\",\n       \"Biology\", \"Spanish\", \"Stats\", \"Calculus I\", \"Calculus II\",\"French\",\n        \"English\", \"Science\",\"Math\", \"Physics\", \"Science\"],\n  }\n  render() {\n     return (\n      <div>\n      {<Navbar />}\n      <div className='container'>\n      <h2>Live streaming rooms <br/>   </h2>\n        <div className=\"row\">\n        {this.state.areasofinterest.map(function (i) {\n            return   (\n              <div className=\"column\">\n              <CardDeck  className=\"chat_room_card\" >\n                <Card border='success'>\n                  <Card.Body className=''>\n                    <Card.Title className=\"text-center\">{i}</Card.Title>\n                     <Card.Text>\n                     </Card.Text>\n                    <Button variant='success'>Join room</Button>\n                  </Card.Body>\n                </Card>\n               </CardDeck>\n              </div>\n             )})}\n            </div>\n            <div className='title'>\n        <h1 className='title_font'>🧙‍♂️salon.app</h1>\n        </div><br/>\n        </div>\n        </div>\n    );\n      }\n      */\n\n\nconst mapStateToProps = state => {\n  return {\n    rooms: state.firestore.ordered.rooms,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  startStreaming\n}), firestoreConnect([{\n  collection: 'rooms'\n}]))(StreamingPlaza);\n/*\n      <Container fluid style={{ position: \"absolute\", top: \"30%\", zIndex: \"-1\"}}>\n        <div className=\"form-inline\">\n        {founderprofile}\n        { rooms && rooms.map (room => {\n          return this.renderRoom(room);  \n        })\n      }\n        </div>\n        </Container>\n        */","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/streamingplaza.js"],"names":["React","useState","Component","Link","Alert","Button","Card","CardDeck","Image","ListGroup","Modal","Form","Container","NavBar","StreamingCard","ChatBox","firebase","Helmet","connect","compose","firestoreConnect","startStreaming","taskfilters","StreamingPlaza","state","link","description","show","routeguarding","tasks","reduxtasks","filterVisibility","randomClick","e","preventDefault","roomclicks","current","handleClick","handleSubmit","props","handleClose","handleShow","auth","uid","setState","handleCloseRedirect","handleChange","target","id","value","setRef","ref","push","renderRoom","room","open","every","t","tasks_tags","includes","updateReduxTasks","className","helper","newfilters","filter","tag","updateTasks","showFilter","closeFilter","componentDidMount","firestore","collection","doc","get","then","exists","data","meeting_link","room_description","render","rooms","profile","founderprofile","founder","find","element","isEmpty","isLoaded","sessionStorage","noFirstVisit","width","position","top","left","fontSize","fontFamily","marginLeft","margin","map","marginBottom","zIndex","mapStateToProps","ordered"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/home.css';\nimport '../styles/streamingplaza.css';\nimport '../styles/waitingroom.css';\n\nimport { Alert, Button, Card, CardDeck, Image, ListGroup, Modal, Form, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './navbar';\nimport StreamingCard from './design/streamingcard';\nimport ChatBox from './chatbox.js';\nimport firebase from '../config/firebaseconfig';\nimport {Helmet} from \"react-helmet\";\n\n//Redux\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { startStreaming } from '../redux/actions';\n\n//[TO BE COMPLETED].\n\n/*\n<Form.Group controlId=\"link\">\n<Form.Control inputRef={(ref) => this.link = ref}></Form.Control>\n</Form.Group>\n\n<Form.Group controlId=\"description\">\n  <Form.Control inputRef={(ref) => this.description= ref}></Form.Control>\n</Form.Group>\n*/\n\n//For the minimum viable product, this page will look very similar to the waiting room page except that (1) users post their meeting links\n//on this page and (2) we may need to use Zoom's API to get the number of participants in a meeting and display the number on the page.\n\nconst taskfilters = [\n  'startup/personal project',\n  'work/internship',\n  'study',\n  'interview preparation',\n  'exam preparation',\n  'reading books',\n  'research',\n  'brainstorming',\n  'finance/investing/vc',\n  'business analysis/consulting',\n  \"software engineering\",\n    \"data analysis/science\",\n    \"ui/ux design\",\n    \"artificial intelligence\",\n    \"electrical engineering\",\n    \"mechanical engineering\",\n    \"biomedical engineering\",\n    \"mathematics\",\n    \"physics\",\n    \"chemistry\",\n    \"psychology\",\n    \"economics\",\n    \"history\",\n    \"politics\",\n    \"law\",\n    \"healthcare\",\n    \"arts\"\n];\n\nclass StreamingPlaza extends Component {\n\n  /*\n  constructor(props){\n    super(props);\n    this.state = {\n      link: \"\",\n      description: \"\",\n      show: false,\n      routeguarding: false,\n      tasks: [],\n      reduxtasks: [],\n      filterVisibility: false\n      }\n\n      this.roomclicks = React.createRef([]);\n      this.child = React.createRef();\n  }\n  */\n\n  state = {\n    link: \"\",\n    description: \"\",\n    show: false,\n    routeguarding: false,\n    tasks: [],\n    reduxtasks: [],\n    filterVisibility: false\n    }\n\n    //roomclicks = React.createRef([]);\n\n  componentDidMount() {\n    const { auth } = this.props;\n    /*\n    setTimeout(() => {\n      console.log(this.child);\n      console.log(this.child.current);\n      this.child.current.handleShow();\n    }, 4000);\n    */\n    if (auth.uid) {\n      firebase.firestore().collection(\"rooms\").doc(auth.uid)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({\n            link: doc.data().meeting_link,\n            description: doc.data().room_description\n          })\n        }\n      })\n    }\n  }\n\n  randomClick = (e) => {\n    e.preventDefault();\n    this.roomclicks.current[0].handleClick();\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    await this.props.startStreaming(this.state);\n    this.handleClose();\n  }\n\n  handleShow = (e) => {\n    e.preventDefault();\n    const { auth } = this.props;\n    if (!auth.uid) {\n      this.setState({ routeguarding: true });\n    } else this.setState({ show: true });\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  }\n\n  handleCloseRedirect = () => {\n    this.setState({ routeguarding: false });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  setRef = (ref) => {\n    this.roomclicks.push(ref);\n  }\n\n  \n  renderRoom = (room) => {\n    if (room.open === true) {\n      if (room.id !== \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\" && this.state.tasks.every(t => room.tasks_tags && room.tasks_tags.includes(t))) {\n        return <StreamingCard info={room}></StreamingCard>;\n      }\n    }\n  }\n\n  updateReduxTasks = (e) => {\n    e.preventDefault();\n  \n   if (e.target.className === \"unselected-button\") {\n    const helper = this.state.reduxtasks;\n    helper.push(e.target.id);\n    this.setState({ reduxtasks : helper });\n    e.target.className = \"selected-button\";\n   }\n    else {\n      const newfilters = this.state.reduxtasks.filter(tag => tag !== e.target.id);\n      this.setState({ reduxtasks : newfilters });\n      e.target.className = \"unselected-button\";\n    }\n  }\n\n\n  updateTasks = (e) => {\n    e.preventDefault();\n   if (e.target.className === \"unselected-button\") {\n    const helper = this.state.tasks;\n    helper.push(e.target.id);\n    this.setState({ tasks : helper });\n    e.target.className = \"selected-button\";\n   }\n    else {\n      const newfilters = this.state.tasks.filter(tag => tag !== e.target.id);\n      this.setState({ tasks : newfilters });\n      e.target.className = \"unselected-button\";\n    }\n  }\n\n  showFilter = (e) => {\n    e.preventDefault();\n    this.setState({\n      filterVisibility: true\n    })\n  }\n\n  closeFilter = () => {\n    this.setState({\n      filterVisibility: false\n    })\n  }\n  \n\n  render() {\n\n    const { auth, rooms, profile } = this.props;\n\n    let founderprofile;\n    if (rooms) {\n      const founder = rooms.find(element => element.id === \"hAOhg4jmoHVsjQ0nRva0l4ElBzk2\");\n      if (founder.open === true) {\n        founderprofile = <StreamingCard info={founder}></StreamingCard>;\n      }\n      \n    }\n\n\n    return (\n\n      <div>\n\n\n        <Helmet>\n          <title>Join/Start a Live Stream and Start Working | Salon</title>\n        </Helmet>\n      {auth.uid || (auth.isEmpty && auth.isLoaded) ? \n      <div>\n        {<NavBar />}\n\n        {sessionStorage.noFirstVisit === 1 ? <Alert  style={{ width: \"600px\", position: \"absolute\", top: \"10%\", left: \"20%\" }} variant=\"warning\">LOL Bear with the simplicity of the website! We will make it more like an actual live streaming site if people find it to be useful.😣</Alert> : null }\n\n        {auth.uid ?\n           <div className=\"chatbox-header\">\n             <ChatBox roomid={auth.uid} />\n           </div>\n           : null}\n\n       \n          <Container fluid>\n            \n          <div>\n        <Button className=\"update-button\" onClick={this.handleShow} style={{ position: \"absolute\", top: \"15%\", fontSize: \"large\", fontFamily: \"Comic Sans MS, cursive, sans-serif\"}}>Start/update streaming</Button>\n        </div>\n\n        <div>\n        <Button variant=\"success\" onClick={this.showFilter} style={{ marginLeft: \"70px\", position: \"absolute\", top: \"25%\", fontFamily: \"Lucida Console, Monaco, monospace\", fontSize: \"large\" }}>Filter by tags</Button>\n        </div>\n        \n            <Modal show={this.state.filterVisibility} onHide={this.closeFilter}>\n            <div className=\"form-inline\" style={{ margin: \"5px \"}}id=\"filters\">\n              {taskfilters.map(filter => {\n                return (\n                  <div className={this.state.tasks && this.state.tasks.includes(filter) ? \"selected-button\" : \"unselected-button\"} id={filter} onClick={this.updateTasks}>\n                    {filter}\n                    </div>\n                );\n              })}\n            </div>\n            </Modal>\n           \n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton></Modal.Header>\n          <Modal.Body>\n            \n            <form onSubmit={this.handleSubmit}>\n            <div style={{ marginBottom: \"20px\"}}>\n              <span style={{ fontSize: \"large\", fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"}}>Meeting link:</span>\n              <input id=\"link\" value={this.state.link} onChange={this.handleChange} required></input>\n            </div>\n\n            <div style={{ marginBottom: \"20px\"}}>\n              <span style={{ fontSize: \"large\", fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"}}>Enter a description:</span>\n              <textarea id=\"description\" value={this.state.description} onChange={this.handleChange} required></textarea>\n              </div>\n\n              <div style={{ marginBottom: \"20px\"}}>\n              <span style={{ fontSize: \"large\", fontFamily: \"Trebuchet MS, Helvetica, sans-serif\"}}>Select a few tags:</span>\n                    <div className=\"form-inline\">\n                    {taskfilters.map(filter => {\n                      return (\n                        <div className={this.state.reduxtasks && this.state.reduxtasks.includes(filter) ? \"selected-button\" : \"unselected-button\" } id={filter} onClick={this.updateReduxTasks}>\n                          {filter}\n                        </div>\n                      )\n                    })}\n                    </div>\n                    </div>\n\n              <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </form>\n          </Modal.Body>\n        </Modal>\n\n        <Modal show={this.state.routeguarding} onHide={this.handleCloseRedirect}>\n          <Modal.Header closeButton></Modal.Header>\n          <Modal.Body>\n            Sign up to create a profile before streaming so that other users can know more about you!😊\n          </Modal.Body>\n        </Modal>\n\n\n        <Container fluid style={{ position: \"absolute\", top: \"30%\", zIndex: \"-1\"}}>\n        <div className=\"form-inline\" ref={this.roomclicks}>\n        {founderprofile}\n        { rooms && rooms.map (room => {\n          return this.renderRoom(room);  \n        })\n      }\n        \n\n        </div>\n        </Container>\n\n\n        </Container>\n \n\n      </div>\n      : <div class=\"loader\"></div>}\n      </div>\n    );\n  }\n}\n/*\n{ rooms && rooms.map (room => {\n  return (\n    <StreamingCard info={room}></StreamingCard>\n  );\n  })  \n}\n*/\n  /*\n  state = {\n\n        areasofinterest: [\"Math\", \"Physics\", \"Science\",\"Algebra\",\n         \"Biology\", \"Spanish\", \"Stats\", \"Calculus I\", \"Calculus II\",\"French\",\n          \"English\", \"Science\",\"Math\", \"Physics\", \"Science\"],\n    }\n    render() {\n\n      return (\n        <div>\n        {<Navbar />}\n        <div className='container'>\n        <h2>Live streaming rooms <br/>   </h2>\n          <div className=\"row\">\n          {this.state.areasofinterest.map(function (i) {\n              return   (\n                <div className=\"column\">\n                <CardDeck  className=\"chat_room_card\" >\n                  <Card border='success'>\n                    <Card.Body className=''>\n                      <Card.Title className=\"text-center\">{i}</Card.Title>\n\n                      <Card.Text>\n\n                      </Card.Text>\n                      <Button variant='success'>Join room</Button>\n                    </Card.Body>\n                  </Card>\n\n                </CardDeck>\n                </div>\n\n              )})}\n              </div>\n              <div className='title'>\n          <h1 className='title_font'>🧙‍♂️salon.app</h1>\n          </div><br/>\n          </div>\n          </div>\n      );\n        }\n        */\n\nconst mapStateToProps = (state) => {\n  return {\n    rooms: state.firestore.ordered.rooms,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, {startStreaming}),\n  firestoreConnect([\n    { collection: 'rooms' }\n  ])\n)(StreamingPlaza);\n\n\n\n/*\n      <Container fluid style={{ position: \"absolute\", top: \"30%\", zIndex: \"-1\"}}>\n        <div className=\"form-inline\">\n        {founderprofile}\n        { rooms && rooms.map (room => {\n          return this.renderRoom(room);  \n        })\n      }\n        </div>\n        </Container>\n        */"]},"metadata":{},"sourceType":"module"}