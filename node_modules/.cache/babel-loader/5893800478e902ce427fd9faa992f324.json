{"ast":null,"code":"import _classCallCheck from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/liu550/Desktop/salon_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import ChatWindow from'./chatwindow.js';import{Button}from'react-bootstrap';import\"./component.css\";import firebase from'../config/firebaseconfig';import ChatContainer from'./chatbox2.js';import ChatSection from'./chatsection.js';var ChatBox=/*#__PURE__*/function(_Component){_inherits(ChatBox,_Component);var _super=_createSuper(ChatBox);function ChatBox(props){var _this;_classCallCheck(this,ChatBox);_this=_super.call(this,props);_this.handleOpen=function(chat){_this.setState({chatwindow:true,chat:chat});};_this.openChat=function(e){e.preventDefault();document.getElementById(\"notifications\").className=\"chatbox-toggle-buttons\";if(_this.state.shownotifications===true){_this.setState({shownotifications:false});}_this.setState({chatbox:!_this.state.chatbox});if(e.target.className===\"chatbox-toggle-buttons\"){e.target.className=\"selected-chatbox-toggle-buttons\";}else e.target.className=\"chatbox-toggle-buttons\";};_this.openNotifications=function(e){e.preventDefault();document.getElementById(\"chat\").className=\"chatbox-toggle-buttons\";if(_this.state.chatbox===true){_this.setState({chatbox:false});}_this.setState({shownotifications:!_this.state.shownotifications});if(e.target.className===\"chatbox-toggle-buttons\"){e.target.className=\"selected-chatbox-toggle-buttons\";}else e.target.className=\"chatbox-toggle-buttons\";};_this.orderList=function(list){var chatlist=list.sort(function(a,b){return a.time-b.time;});var chatlistandnotifications=[];for(var i=0;i<chatlist.length;i++){firebase.firestore().collection(\"chats\").doc(chatlist[i].messages).onSnapshot(function(doc){var chatinfo=doc.data().chats_info;if(chatinfo&&chatinfo[chatinfo.length-1].from!==_this.props.auth.uid){_this.setState(function(prevState){return{notifications:prevState.notifications+1};});}});}var chatnumber=0;chatlist&&chatlist.map(function(chat){chatnumber=chatnumber+chat.notifications;console.log(chatnumber);});_this.setState({chatlist:chatlist,numberofchatnotifications:chatnumber});};_this.state={chatbox:false,shownotifications:false,chatwindow:false,chat:\"\",chatlist:[],notifications:[],numberofchatnotifications:0};_this.handleOpen=_this.handleOpen.bind(_assertThisInitialized(_this));_this.openChat=_this.openChat.bind(_assertThisInitialized(_this));_this.openNotifications=_this.openNotifications.bind(_assertThisInitialized(_this));return _this;}_createClass(ChatBox,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var list=this.props.profile.chats_history;if(list){this.orderList(list);}if(this.props.auth.uid){console.log(\"which part is first\");var participants=[];firebase.firestore().collection(\"rooms\").doc(this.props.auth.uid).get().then(function(doc){if(doc.exists){if(doc.data().open===true){participants=doc.data().participants;return participants;}}}).then(function(participants){_this2.setState({notifications:participants});});}}/*\n    componentDidUpdate() {\n        if (this.props.profile.chats_history) {\n            this.orderList(this.props.profile.chats_history)\n        }\n        if (this.props.auth.uid) {\n        var participants = [];\n        firebase.firestore().collection(\"rooms\").doc(this.props.auth.uid).get()\n        .then((doc) => {\n            if (doc.exists) {\n                if (doc.data().open === true) {\n                    participants = doc.data().participants;\n                    return participants;\n                }\n            }\n        })\n        .then((participants) => {\n            this.setState({\n                notifications: participants\n            })\n        })\n    }\n    }\n*/},{key:\"render\",value:function render(){var _this3=this;var box;if(this.state.chatbox){box=/*#__PURE__*/React.createElement(\"div\",{className:\"chatbox-container\"},this.state.chatlist&&this.state.chatlist.map(function(chat){return/*#__PURE__*/React.createElement(ChatSection,{chat:chat})/*\n                    <button className=\"chatbox-section\" onClick={() => this.handleOpen(chat)}>\n                        <img src={chat.friend_image} style={{ width: \"40px\", height: \"40px\" }}></img>\n                        {chat.friend}\n                { chat.notifications > 0 ? <div className=\"notification\" style={{ float: \"right\"}}>{chat.notifications}</div> : null}\n                    </button>\n                    */;}));}else if(this.state.shownotifications){box=/*#__PURE__*/React.createElement(\"div\",{className:\"chatbox-container\"},this.state.notifications&&this.state.notifications.map(function(notification){return/*#__PURE__*/React.createElement(\"button\",{className:\"chatbox-section\",onClick:function onClick(){return _this3.handleOpen(notification);}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-inline\"},/*#__PURE__*/React.createElement(\"img\",{src:notification.image,style:{width:\"40px\",height:\"40px\"}}),notification.name,\" joins your session at \",notification.time));}));}var chatlist=this.props.chatshistory;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"chatbox-toggle\"},/*#__PURE__*/React.createElement(\"button\",{id:\"notifications\",className:\"chatbox-toggle-buttons\",onClick:this.openNotifications},\"Notifications\"),/*#__PURE__*/React.createElement(\"button\",{id:\"chat\",className:\"chatbox-toggle-buttons\",onClick:this.openChat},\"Chat box\",this.state.numberofchatnotifications>0?/*#__PURE__*/React.createElement(\"div\",{className:\"notification\",style:{float:\"right\"}},this.state.numberofchatnotifications):null)),box,this.state.chatwindow?/*#__PURE__*/React.createElement(ChatWindow,{chat:this.state.chat}):null);}}]);return ChatBox;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.firebase.auth,profile:state.firebase.profile};};export default connect(mapStateToProps)(ChatBox);","map":{"version":3,"sources":["/Users/liu550/Desktop/salon_project/src/components/chatbox2.js"],"names":["React","Component","connect","ChatWindow","Button","firebase","ChatContainer","ChatSection","ChatBox","props","handleOpen","chat","setState","chatwindow","openChat","e","preventDefault","document","getElementById","className","state","shownotifications","chatbox","target","openNotifications","orderList","list","chatlist","sort","a","b","time","chatlistandnotifications","i","length","firestore","collection","doc","messages","onSnapshot","chatinfo","data","chats_info","from","auth","uid","prevState","notifications","chatnumber","map","console","log","numberofchatnotifications","bind","profile","chats_history","participants","get","then","exists","open","box","notification","image","width","height","name","chatshistory","float","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ChatWindow from './chatwindow.js';\nimport { Button } from 'react-bootstrap';\nimport \"./component.css\";\nimport firebase from '../config/firebaseconfig';\nimport ChatContainer from './chatbox2.js';\nimport ChatSection from './chatsection.js';\n\n\nclass ChatBox extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            chatbox: false,\n            shownotifications: false,\n            chatwindow: false,\n            chat: \"\",\n            chatlist: [],\n            notifications: [],\n            numberofchatnotifications: 0\n        }\n        this.handleOpen = this.handleOpen.bind(this);\n        this.openChat = this.openChat.bind(this);\n        this.openNotifications = this.openNotifications.bind(this);\n    }\n\n    handleOpen = (chat) => {\n        this.setState({\n            chatwindow: true,\n            chat: chat\n        })\n    }\n\n    openChat = (e) => {\n        e.preventDefault();\n        document.getElementById(\"notifications\").className = \"chatbox-toggle-buttons\";\n        if (this.state.shownotifications === true) {\n            this.setState({\n                shownotifications: false\n            })\n        }\n        this.setState({\n            chatbox: !this.state.chatbox\n        });\n        if (e.target.className === \"chatbox-toggle-buttons\") {\n            e.target.className = \"selected-chatbox-toggle-buttons\";\n        } else e.target.className = \"chatbox-toggle-buttons\";\n    }\n\n    openNotifications = (e) => {\n        e.preventDefault();\n        document.getElementById(\"chat\").className = \"chatbox-toggle-buttons\";\n        if (this.state.chatbox === true) {\n            this.setState({\n                chatbox: false\n            })\n        }\n        this.setState({\n            shownotifications: !this.state.shownotifications\n        });\n        if (e.target.className === \"chatbox-toggle-buttons\") {\n            e.target.className = \"selected-chatbox-toggle-buttons\";\n        } else e.target.className = \"chatbox-toggle-buttons\";\n    }\n\n    orderList = (list) => {\n        const chatlist = list.sort(function(a, b) {return a.time - b.time});\n        var chatlistandnotifications = [];\n\n        for (let i = 0; i < chatlist.length; i++) {\n            firebase.firestore().collection(\"chats\").doc(chatlist[i].messages)\n            .onSnapshot((doc) => {\n                const chatinfo = doc.data().chats_info;\n                if (chatinfo && chatinfo[chatinfo.length-1].from !== this.props.auth.uid) {\n                    this.setState(prevState => {\n                        return {notifications: prevState.notifications + 1};\n                    })\n                }\n            \n            })\n        }\n        var chatnumber = 0;\n        chatlist && chatlist.map((chat) => {\n            chatnumber = chatnumber + chat.notifications;\n            console.log(chatnumber);\n        })\n        this.setState({\n            chatlist: chatlist,\n            numberofchatnotifications: chatnumber\n        })\n    }\n\n    componentDidMount() {\n        const list = this.props.profile.chats_history;\n        if (list) {\n            this.orderList(list);\n        }\n        if (this.props.auth.uid) {\n        console.log(\"which part is first\");\n        var participants = [];\n        firebase.firestore().collection(\"rooms\").doc(this.props.auth.uid).get()\n        .then((doc) => {\n            if (doc.exists) {\n                if (doc.data().open === true) {\n                    participants = doc.data().participants;\n                    return participants;\n                }\n            }\n        })\n        .then((participants) => {\n            this.setState({\n                notifications: participants\n            })\n        })\n    }\n    }\n\n/*\n    componentDidUpdate() {\n        if (this.props.profile.chats_history) {\n            this.orderList(this.props.profile.chats_history)\n        }\n        if (this.props.auth.uid) {\n        var participants = [];\n        firebase.firestore().collection(\"rooms\").doc(this.props.auth.uid).get()\n        .then((doc) => {\n            if (doc.exists) {\n                if (doc.data().open === true) {\n                    participants = doc.data().participants;\n                    return participants;\n                }\n            }\n        })\n        .then((participants) => {\n            this.setState({\n                notifications: participants\n            })\n        })\n    }\n    }\n*/\n\n    render() {\n\n        let box;\n        if (this.state.chatbox) {\n            box =   <div className=\"chatbox-container\">\n            {this.state.chatlist && this.state.chatlist.map((chat) => {\n                return (\n                    <ChatSection chat={chat} />\n                    /*\n                    <button className=\"chatbox-section\" onClick={() => this.handleOpen(chat)}>\n                        <img src={chat.friend_image} style={{ width: \"40px\", height: \"40px\" }}></img>\n                        {chat.friend}\n                { chat.notifications > 0 ? <div className=\"notification\" style={{ float: \"right\"}}>{chat.notifications}</div> : null}\n                    </button>\n                    */\n                )           \n          })}\n          </div>\n        }\n        else if (this.state.shownotifications) {\n            box = <div className=\"chatbox-container\">\n            {this.state.notifications && this.state.notifications.map((notification) => {\n                return (\n                    <button className=\"chatbox-section\" onClick={() => this.handleOpen(notification)}>\n                        <div className=\"form-inline\">\n                        <img src={notification.image} style={{ width: \"40px\", height: \"40px\" }}></img>\n                        {notification.name} joins your session at {notification.time}\n                        </div>\n                    </button>\n                )           \n        })}\n            </div>\n        }\n\n        const chatlist = this.props.chatshistory;\n\n\n\n        return (\n           \n            \n            <div>\n           \n\n            <div className=\"chatbox-toggle\">\n                <button id=\"notifications\" className=\"chatbox-toggle-buttons\" onClick={this.openNotifications}>Notifications</button>\n                <button id=\"chat\" className=\"chatbox-toggle-buttons\" onClick={this.openChat}>\n                    Chat box\n                    {this.state.numberofchatnotifications > 0 ? <div className=\"notification\" style={{ float: \"right\"}}>{this.state.numberofchatnotifications}</div> : null}\n                </button>\n            </div>\n\n            \n            {box}\n            \n        { this.state.chatwindow ? <ChatWindow chat={this.state.chat}></ChatWindow> : null}\n        \n        </div>\n\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n    }\n  }\n      \n  export default \n  connect(mapStateToProps)\n  (ChatBox);"]},"metadata":{},"sourceType":"module"}